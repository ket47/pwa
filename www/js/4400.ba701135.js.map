{"version":3,"file":"js/4400.ba701135.js","mappings":"mLAMA,MAAMA,EAAiB,CACnBC,OAAQ,UACRC,QAAS,GACTC,WAAY,2BACZC,GAAI,UACJC,SAAU,IAEP,MAAMC,UAA4B,KACrC,cAAMC,CAASC,GAEX,OADAC,QAAQC,KAAK,iCAAkCF,GACxCR,CACX,CACA,UAAMW,CAAKH,GAEP,OADAC,QAAQC,KAAK,iCAAkCF,GACxCR,CACX,CACA,yBAAMY,GAEF,OADAH,QAAQC,KAAK,yCACN,CAAEG,SAAS,EACtB,CACA,SAAMC,CAAIN,GACNC,QAAQC,KAAK,kCAAmCF,EAEpD,CACA,iBAAMO,GAEF,OADAN,QAAQC,KAAK,wBACN,CAAEM,SAAU,UACvB,CACA,uBAAMC,GAEF,OADAR,QAAQC,KAAK,6BACN,CAAER,QAAS,UACtB,CACA,sBAAMgB,GAEF,OADAT,QAAQC,KAAK,oCACN,CAAER,QAAS,UACtB,CACA,YAAM,CAAOM,GACTC,QAAQC,KAAK,8BAA+BF,EAChD,CACA,UAAMW,GAEF,OADAV,QAAQC,KAAK,8BACN,CAAEU,QAAS,GACtB,CACA,WAAMC,CAAMb,GACRC,QAAQC,KAAK,8BAA+BF,EAChD,CACA,aAAMc,GAEF,OADAb,QAAQC,KAAK,oCACN,CAAEa,OAAQvB,EAAgBwB,OAAQ,QAC7C,CACA,YAAMC,GACFhB,QAAQC,KAAK,sCAEjB,CACA,eAAMgB,GAEF,OADAjB,QAAQC,KAAK,0CACN,CACHR,QAAS,QACTyB,QAAS,yCAEjB,CACA,gBAAMC,CAAWpB,GAEb,OADAC,QAAQC,KAAK,2BAA4BF,GAClC,CACHP,OAAQ,QACR4B,MAAO,2BAEf,CACA,kBAAMC,CAAatB,GACfC,QAAQC,KAAK,6BAA8BF,EAE/C,CACA,iBAAMuB,CAAYvB,GACdC,QAAQC,KAAK,4BAA6BF,EAE9C,CACA,gBAAMwB,GAEF,OADAvB,QAAQC,KAAK,4BACN,CACHT,OAAQ,QACR4B,MAAO,2BAEf,CACA,oBAAMI,GAEF,OADAxB,QAAQC,KAAK,kCACN,CAAEa,OAAQvB,EACrB,CACA,mBAAMkC,CAAc1B,GAChBC,QAAQC,KAAK,8BAA2C,OAAZF,QAAgC,IAAZA,OAAqB,EAASA,EAAQ2B,gBAE1G,CACA,cAAMC,CAASC,GACX5B,QAAQC,KAAK,yBAA0B2B,EAE3C,CACA,iBAAMC,GACF7B,QAAQC,KAAK,4BAEjB,E","sources":["webpack://Tezkel/./node_modules/@capgo/capacitor-updater/dist/esm/web.js"],"sourcesContent":["/*\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\nimport { WebPlugin } from \"@capacitor/core\";\nconst BUNDLE_BUILTIN = {\n    status: \"success\",\n    version: \"\",\n    downloaded: \"1970-01-01T00:00:00.000Z\",\n    id: \"builtin\",\n    checksum: \"\",\n};\nexport class CapacitorUpdaterWeb extends WebPlugin {\n    async download(options) {\n        console.warn(\"Cannot download version in web\", options);\n        return BUNDLE_BUILTIN;\n    }\n    async next(options) {\n        console.warn(\"Cannot set next version in web\", options);\n        return BUNDLE_BUILTIN;\n    }\n    async isAutoUpdateEnabled() {\n        console.warn(\"Cannot get isAutoUpdateEnabled in web\");\n        return { enabled: false };\n    }\n    async set(options) {\n        console.warn(\"Cannot set active bundle in web\", options);\n        return;\n    }\n    async getDeviceId() {\n        console.warn(\"Cannot get ID in web\");\n        return { deviceId: \"default\" };\n    }\n    async getBuiltinVersion() {\n        console.warn(\"Cannot get version in web\");\n        return { version: \"default\" };\n    }\n    async getPluginVersion() {\n        console.warn(\"Cannot get plugin version in web\");\n        return { version: \"default\" };\n    }\n    async delete(options) {\n        console.warn(\"Cannot delete bundle in web\", options);\n    }\n    async list() {\n        console.warn(\"Cannot list bundles in web\");\n        return { bundles: [] };\n    }\n    async reset(options) {\n        console.warn(\"Cannot reset version in web\", options);\n    }\n    async current() {\n        console.warn(\"Cannot get current bundle in web\");\n        return { bundle: BUNDLE_BUILTIN, native: \"0.0.0\" };\n    }\n    async reload() {\n        console.warn(\"Cannot reload current bundle in web\");\n        return;\n    }\n    async getLatest() {\n        console.warn(\"Cannot getLatest current bundle in web\");\n        return {\n            version: \"0.0.0\",\n            message: \"Cannot getLatest current bundle in web\",\n        };\n    }\n    async setChannel(options) {\n        console.warn(\"Cannot setChannel in web\", options);\n        return {\n            status: \"error\",\n            error: \"Cannot setChannel in web\",\n        };\n    }\n    async unsetChannel(options) {\n        console.warn(\"Cannot unsetChannel in web\", options);\n        return;\n    }\n    async setCustomId(options) {\n        console.warn(\"Cannot setCustomId in web\", options);\n        return;\n    }\n    async getChannel() {\n        console.warn(\"Cannot getChannel in web\");\n        return {\n            status: \"error\",\n            error: \"Cannot getChannel in web\",\n        };\n    }\n    async notifyAppReady() {\n        console.warn(\"Cannot notify App Ready in web\");\n        return { bundle: BUNDLE_BUILTIN };\n    }\n    async setMultiDelay(options) {\n        console.warn(\"Cannot setMultiDelay in web\", options === null || options === void 0 ? void 0 : options.delayConditions);\n        return;\n    }\n    async setDelay(option) {\n        console.warn(\"Cannot setDelay in web\", option);\n        return;\n    }\n    async cancelDelay() {\n        console.warn(\"Cannot cancelDelay in web\");\n        return;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["BUNDLE_BUILTIN","status","version","downloaded","id","checksum","CapacitorUpdaterWeb","download","options","console","warn","next","isAutoUpdateEnabled","enabled","set","getDeviceId","deviceId","getBuiltinVersion","getPluginVersion","list","bundles","reset","current","bundle","native","reload","getLatest","message","setChannel","error","unsetChannel","setCustomId","getChannel","notifyAppReady","setMultiDelay","delayConditions","setDelay","option","cancelDelay"],"sourceRoot":""}