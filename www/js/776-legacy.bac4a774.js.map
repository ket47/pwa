{"version":3,"file":"js/776-legacy.bac4a774.js","mappings":"mLAEO,MAAMA,UAAmB,KAC5BC,cACIC,SAASC,WACTC,KAAKC,kBAAmB,CAC5B,CACAC,aAAaC,GACT,MAAMC,EAAUJ,KAAKK,iBAA6B,OAAZF,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,OAChGN,KAAKO,mBAAmBH,EAC5B,CACAF,mBAAmBC,GACf,MAAMC,EAAUJ,KAAKQ,uBAAmC,OAAZL,QAAgC,IAAZA,OAAqB,EAASA,EAAQM,MACtGT,KAAKO,mBAAmBH,EAC5B,CACAF,cAAcC,GACV,MAAMO,GAAwB,OAAZP,QAAgC,IAAZA,OAAqB,EAASA,EAAQO,WAAa,IACzFV,KAAKO,mBAAmB,CAACG,GAC7B,CACAR,uBACIF,KAAKC,kBAAmB,CAC5B,CACAC,yBACQF,KAAKC,kBACLD,KAAKO,mBAAmB,CAAC,IAEjC,CACAL,qBACIF,KAAKC,kBAAmB,CAC5B,CACAI,iBAAiBC,EAAQ,KAAYK,OACjC,OAAIL,IAAU,KAAYM,OACf,CAAC,IAEHN,IAAU,KAAYO,MACpB,CAAC,IAEL,CAAC,GACZ,CACAL,uBAAuBC,EAAO,KAAiBK,SAC3C,OAAIL,IAAS,KAAiBM,QACnB,CAAC,GAAI,GAAI,GAAI,GAAI,IAEnBN,IAAS,KAAiBO,MACxB,CAAC,GAAI,GAAI,IAEb,CAAC,GAAI,GAAI,GACpB,CACAT,mBAAmBH,GACf,IAAIa,UAAUC,QAIV,MAAMlB,KAAKmB,YAAY,4CAHvBF,UAAUC,QAAQd,EAK1B,E","sources":["webpack://tezkel/./node_modules/@capacitor/haptics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport { ImpactStyle, NotificationType } from './definitions';\nexport class HapticsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.selectionStarted = false;\n    }\n    async impact(options) {\n        const pattern = this.patternForImpact(options === null || options === void 0 ? void 0 : options.style);\n        this.vibrateWithPattern(pattern);\n    }\n    async notification(options) {\n        const pattern = this.patternForNotification(options === null || options === void 0 ? void 0 : options.type);\n        this.vibrateWithPattern(pattern);\n    }\n    async vibrate(options) {\n        const duration = (options === null || options === void 0 ? void 0 : options.duration) || 300;\n        this.vibrateWithPattern([duration]);\n    }\n    async selectionStart() {\n        this.selectionStarted = true;\n    }\n    async selectionChanged() {\n        if (this.selectionStarted) {\n            this.vibrateWithPattern([70]);\n        }\n    }\n    async selectionEnd() {\n        this.selectionStarted = false;\n    }\n    patternForImpact(style = ImpactStyle.Heavy) {\n        if (style === ImpactStyle.Medium) {\n            return [43];\n        }\n        else if (style === ImpactStyle.Light) {\n            return [20];\n        }\n        return [61];\n    }\n    patternForNotification(type = NotificationType.Success) {\n        if (type === NotificationType.Warning) {\n            return [30, 40, 30, 50, 60];\n        }\n        else if (type === NotificationType.Error) {\n            return [27, 45, 50];\n        }\n        return [35, 65, 21];\n    }\n    vibrateWithPattern(pattern) {\n        if (navigator.vibrate) {\n            navigator.vibrate(pattern);\n        }\n        else {\n            throw this.unavailable('Browser does not support the vibrate API');\n        }\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["HapticsWeb","constructor","super","arguments","this","selectionStarted","async","options","pattern","patternForImpact","style","vibrateWithPattern","patternForNotification","type","duration","Heavy","Medium","Light","Success","Warning","Error","navigator","vibrate","unavailable"],"sourceRoot":""}