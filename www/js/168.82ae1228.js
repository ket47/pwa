"use strict";(self["webpackChunktezkel"]=self["webpackChunktezkel"]||[]).push([[168],{3168:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startTapClick\": function() { return /* binding */ startTapClick; }\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6587);\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\nconst startTapClick = (config) => {\n  let lastTouch = -MOUSE_WAIT * 10;\n  let lastActivated = 0;\n  let activatableEle;\n  let activeRipple;\n  let activeDefer;\n  const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  const clearDefers = new WeakMap();\n  // Touch Events\n  const onTouchStart = (ev) => {\n    lastTouch = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev);\n    pointerDown(ev);\n  };\n  const onTouchEnd = (ev) => {\n    lastTouch = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev);\n    pointerUp(ev);\n  };\n  const onMouseDown = (ev) => {\n    const t = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n  const onMouseUp = (ev) => {\n    const t = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.u)(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n  const onContextMenu = (ev) => {\n    pointerUp(ev);\n  };\n  const cancelActive = () => {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n  const pointerDown = (ev) => {\n    if (activatableEle) {\n      return;\n    }\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n  const pointerUp = (ev) => {\n    setActivatedElement(undefined, ev);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    const { x, y } = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.q)(ev);\n    // deactivate selected\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(() => {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n    activatableEle = el;\n  };\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    const rippleEffect = useRippleEffect && getRippleEffect(el);\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n  const removeRipple = () => {\n    if (activeRipple !== undefined) {\n      activeRipple.then((remove) => remove());\n      activeRipple = undefined;\n    }\n  };\n  const removeActivated = (smooth) => {\n    removeRipple();\n    const active = activatableEle;\n    if (!active) {\n      return;\n    }\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    }\n    else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  const doc = document;\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  /**\n   * Tap click effects such as the ripple effect should\n   * not happen when scrolling. For example, if a user scrolls\n   * the page but also happens to do a touchstart on a button\n   * as part of the scroll, the ripple effect should not\n   * be dispatched. The ripple effect should only happen\n   * if the button is activated and the page is not scrolling.\n   *\n   * pointercancel is dispatched on a gesture when scrolling\n   * starts, so this lets us avoid having to listen for\n   * ion-content's scroll events.\n   */\n  doc.addEventListener('pointercancel', cancelActive, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n  doc.addEventListener('contextmenu', onContextMenu, true);\n};\nconst getActivatableTarget = (ev) => {\n  if (ev.composedPath) {\n    /**\n     * composedPath returns EventTarget[]. However,\n     * objects other than Element can be targets too.\n     * For example, AudioContext can be a target. In this\n     * case, we know that the event is a UIEvent so we\n     * can assume that the path will contain either Element\n     * or ShadowRoot.\n     */\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (!(el instanceof ShadowRoot) && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  }\n  else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\nconst isInstant = (el) => {\n  return el.classList.contains('ion-activatable-instant');\n};\nconst getRippleEffect = (el) => {\n  if (el.shadowRoot) {\n    const ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n    if (ripple) {\n      return ripple;\n    }\n  }\n  return el.querySelector('ion-ripple-effect');\n};\nconst ACTIVATED = 'ion-activated';\nconst ADD_ACTIVATED_DEFERS = 200;\nconst CLEAR_STATE_DEFERS = 200;\nconst MOUSE_WAIT = 2500;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE2OC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUMyRDs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsOENBQUc7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUFHO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOENBQUc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOENBQUc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU8sRUFBRSw4Q0FBWTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlemtlbC8uL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9jb21wb25lbnRzL3RhcC1jbGljay5qcz9lODVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG5pbXBvcnQgeyB1IGFzIG5vdywgcSBhcyBwb2ludGVyQ29vcmQgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuXG5jb25zdCBzdGFydFRhcENsaWNrID0gKGNvbmZpZykgPT4ge1xuICBsZXQgbGFzdFRvdWNoID0gLU1PVVNFX1dBSVQgKiAxMDtcbiAgbGV0IGxhc3RBY3RpdmF0ZWQgPSAwO1xuICBsZXQgYWN0aXZhdGFibGVFbGU7XG4gIGxldCBhY3RpdmVSaXBwbGU7XG4gIGxldCBhY3RpdmVEZWZlcjtcbiAgY29uc3QgdXNlUmlwcGxlRWZmZWN0ID0gY29uZmlnLmdldEJvb2xlYW4oJ2FuaW1hdGVkJywgdHJ1ZSkgJiYgY29uZmlnLmdldEJvb2xlYW4oJ3JpcHBsZUVmZmVjdCcsIHRydWUpO1xuICBjb25zdCBjbGVhckRlZmVycyA9IG5ldyBXZWFrTWFwKCk7XG4gIC8vIFRvdWNoIEV2ZW50c1xuICBjb25zdCBvblRvdWNoU3RhcnQgPSAoZXYpID0+IHtcbiAgICBsYXN0VG91Y2ggPSBub3coZXYpO1xuICAgIHBvaW50ZXJEb3duKGV2KTtcbiAgfTtcbiAgY29uc3Qgb25Ub3VjaEVuZCA9IChldikgPT4ge1xuICAgIGxhc3RUb3VjaCA9IG5vdyhldik7XG4gICAgcG9pbnRlclVwKGV2KTtcbiAgfTtcbiAgY29uc3Qgb25Nb3VzZURvd24gPSAoZXYpID0+IHtcbiAgICBjb25zdCB0ID0gbm93KGV2KSAtIE1PVVNFX1dBSVQ7XG4gICAgaWYgKGxhc3RUb3VjaCA8IHQpIHtcbiAgICAgIHBvaW50ZXJEb3duKGV2KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uTW91c2VVcCA9IChldikgPT4ge1xuICAgIGNvbnN0IHQgPSBub3coZXYpIC0gTU9VU0VfV0FJVDtcbiAgICBpZiAobGFzdFRvdWNoIDwgdCkge1xuICAgICAgcG9pbnRlclVwKGV2KTtcbiAgICB9XG4gIH07XG4gIGNvbnN0IG9uQ29udGV4dE1lbnUgPSAoZXYpID0+IHtcbiAgICBwb2ludGVyVXAoZXYpO1xuICB9O1xuICBjb25zdCBjYW5jZWxBY3RpdmUgPSAoKSA9PiB7XG4gICAgY2xlYXJUaW1lb3V0KGFjdGl2ZURlZmVyKTtcbiAgICBhY3RpdmVEZWZlciA9IHVuZGVmaW5lZDtcbiAgICBpZiAoYWN0aXZhdGFibGVFbGUpIHtcbiAgICAgIHJlbW92ZUFjdGl2YXRlZChmYWxzZSk7XG4gICAgICBhY3RpdmF0YWJsZUVsZSA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH07XG4gIGNvbnN0IHBvaW50ZXJEb3duID0gKGV2KSA9PiB7XG4gICAgaWYgKGFjdGl2YXRhYmxlRWxlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHNldEFjdGl2YXRlZEVsZW1lbnQoZ2V0QWN0aXZhdGFibGVUYXJnZXQoZXYpLCBldik7XG4gIH07XG4gIGNvbnN0IHBvaW50ZXJVcCA9IChldikgPT4ge1xuICAgIHNldEFjdGl2YXRlZEVsZW1lbnQodW5kZWZpbmVkLCBldik7XG4gIH07XG4gIGNvbnN0IHNldEFjdGl2YXRlZEVsZW1lbnQgPSAoZWwsIGV2KSA9PiB7XG4gICAgLy8gZG8gbm90aGluZ1xuICAgIGlmIChlbCAmJiBlbCA9PT0gYWN0aXZhdGFibGVFbGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY2xlYXJUaW1lb3V0KGFjdGl2ZURlZmVyKTtcbiAgICBhY3RpdmVEZWZlciA9IHVuZGVmaW5lZDtcbiAgICBjb25zdCB7IHgsIHkgfSA9IHBvaW50ZXJDb29yZChldik7XG4gICAgLy8gZGVhY3RpdmF0ZSBzZWxlY3RlZFxuICAgIGlmIChhY3RpdmF0YWJsZUVsZSkge1xuICAgICAgaWYgKGNsZWFyRGVmZXJzLmhhcyhhY3RpdmF0YWJsZUVsZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnRlcm5hbCBlcnJvcicpO1xuICAgICAgfVxuICAgICAgaWYgKCFhY3RpdmF0YWJsZUVsZS5jbGFzc0xpc3QuY29udGFpbnMoQUNUSVZBVEVEKSkge1xuICAgICAgICBhZGRBY3RpdmF0ZWQoYWN0aXZhdGFibGVFbGUsIHgsIHkpO1xuICAgICAgfVxuICAgICAgcmVtb3ZlQWN0aXZhdGVkKHRydWUpO1xuICAgIH1cbiAgICAvLyBhY3RpdmF0ZVxuICAgIGlmIChlbCkge1xuICAgICAgY29uc3QgZGVmZXJJZCA9IGNsZWFyRGVmZXJzLmdldChlbCk7XG4gICAgICBpZiAoZGVmZXJJZCkge1xuICAgICAgICBjbGVhclRpbWVvdXQoZGVmZXJJZCk7XG4gICAgICAgIGNsZWFyRGVmZXJzLmRlbGV0ZShlbCk7XG4gICAgICB9XG4gICAgICBjb25zdCBkZWxheSA9IGlzSW5zdGFudChlbCkgPyAwIDogQUREX0FDVElWQVRFRF9ERUZFUlM7XG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKEFDVElWQVRFRCk7XG4gICAgICBhY3RpdmVEZWZlciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBhZGRBY3RpdmF0ZWQoZWwsIHgsIHkpO1xuICAgICAgICBhY3RpdmVEZWZlciA9IHVuZGVmaW5lZDtcbiAgICAgIH0sIGRlbGF5KTtcbiAgICB9XG4gICAgYWN0aXZhdGFibGVFbGUgPSBlbDtcbiAgfTtcbiAgY29uc3QgYWRkQWN0aXZhdGVkID0gKGVsLCB4LCB5KSA9PiB7XG4gICAgbGFzdEFjdGl2YXRlZCA9IERhdGUubm93KCk7XG4gICAgZWwuY2xhc3NMaXN0LmFkZChBQ1RJVkFURUQpO1xuICAgIGNvbnN0IHJpcHBsZUVmZmVjdCA9IHVzZVJpcHBsZUVmZmVjdCAmJiBnZXRSaXBwbGVFZmZlY3QoZWwpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcHJlZmVyLW9wdGlvbmFsLWNoYWluXG4gICAgaWYgKHJpcHBsZUVmZmVjdCAmJiByaXBwbGVFZmZlY3QuYWRkUmlwcGxlKSB7XG4gICAgICByZW1vdmVSaXBwbGUoKTtcbiAgICAgIGFjdGl2ZVJpcHBsZSA9IHJpcHBsZUVmZmVjdC5hZGRSaXBwbGUoeCwgeSk7XG4gICAgfVxuICB9O1xuICBjb25zdCByZW1vdmVSaXBwbGUgPSAoKSA9PiB7XG4gICAgaWYgKGFjdGl2ZVJpcHBsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBhY3RpdmVSaXBwbGUudGhlbigocmVtb3ZlKSA9PiByZW1vdmUoKSk7XG4gICAgICBhY3RpdmVSaXBwbGUgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9O1xuICBjb25zdCByZW1vdmVBY3RpdmF0ZWQgPSAoc21vb3RoKSA9PiB7XG4gICAgcmVtb3ZlUmlwcGxlKCk7XG4gICAgY29uc3QgYWN0aXZlID0gYWN0aXZhdGFibGVFbGU7XG4gICAgaWYgKCFhY3RpdmUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgdGltZSA9IENMRUFSX1NUQVRFX0RFRkVSUyAtIERhdGUubm93KCkgKyBsYXN0QWN0aXZhdGVkO1xuICAgIGlmIChzbW9vdGggJiYgdGltZSA+IDAgJiYgIWlzSW5zdGFudChhY3RpdmUpKSB7XG4gICAgICBjb25zdCBkZWZlcklkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGFjdGl2ZS5jbGFzc0xpc3QucmVtb3ZlKEFDVElWQVRFRCk7XG4gICAgICAgIGNsZWFyRGVmZXJzLmRlbGV0ZShhY3RpdmUpO1xuICAgICAgfSwgQ0xFQVJfU1RBVEVfREVGRVJTKTtcbiAgICAgIGNsZWFyRGVmZXJzLnNldChhY3RpdmUsIGRlZmVySWQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGFjdGl2ZS5jbGFzc0xpc3QucmVtb3ZlKEFDVElWQVRFRCk7XG4gICAgfVxuICB9O1xuICBjb25zdCBkb2MgPSBkb2N1bWVudDtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ2lvbkdlc3R1cmVDYXB0dXJlZCcsIGNhbmNlbEFjdGl2ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0Jywgb25Ub3VjaFN0YXJ0LCB0cnVlKTtcbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoY2FuY2VsJywgb25Ub3VjaEVuZCwgdHJ1ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIG9uVG91Y2hFbmQsIHRydWUpO1xuICAvKipcbiAgICogVGFwIGNsaWNrIGVmZmVjdHMgc3VjaCBhcyB0aGUgcmlwcGxlIGVmZmVjdCBzaG91bGRcbiAgICogbm90IGhhcHBlbiB3aGVuIHNjcm9sbGluZy4gRm9yIGV4YW1wbGUsIGlmIGEgdXNlciBzY3JvbGxzXG4gICAqIHRoZSBwYWdlIGJ1dCBhbHNvIGhhcHBlbnMgdG8gZG8gYSB0b3VjaHN0YXJ0IG9uIGEgYnV0dG9uXG4gICAqIGFzIHBhcnQgb2YgdGhlIHNjcm9sbCwgdGhlIHJpcHBsZSBlZmZlY3Qgc2hvdWxkIG5vdFxuICAgKiBiZSBkaXNwYXRjaGVkLiBUaGUgcmlwcGxlIGVmZmVjdCBzaG91bGQgb25seSBoYXBwZW5cbiAgICogaWYgdGhlIGJ1dHRvbiBpcyBhY3RpdmF0ZWQgYW5kIHRoZSBwYWdlIGlzIG5vdCBzY3JvbGxpbmcuXG4gICAqXG4gICAqIHBvaW50ZXJjYW5jZWwgaXMgZGlzcGF0Y2hlZCBvbiBhIGdlc3R1cmUgd2hlbiBzY3JvbGxpbmdcbiAgICogc3RhcnRzLCBzbyB0aGlzIGxldHMgdXMgYXZvaWQgaGF2aW5nIHRvIGxpc3RlbiBmb3JcbiAgICogaW9uLWNvbnRlbnQncyBzY3JvbGwgZXZlbnRzLlxuICAgKi9cbiAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJjYW5jZWwnLCBjYW5jZWxBY3RpdmUsIHRydWUpO1xuICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgb25Nb3VzZURvd24sIHRydWUpO1xuICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIG9uTW91c2VVcCwgdHJ1ZSk7XG4gIGRvYy5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIG9uQ29udGV4dE1lbnUsIHRydWUpO1xufTtcbmNvbnN0IGdldEFjdGl2YXRhYmxlVGFyZ2V0ID0gKGV2KSA9PiB7XG4gIGlmIChldi5jb21wb3NlZFBhdGgpIHtcbiAgICAvKipcbiAgICAgKiBjb21wb3NlZFBhdGggcmV0dXJucyBFdmVudFRhcmdldFtdLiBIb3dldmVyLFxuICAgICAqIG9iamVjdHMgb3RoZXIgdGhhbiBFbGVtZW50IGNhbiBiZSB0YXJnZXRzIHRvby5cbiAgICAgKiBGb3IgZXhhbXBsZSwgQXVkaW9Db250ZXh0IGNhbiBiZSBhIHRhcmdldC4gSW4gdGhpc1xuICAgICAqIGNhc2UsIHdlIGtub3cgdGhhdCB0aGUgZXZlbnQgaXMgYSBVSUV2ZW50IHNvIHdlXG4gICAgICogY2FuIGFzc3VtZSB0aGF0IHRoZSBwYXRoIHdpbGwgY29udGFpbiBlaXRoZXIgRWxlbWVudFxuICAgICAqIG9yIFNoYWRvd1Jvb3QuXG4gICAgICovXG4gICAgY29uc3QgcGF0aCA9IGV2LmNvbXBvc2VkUGF0aCgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0aC5sZW5ndGggLSAyOyBpKyspIHtcbiAgICAgIGNvbnN0IGVsID0gcGF0aFtpXTtcbiAgICAgIGlmICghKGVsIGluc3RhbmNlb2YgU2hhZG93Um9vdCkgJiYgZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdpb24tYWN0aXZhdGFibGUnKSkge1xuICAgICAgICByZXR1cm4gZWw7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHJldHVybiBldi50YXJnZXQuY2xvc2VzdCgnLmlvbi1hY3RpdmF0YWJsZScpO1xuICB9XG59O1xuY29uc3QgaXNJbnN0YW50ID0gKGVsKSA9PiB7XG4gIHJldHVybiBlbC5jbGFzc0xpc3QuY29udGFpbnMoJ2lvbi1hY3RpdmF0YWJsZS1pbnN0YW50Jyk7XG59O1xuY29uc3QgZ2V0UmlwcGxlRWZmZWN0ID0gKGVsKSA9PiB7XG4gIGlmIChlbC5zaGFkb3dSb290KSB7XG4gICAgY29uc3QgcmlwcGxlID0gZWwuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCdpb24tcmlwcGxlLWVmZmVjdCcpO1xuICAgIGlmIChyaXBwbGUpIHtcbiAgICAgIHJldHVybiByaXBwbGU7XG4gICAgfVxuICB9XG4gIHJldHVybiBlbC5xdWVyeVNlbGVjdG9yKCdpb24tcmlwcGxlLWVmZmVjdCcpO1xufTtcbmNvbnN0IEFDVElWQVRFRCA9ICdpb24tYWN0aXZhdGVkJztcbmNvbnN0IEFERF9BQ1RJVkFURURfREVGRVJTID0gMjAwO1xuY29uc3QgQ0xFQVJfU1RBVEVfREVGRVJTID0gMjAwO1xuY29uc3QgTU9VU0VfV0FJVCA9IDI1MDA7XG5cbmV4cG9ydCB7IHN0YXJ0VGFwQ2xpY2sgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3168\n")}}]);