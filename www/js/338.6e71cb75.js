"use strict";(self["webpackChunktezkel"]=self["webpackChunktezkel"]||[]).push([[338],{6338:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"iosTransitionAnimation\": function() { return /* binding */ iosTransitionAnimation; },\n/* harmony export */   \"shadow\": function() { return /* binding */ shadow; }\n/* harmony export */ });\n/* harmony import */ var _animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5980);\n/* harmony import */ var _index4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5026);\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n\n\n\nconst DURATION = 540;\nconst getClonedElement = (tagName) => {\n  return document.querySelector(`${tagName}.ion-cloned-element`);\n};\nconst shadow = (el) => {\n  return el.shadowRoot || el;\n};\nconst getLargeTitle = (refEl) => {\n  const tabs = refEl.tagName === 'ION-TABS' ? refEl : refEl.querySelector('ion-tabs');\n  const query = 'ion-content ion-header:not(.header-collapse-condense-inactive) ion-title.title-large';\n  if (tabs != null) {\n    const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n    return activeTab != null ? activeTab.querySelector(query) : null;\n  }\n  return refEl.querySelector(query);\n};\nconst getBackButton = (refEl, backDirection) => {\n  const tabs = refEl.tagName === 'ION-TABS' ? refEl : refEl.querySelector('ion-tabs');\n  let buttonsList = [];\n  if (tabs != null) {\n    const activeTab = tabs.querySelector('ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)');\n    if (activeTab != null) {\n      buttonsList = activeTab.querySelectorAll('ion-buttons');\n    }\n  }\n  else {\n    buttonsList = refEl.querySelectorAll('ion-buttons');\n  }\n  for (const buttons of buttonsList) {\n    const parentHeader = buttons.closest('ion-header');\n    const activeHeader = parentHeader && !parentHeader.classList.contains('header-collapse-condense-inactive');\n    const backButton = buttons.querySelector('ion-back-button');\n    const buttonsCollapse = buttons.classList.contains('buttons-collapse');\n    const startSlot = buttons.slot === 'start' || buttons.slot === '';\n    if (backButton !== null && startSlot && ((buttonsCollapse && activeHeader && backDirection) || !buttonsCollapse)) {\n      return backButton;\n    }\n  }\n  return null;\n};\nconst createLargeTitleTransition = (rootAnimation, rtl, backDirection, enteringEl, leavingEl) => {\n  const enteringBackButton = getBackButton(enteringEl, backDirection);\n  const leavingLargeTitle = getLargeTitle(leavingEl);\n  const enteringLargeTitle = getLargeTitle(enteringEl);\n  const leavingBackButton = getBackButton(leavingEl, backDirection);\n  const shouldAnimationForward = enteringBackButton !== null && leavingLargeTitle !== null && !backDirection;\n  const shouldAnimationBackward = enteringLargeTitle !== null && leavingBackButton !== null && backDirection;\n  if (shouldAnimationForward) {\n    const leavingLargeTitleBox = leavingLargeTitle.getBoundingClientRect();\n    const enteringBackButtonBox = enteringBackButton.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, leavingLargeTitle, leavingLargeTitleBox, enteringBackButtonBox);\n    animateBackButton(rootAnimation, rtl, backDirection, enteringBackButton, leavingLargeTitleBox, enteringBackButtonBox);\n  }\n  else if (shouldAnimationBackward) {\n    const enteringLargeTitleBox = enteringLargeTitle.getBoundingClientRect();\n    const leavingBackButtonBox = leavingBackButton.getBoundingClientRect();\n    animateLargeTitle(rootAnimation, rtl, backDirection, enteringLargeTitle, enteringLargeTitleBox, leavingBackButtonBox);\n    animateBackButton(rootAnimation, rtl, backDirection, leavingBackButton, enteringLargeTitleBox, leavingBackButtonBox);\n  }\n  return {\n    forward: shouldAnimationForward,\n    backward: shouldAnimationBackward,\n  };\n};\nconst animateBackButton = (rootAnimation, rtl, backDirection, backButtonEl, largeTitleBox, backButtonBox) => {\n  const BACK_BUTTON_START_OFFSET = rtl ? `calc(100% - ${backButtonBox.right + 4}px)` : `${backButtonBox.left - 4}px`;\n  const START_TEXT_TRANSLATE = rtl ? '7px' : '-7px';\n  const END_TEXT_TRANSLATE = rtl ? '-4px' : '4px';\n  const ICON_TRANSLATE = rtl ? '-4px' : '4px';\n  const TEXT_ORIGIN_X = rtl ? 'right' : 'left';\n  const ICON_ORIGIN_X = rtl ? 'left' : 'right';\n  const FORWARD_TEXT_KEYFRAMES = [\n    {\n      offset: 0,\n      opacity: 0,\n      transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)`,\n    },\n    { offset: 1, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n  ];\n  const BACKWARD_TEXT_KEYFRAMES = [\n    { offset: 0, opacity: 1, transform: `translate3d(${END_TEXT_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n    { offset: 0.6, opacity: 0 },\n    {\n      offset: 1,\n      opacity: 0,\n      transform: `translate3d(${START_TEXT_TRANSLATE}, ${largeTitleBox.top - 40}px, 0) scale(2.1)`,\n    },\n  ];\n  const TEXT_KEYFRAMES = backDirection ? BACKWARD_TEXT_KEYFRAMES : FORWARD_TEXT_KEYFRAMES;\n  const FORWARD_ICON_KEYFRAMES = [\n    { offset: 0, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\n    { offset: 1, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n  ];\n  const BACKWARD_ICON_KEYFRAMES = [\n    { offset: 0, opacity: 1, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 46}px, 0) scale(1)` },\n    { offset: 0.2, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\n    { offset: 1, opacity: 0, transform: `translate3d(${ICON_TRANSLATE}, ${backButtonBox.top - 41}px, 0) scale(0.6)` },\n  ];\n  const ICON_KEYFRAMES = backDirection ? BACKWARD_ICON_KEYFRAMES : FORWARD_ICON_KEYFRAMES;\n  const enteringBackButtonTextAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  const enteringBackButtonIconAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  const clonedBackButtonEl = getClonedElement('ion-back-button');\n  const backButtonTextEl = shadow(clonedBackButtonEl).querySelector('.button-text');\n  const backButtonIconEl = shadow(clonedBackButtonEl).querySelector('ion-icon');\n  clonedBackButtonEl.text = backButtonEl.text;\n  clonedBackButtonEl.mode = backButtonEl.mode;\n  clonedBackButtonEl.icon = backButtonEl.icon;\n  clonedBackButtonEl.color = backButtonEl.color;\n  clonedBackButtonEl.disabled = backButtonEl.disabled;\n  clonedBackButtonEl.style.setProperty('display', 'block');\n  clonedBackButtonEl.style.setProperty('position', 'fixed');\n  enteringBackButtonIconAnimation.addElement(backButtonIconEl);\n  enteringBackButtonTextAnimation.addElement(backButtonTextEl);\n  enteringBackButtonTextAnimation\n    .beforeStyles({\n    'transform-origin': `${TEXT_ORIGIN_X} center`,\n  })\n    .beforeAddWrite(() => {\n    backButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.setProperty(TEXT_ORIGIN_X, BACK_BUTTON_START_OFFSET);\n  })\n    .afterAddWrite(() => {\n    backButtonEl.style.setProperty('display', '');\n    clonedBackButtonEl.style.setProperty('display', 'none');\n    clonedBackButtonEl.style.removeProperty(TEXT_ORIGIN_X);\n  })\n    .keyframes(TEXT_KEYFRAMES);\n  enteringBackButtonIconAnimation\n    .beforeStyles({\n    'transform-origin': `${ICON_ORIGIN_X} center`,\n  })\n    .keyframes(ICON_KEYFRAMES);\n  rootAnimation.addAnimation([enteringBackButtonTextAnimation, enteringBackButtonIconAnimation]);\n};\nconst animateLargeTitle = (rootAnimation, rtl, backDirection, largeTitleEl, largeTitleBox, backButtonBox) => {\n  const TITLE_START_OFFSET = rtl ? `calc(100% - ${largeTitleBox.right}px)` : `${largeTitleBox.left}px`;\n  const START_TRANSLATE = rtl ? '-18px' : '18px';\n  const ORIGIN_X = rtl ? 'right' : 'left';\n  const BACKWARDS_KEYFRAMES = [\n    { offset: 0, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.49)` },\n    { offset: 0.1, opacity: 0 },\n    { offset: 1, opacity: 1, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` },\n  ];\n  const FORWARDS_KEYFRAMES = [\n    { offset: 0, opacity: 0.99, transform: `translate3d(0, ${largeTitleBox.top - 2}px, 0) scale(1)` },\n    { offset: 0.6, opacity: 0 },\n    { offset: 1, opacity: 0, transform: `translate3d(${START_TRANSLATE}, ${backButtonBox.top - 4}px, 0) scale(0.5)` },\n  ];\n  const KEYFRAMES = backDirection ? BACKWARDS_KEYFRAMES : FORWARDS_KEYFRAMES;\n  const clonedTitleEl = getClonedElement('ion-title');\n  const clonedLargeTitleAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n  clonedTitleEl.innerText = largeTitleEl.innerText;\n  clonedTitleEl.size = largeTitleEl.size;\n  clonedTitleEl.color = largeTitleEl.color;\n  clonedLargeTitleAnimation.addElement(clonedTitleEl);\n  clonedLargeTitleAnimation\n    .beforeStyles({\n    'transform-origin': `${ORIGIN_X} center`,\n    height: '46px',\n    display: '',\n    position: 'relative',\n    [ORIGIN_X]: TITLE_START_OFFSET,\n  })\n    .beforeAddWrite(() => {\n    largeTitleEl.style.setProperty('display', 'none');\n  })\n    .afterAddWrite(() => {\n    largeTitleEl.style.setProperty('display', '');\n    clonedTitleEl.style.setProperty('display', 'none');\n  })\n    .keyframes(KEYFRAMES);\n  rootAnimation.addAnimation(clonedLargeTitleAnimation);\n};\nconst iosTransitionAnimation = (navEl, opts) => {\n  try {\n    const EASING = 'cubic-bezier(0.32,0.72,0,1)';\n    const OPACITY = 'opacity';\n    const TRANSFORM = 'transform';\n    const CENTER = '0%';\n    const OFF_OPACITY = 0.8;\n    const isRTL = navEl.ownerDocument.dir === 'rtl';\n    const OFF_RIGHT = isRTL ? '-99.5%' : '99.5%';\n    const OFF_LEFT = isRTL ? '33%' : '-33%';\n    const enteringEl = opts.enteringEl;\n    const leavingEl = opts.leavingEl;\n    const backDirection = opts.direction === 'back';\n    const contentEl = enteringEl.querySelector(':scope > ion-content');\n    const headerEls = enteringEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n    const enteringToolBarEls = enteringEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n    const rootAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n    const enteringContentAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n    rootAnimation\n      .addElement(enteringEl)\n      .duration(opts.duration || DURATION)\n      .easing(opts.easing || EASING)\n      .fill('both')\n      .beforeRemoveClass('ion-page-invisible');\n    if (leavingEl && navEl) {\n      const navDecorAnimation = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      navDecorAnimation.addElement(navEl);\n      rootAnimation.addAnimation(navDecorAnimation);\n    }\n    if (!contentEl && enteringToolBarEls.length === 0 && headerEls.length === 0) {\n      enteringContentAnimation.addElement(enteringEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n    }\n    else {\n      enteringContentAnimation.addElement(contentEl); // REVIEW\n      enteringContentAnimation.addElement(headerEls);\n    }\n    rootAnimation.addAnimation(enteringContentAnimation);\n    if (backDirection) {\n      enteringContentAnimation\n        .beforeClearStyles([OPACITY])\n        .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\n        .fromTo(OPACITY, OFF_OPACITY, 1);\n    }\n    else {\n      // entering content, forward direction\n      enteringContentAnimation\n        .beforeClearStyles([OPACITY])\n        .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\n    }\n    if (contentEl) {\n      const enteringTransitionEffectEl = shadow(contentEl).querySelector('.transition-effect');\n      if (enteringTransitionEffectEl) {\n        const enteringTransitionCoverEl = enteringTransitionEffectEl.querySelector('.transition-cover');\n        const enteringTransitionShadowEl = enteringTransitionEffectEl.querySelector('.transition-shadow');\n        const enteringTransitionEffect = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const enteringTransitionCover = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const enteringTransitionShadow = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        enteringTransitionEffect\n          .addElement(enteringTransitionEffectEl)\n          .beforeStyles({ opacity: '1', display: 'block' })\n          .afterStyles({ opacity: '', display: '' });\n        enteringTransitionCover\n          .addElement(enteringTransitionCoverEl) // REVIEW\n          .beforeClearStyles([OPACITY])\n          .fromTo(OPACITY, 0, 0.1);\n        enteringTransitionShadow\n          .addElement(enteringTransitionShadowEl) // REVIEW\n          .beforeClearStyles([OPACITY])\n          .fromTo(OPACITY, 0.03, 0.7);\n        enteringTransitionEffect.addAnimation([enteringTransitionCover, enteringTransitionShadow]);\n        enteringContentAnimation.addAnimation([enteringTransitionEffect]);\n      }\n    }\n    const enteringContentHasLargeTitle = enteringEl.querySelector('ion-header.header-collapse-condense');\n    const { forward, backward } = createLargeTitleTransition(rootAnimation, isRTL, backDirection, enteringEl, leavingEl);\n    enteringToolBarEls.forEach((enteringToolBarEl) => {\n      const enteringToolBar = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBar.addElement(enteringToolBarEl);\n      rootAnimation.addAnimation(enteringToolBar);\n      const enteringTitle = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringTitle.addElement(enteringToolBarEl.querySelector('ion-title')); // REVIEW\n      const enteringToolBarButtons = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const buttons = Array.from(enteringToolBarEl.querySelectorAll('ion-buttons,[menuToggle]'));\n      const parentHeader = enteringToolBarEl.closest('ion-header');\n      const inactiveHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.classList.contains('header-collapse-condense-inactive');\n      let buttonsToAnimate;\n      if (backDirection) {\n        buttonsToAnimate = buttons.filter((button) => {\n          const isCollapseButton = button.classList.contains('buttons-collapse');\n          return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\n        });\n      }\n      else {\n        buttonsToAnimate = buttons.filter((button) => !button.classList.contains('buttons-collapse'));\n      }\n      enteringToolBarButtons.addElement(buttonsToAnimate);\n      const enteringToolBarItems = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBarItems.addElement(enteringToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])'));\n      const enteringToolBarBg = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      enteringToolBarBg.addElement(shadow(enteringToolBarEl).querySelector('.toolbar-background')); // REVIEW\n      const enteringBackButton = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const backButtonEl = enteringToolBarEl.querySelector('ion-back-button');\n      if (backButtonEl) {\n        enteringBackButton.addElement(backButtonEl);\n      }\n      enteringToolBar.addAnimation([\n        enteringTitle,\n        enteringToolBarButtons,\n        enteringToolBarItems,\n        enteringToolBarBg,\n        enteringBackButton,\n      ]);\n      enteringToolBarButtons.fromTo(OPACITY, 0.01, 1);\n      enteringToolBarItems.fromTo(OPACITY, 0.01, 1);\n      if (backDirection) {\n        if (!inactiveHeader) {\n          enteringTitle\n            .fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`)\n            .fromTo(OPACITY, 0.01, 1);\n        }\n        enteringToolBarItems.fromTo('transform', `translateX(${OFF_LEFT})`, `translateX(${CENTER})`);\n        // back direction, entering page has a back button\n        enteringBackButton.fromTo(OPACITY, 0.01, 1);\n      }\n      else {\n        // entering toolbar, forward direction\n        if (!enteringContentHasLargeTitle) {\n          enteringTitle\n            .fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`)\n            .fromTo(OPACITY, 0.01, 1);\n        }\n        enteringToolBarItems.fromTo('transform', `translateX(${OFF_RIGHT})`, `translateX(${CENTER})`);\n        enteringToolBarBg.beforeClearStyles([OPACITY, 'transform']);\n        const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n        if (!translucentHeader) {\n          enteringToolBarBg.fromTo(OPACITY, 0.01, 'var(--opacity)');\n        }\n        else {\n          enteringToolBarBg.fromTo('transform', isRTL ? 'translateX(-100%)' : 'translateX(100%)', 'translateX(0px)');\n        }\n        // forward direction, entering page has a back button\n        if (!forward) {\n          enteringBackButton.fromTo(OPACITY, 0.01, 1);\n        }\n        if (backButtonEl && !forward) {\n          const enteringBackBtnText = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          enteringBackBtnText\n            .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n            .fromTo(`transform`, isRTL ? 'translateX(-100px)' : 'translateX(100px)', 'translateX(0px)');\n          enteringToolBar.addAnimation(enteringBackBtnText);\n        }\n      }\n    });\n    // setup leaving view\n    if (leavingEl) {\n      const leavingContent = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n      const leavingContentEl = leavingEl.querySelector(':scope > ion-content');\n      const leavingToolBarEls = leavingEl.querySelectorAll(':scope > ion-header > ion-toolbar');\n      const leavingHeaderEls = leavingEl.querySelectorAll(':scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *');\n      if (!leavingContentEl && leavingToolBarEls.length === 0 && leavingHeaderEls.length === 0) {\n        leavingContent.addElement(leavingEl.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs')); // REVIEW\n      }\n      else {\n        leavingContent.addElement(leavingContentEl); // REVIEW\n        leavingContent.addElement(leavingHeaderEls);\n      }\n      rootAnimation.addAnimation(leavingContent);\n      if (backDirection) {\n        // leaving content, back direction\n        leavingContent\n          .beforeClearStyles([OPACITY])\n          .fromTo('transform', `translateX(${CENTER})`, isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n        const leavingPage = (0,_index4_js__WEBPACK_IMPORTED_MODULE_1__.g)(leavingEl);\n        rootAnimation.afterAddWrite(() => {\n          if (rootAnimation.getDirection() === 'normal') {\n            leavingPage.style.setProperty('display', 'none');\n          }\n        });\n      }\n      else {\n        // leaving content, forward direction\n        leavingContent\n          .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n          .fromTo(OPACITY, 1, OFF_OPACITY);\n      }\n      if (leavingContentEl) {\n        const leavingTransitionEffectEl = shadow(leavingContentEl).querySelector('.transition-effect');\n        if (leavingTransitionEffectEl) {\n          const leavingTransitionCoverEl = leavingTransitionEffectEl.querySelector('.transition-cover');\n          const leavingTransitionShadowEl = leavingTransitionEffectEl.querySelector('.transition-shadow');\n          const leavingTransitionEffect = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          const leavingTransitionCover = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          const leavingTransitionShadow = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n          leavingTransitionEffect\n            .addElement(leavingTransitionEffectEl)\n            .beforeStyles({ opacity: '1', display: 'block' })\n            .afterStyles({ opacity: '', display: '' });\n          leavingTransitionCover\n            .addElement(leavingTransitionCoverEl) // REVIEW\n            .beforeClearStyles([OPACITY])\n            .fromTo(OPACITY, 0.1, 0);\n          leavingTransitionShadow\n            .addElement(leavingTransitionShadowEl) // REVIEW\n            .beforeClearStyles([OPACITY])\n            .fromTo(OPACITY, 0.7, 0.03);\n          leavingTransitionEffect.addAnimation([leavingTransitionCover, leavingTransitionShadow]);\n          leavingContent.addAnimation([leavingTransitionEffect]);\n        }\n      }\n      leavingToolBarEls.forEach((leavingToolBarEl) => {\n        const leavingToolBar = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingToolBar.addElement(leavingToolBarEl);\n        const leavingTitle = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingTitle.addElement(leavingToolBarEl.querySelector('ion-title')); // REVIEW\n        const leavingToolBarButtons = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const buttons = leavingToolBarEl.querySelectorAll('ion-buttons,[menuToggle]');\n        const parentHeader = leavingToolBarEl.closest('ion-header');\n        const inactiveHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.classList.contains('header-collapse-condense-inactive');\n        const buttonsToAnimate = Array.from(buttons).filter((button) => {\n          const isCollapseButton = button.classList.contains('buttons-collapse');\n          return (isCollapseButton && !inactiveHeader) || !isCollapseButton;\n        });\n        leavingToolBarButtons.addElement(buttonsToAnimate);\n        const leavingToolBarItems = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const leavingToolBarItemEls = leavingToolBarEl.querySelectorAll(':scope > *:not(ion-title):not(ion-buttons):not([menuToggle])');\n        if (leavingToolBarItemEls.length > 0) {\n          leavingToolBarItems.addElement(leavingToolBarItemEls);\n        }\n        const leavingToolBarBg = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        leavingToolBarBg.addElement(shadow(leavingToolBarEl).querySelector('.toolbar-background')); // REVIEW\n        const leavingBackButton = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n        const backButtonEl = leavingToolBarEl.querySelector('ion-back-button');\n        if (backButtonEl) {\n          leavingBackButton.addElement(backButtonEl);\n        }\n        leavingToolBar.addAnimation([\n          leavingTitle,\n          leavingToolBarButtons,\n          leavingToolBarItems,\n          leavingBackButton,\n          leavingToolBarBg,\n        ]);\n        rootAnimation.addAnimation(leavingToolBar);\n        // fade out leaving toolbar items\n        leavingBackButton.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarButtons.fromTo(OPACITY, 0.99, 0);\n        leavingToolBarItems.fromTo(OPACITY, 0.99, 0);\n        if (backDirection) {\n          if (!inactiveHeader) {\n            // leaving toolbar, back direction\n            leavingTitle\n              .fromTo('transform', `translateX(${CENTER})`, isRTL ? 'translateX(-100%)' : 'translateX(100%)')\n              .fromTo(OPACITY, 0.99, 0);\n          }\n          leavingToolBarItems.fromTo('transform', `translateX(${CENTER})`, isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n          leavingToolBarBg.beforeClearStyles([OPACITY, 'transform']);\n          // leaving toolbar, back direction, and there's no entering toolbar\n          // should just slide out, no fading out\n          const translucentHeader = parentHeader === null || parentHeader === void 0 ? void 0 : parentHeader.translucent;\n          if (!translucentHeader) {\n            leavingToolBarBg.fromTo(OPACITY, 'var(--opacity)', 0);\n          }\n          else {\n            leavingToolBarBg.fromTo('transform', 'translateX(0px)', isRTL ? 'translateX(-100%)' : 'translateX(100%)');\n          }\n          if (backButtonEl && !backward) {\n            const leavingBackBtnText = (0,_animation_js__WEBPACK_IMPORTED_MODULE_0__.c)();\n            leavingBackBtnText\n              .addElement(shadow(backButtonEl).querySelector('.button-text')) // REVIEW\n              .fromTo('transform', `translateX(${CENTER})`, `translateX(${(isRTL ? -124 : 124) + 'px'})`);\n            leavingToolBar.addAnimation(leavingBackBtnText);\n          }\n        }\n        else {\n          // leaving toolbar, forward direction\n          if (!inactiveHeader) {\n            leavingTitle\n              .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n              .fromTo(OPACITY, 0.99, 0)\n              .afterClearStyles([TRANSFORM, OPACITY]);\n          }\n          leavingToolBarItems\n            .fromTo('transform', `translateX(${CENTER})`, `translateX(${OFF_LEFT})`)\n            .afterClearStyles([TRANSFORM, OPACITY]);\n          leavingBackButton.afterClearStyles([OPACITY]);\n          leavingTitle.afterClearStyles([OPACITY]);\n          leavingToolBarButtons.afterClearStyles([OPACITY]);\n        }\n      });\n    }\n    return rootAnimation;\n  }\n  catch (err) {\n    throw err;\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FBTztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdEQUFlO0FBQ3REO0FBQ0E7QUFDQSxpREFBaUQsT0FBTyxrQkFBa0IsNEJBQTRCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELE9BQU8sa0JBQWtCLFNBQVM7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsT0FBTyxrQkFBa0IsU0FBUztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlemtlbC8uL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9jb21wb25lbnRzL2lvcy50cmFuc2l0aW9uLmpzPzdlZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiAoQykgSW9uaWMgaHR0cDovL2lvbmljZnJhbWV3b3JrLmNvbSAtIE1JVCBMaWNlbnNlXG4gKi9cbmltcG9ydCB7IGMgYXMgY3JlYXRlQW5pbWF0aW9uIH0gZnJvbSAnLi9hbmltYXRpb24uanMnO1xuaW1wb3J0IHsgZyBhcyBnZXRJb25QYWdlRWxlbWVudCB9IGZyb20gJy4vaW5kZXg0LmpzJztcblxuY29uc3QgRFVSQVRJT04gPSA1NDA7XG5jb25zdCBnZXRDbG9uZWRFbGVtZW50ID0gKHRhZ05hbWUpID0+IHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCR7dGFnTmFtZX0uaW9uLWNsb25lZC1lbGVtZW50YCk7XG59O1xuY29uc3Qgc2hhZG93ID0gKGVsKSA9PiB7XG4gIHJldHVybiBlbC5zaGFkb3dSb290IHx8IGVsO1xufTtcbmNvbnN0IGdldExhcmdlVGl0bGUgPSAocmVmRWwpID0+IHtcbiAgY29uc3QgdGFicyA9IHJlZkVsLnRhZ05hbWUgPT09ICdJT04tVEFCUycgPyByZWZFbCA6IHJlZkVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWJzJyk7XG4gIGNvbnN0IHF1ZXJ5ID0gJ2lvbi1jb250ZW50IGlvbi1oZWFkZXI6bm90KC5oZWFkZXItY29sbGFwc2UtY29uZGVuc2UtaW5hY3RpdmUpIGlvbi10aXRsZS50aXRsZS1sYXJnZSc7XG4gIGlmICh0YWJzICE9IG51bGwpIHtcbiAgICBjb25zdCBhY3RpdmVUYWIgPSB0YWJzLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWI6bm90KC50YWItaGlkZGVuKSwgLmlvbi1wYWdlOm5vdCguaW9uLXBhZ2UtaGlkZGVuKScpO1xuICAgIHJldHVybiBhY3RpdmVUYWIgIT0gbnVsbCA/IGFjdGl2ZVRhYi5xdWVyeVNlbGVjdG9yKHF1ZXJ5KSA6IG51bGw7XG4gIH1cbiAgcmV0dXJuIHJlZkVsLnF1ZXJ5U2VsZWN0b3IocXVlcnkpO1xufTtcbmNvbnN0IGdldEJhY2tCdXR0b24gPSAocmVmRWwsIGJhY2tEaXJlY3Rpb24pID0+IHtcbiAgY29uc3QgdGFicyA9IHJlZkVsLnRhZ05hbWUgPT09ICdJT04tVEFCUycgPyByZWZFbCA6IHJlZkVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWJzJyk7XG4gIGxldCBidXR0b25zTGlzdCA9IFtdO1xuICBpZiAodGFicyAhPSBudWxsKSB7XG4gICAgY29uc3QgYWN0aXZlVGFiID0gdGFicy5xdWVyeVNlbGVjdG9yKCdpb24tdGFiOm5vdCgudGFiLWhpZGRlbiksIC5pb24tcGFnZTpub3QoLmlvbi1wYWdlLWhpZGRlbiknKTtcbiAgICBpZiAoYWN0aXZlVGFiICE9IG51bGwpIHtcbiAgICAgIGJ1dHRvbnNMaXN0ID0gYWN0aXZlVGFiLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zJyk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIGJ1dHRvbnNMaXN0ID0gcmVmRWwucXVlcnlTZWxlY3RvckFsbCgnaW9uLWJ1dHRvbnMnKTtcbiAgfVxuICBmb3IgKGNvbnN0IGJ1dHRvbnMgb2YgYnV0dG9uc0xpc3QpIHtcbiAgICBjb25zdCBwYXJlbnRIZWFkZXIgPSBidXR0b25zLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICBjb25zdCBhY3RpdmVIZWFkZXIgPSBwYXJlbnRIZWFkZXIgJiYgIXBhcmVudEhlYWRlci5jbGFzc0xpc3QuY29udGFpbnMoJ2hlYWRlci1jb2xsYXBzZS1jb25kZW5zZS1pbmFjdGl2ZScpO1xuICAgIGNvbnN0IGJhY2tCdXR0b24gPSBidXR0b25zLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1iYWNrLWJ1dHRvbicpO1xuICAgIGNvbnN0IGJ1dHRvbnNDb2xsYXBzZSA9IGJ1dHRvbnMuY2xhc3NMaXN0LmNvbnRhaW5zKCdidXR0b25zLWNvbGxhcHNlJyk7XG4gICAgY29uc3Qgc3RhcnRTbG90ID0gYnV0dG9ucy5zbG90ID09PSAnc3RhcnQnIHx8IGJ1dHRvbnMuc2xvdCA9PT0gJyc7XG4gICAgaWYgKGJhY2tCdXR0b24gIT09IG51bGwgJiYgc3RhcnRTbG90ICYmICgoYnV0dG9uc0NvbGxhcHNlICYmIGFjdGl2ZUhlYWRlciAmJiBiYWNrRGlyZWN0aW9uKSB8fCAhYnV0dG9uc0NvbGxhcHNlKSkge1xuICAgICAgcmV0dXJuIGJhY2tCdXR0b247XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcbmNvbnN0IGNyZWF0ZUxhcmdlVGl0bGVUcmFuc2l0aW9uID0gKHJvb3RBbmltYXRpb24sIHJ0bCwgYmFja0RpcmVjdGlvbiwgZW50ZXJpbmdFbCwgbGVhdmluZ0VsKSA9PiB7XG4gIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbiA9IGdldEJhY2tCdXR0b24oZW50ZXJpbmdFbCwgYmFja0RpcmVjdGlvbik7XG4gIGNvbnN0IGxlYXZpbmdMYXJnZVRpdGxlID0gZ2V0TGFyZ2VUaXRsZShsZWF2aW5nRWwpO1xuICBjb25zdCBlbnRlcmluZ0xhcmdlVGl0bGUgPSBnZXRMYXJnZVRpdGxlKGVudGVyaW5nRWwpO1xuICBjb25zdCBsZWF2aW5nQmFja0J1dHRvbiA9IGdldEJhY2tCdXR0b24obGVhdmluZ0VsLCBiYWNrRGlyZWN0aW9uKTtcbiAgY29uc3Qgc2hvdWxkQW5pbWF0aW9uRm9yd2FyZCA9IGVudGVyaW5nQmFja0J1dHRvbiAhPT0gbnVsbCAmJiBsZWF2aW5nTGFyZ2VUaXRsZSAhPT0gbnVsbCAmJiAhYmFja0RpcmVjdGlvbjtcbiAgY29uc3Qgc2hvdWxkQW5pbWF0aW9uQmFja3dhcmQgPSBlbnRlcmluZ0xhcmdlVGl0bGUgIT09IG51bGwgJiYgbGVhdmluZ0JhY2tCdXR0b24gIT09IG51bGwgJiYgYmFja0RpcmVjdGlvbjtcbiAgaWYgKHNob3VsZEFuaW1hdGlvbkZvcndhcmQpIHtcbiAgICBjb25zdCBsZWF2aW5nTGFyZ2VUaXRsZUJveCA9IGxlYXZpbmdMYXJnZVRpdGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbkJveCA9IGVudGVyaW5nQmFja0J1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbmltYXRlTGFyZ2VUaXRsZShyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGxlYXZpbmdMYXJnZVRpdGxlLCBsZWF2aW5nTGFyZ2VUaXRsZUJveCwgZW50ZXJpbmdCYWNrQnV0dG9uQm94KTtcbiAgICBhbmltYXRlQmFja0J1dHRvbihyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nQmFja0J1dHRvbiwgbGVhdmluZ0xhcmdlVGl0bGVCb3gsIGVudGVyaW5nQmFja0J1dHRvbkJveCk7XG4gIH1cbiAgZWxzZSBpZiAoc2hvdWxkQW5pbWF0aW9uQmFja3dhcmQpIHtcbiAgICBjb25zdCBlbnRlcmluZ0xhcmdlVGl0bGVCb3ggPSBlbnRlcmluZ0xhcmdlVGl0bGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgbGVhdmluZ0JhY2tCdXR0b25Cb3ggPSBsZWF2aW5nQmFja0J1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbmltYXRlTGFyZ2VUaXRsZShyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nTGFyZ2VUaXRsZSwgZW50ZXJpbmdMYXJnZVRpdGxlQm94LCBsZWF2aW5nQmFja0J1dHRvbkJveCk7XG4gICAgYW5pbWF0ZUJhY2tCdXR0b24ocm9vdEFuaW1hdGlvbiwgcnRsLCBiYWNrRGlyZWN0aW9uLCBsZWF2aW5nQmFja0J1dHRvbiwgZW50ZXJpbmdMYXJnZVRpdGxlQm94LCBsZWF2aW5nQmFja0J1dHRvbkJveCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmb3J3YXJkOiBzaG91bGRBbmltYXRpb25Gb3J3YXJkLFxuICAgIGJhY2t3YXJkOiBzaG91bGRBbmltYXRpb25CYWNrd2FyZCxcbiAgfTtcbn07XG5jb25zdCBhbmltYXRlQmFja0J1dHRvbiA9IChyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGJhY2tCdXR0b25FbCwgbGFyZ2VUaXRsZUJveCwgYmFja0J1dHRvbkJveCkgPT4ge1xuICBjb25zdCBCQUNLX0JVVFRPTl9TVEFSVF9PRkZTRVQgPSBydGwgPyBgY2FsYygxMDAlIC0gJHtiYWNrQnV0dG9uQm94LnJpZ2h0ICsgNH1weClgIDogYCR7YmFja0J1dHRvbkJveC5sZWZ0IC0gNH1weGA7XG4gIGNvbnN0IFNUQVJUX1RFWFRfVFJBTlNMQVRFID0gcnRsID8gJzdweCcgOiAnLTdweCc7XG4gIGNvbnN0IEVORF9URVhUX1RSQU5TTEFURSA9IHJ0bCA/ICctNHB4JyA6ICc0cHgnO1xuICBjb25zdCBJQ09OX1RSQU5TTEFURSA9IHJ0bCA/ICctNHB4JyA6ICc0cHgnO1xuICBjb25zdCBURVhUX09SSUdJTl9YID0gcnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgY29uc3QgSUNPTl9PUklHSU5fWCA9IHJ0bCA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gIGNvbnN0IEZPUldBUkRfVEVYVF9LRVlGUkFNRVMgPSBbXG4gICAge1xuICAgICAgb2Zmc2V0OiAwLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7U1RBUlRfVEVYVF9UUkFOU0xBVEV9LCAke2xhcmdlVGl0bGVCb3gudG9wIC0gNDB9cHgsIDApIHNjYWxlKDIuMSlgLFxuICAgIH0sXG4gICAgeyBvZmZzZXQ6IDEsIG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7RU5EX1RFWFRfVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgXTtcbiAgY29uc3QgQkFDS1dBUkRfVEVYVF9LRVlGUkFNRVMgPSBbXG4gICAgeyBvZmZzZXQ6IDAsIG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7RU5EX1RFWFRfVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgICB7IG9mZnNldDogMC42LCBvcGFjaXR5OiAwIH0sXG4gICAge1xuICAgICAgb2Zmc2V0OiAxLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7U1RBUlRfVEVYVF9UUkFOU0xBVEV9LCAke2xhcmdlVGl0bGVCb3gudG9wIC0gNDB9cHgsIDApIHNjYWxlKDIuMSlgLFxuICAgIH0sXG4gIF07XG4gIGNvbnN0IFRFWFRfS0VZRlJBTUVTID0gYmFja0RpcmVjdGlvbiA/IEJBQ0tXQVJEX1RFWFRfS0VZRlJBTUVTIDogRk9SV0FSRF9URVhUX0tFWUZSQU1FUztcbiAgY29uc3QgRk9SV0FSRF9JQ09OX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtJQ09OX1RSQU5TTEFURX0sICR7YmFja0J1dHRvbkJveC50b3AgLSA0MX1weCwgMCkgc2NhbGUoMC42KWAgfSxcbiAgICB7IG9mZnNldDogMSwgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtJQ09OX1RSQU5TTEFURX0sICR7YmFja0J1dHRvbkJveC50b3AgLSA0Nn1weCwgMCkgc2NhbGUoMSlgIH0sXG4gIF07XG4gIGNvbnN0IEJBQ0tXQVJEX0lDT05fS0VZRlJBTUVTID0gW1xuICAgIHsgb2Zmc2V0OiAwLCBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgICB7IG9mZnNldDogMC4yLCBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQxfXB4LCAwKSBzY2FsZSgwLjYpYCB9LFxuICAgIHsgb2Zmc2V0OiAxLCBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQxfXB4LCAwKSBzY2FsZSgwLjYpYCB9LFxuICBdO1xuICBjb25zdCBJQ09OX0tFWUZSQU1FUyA9IGJhY2tEaXJlY3Rpb24gPyBCQUNLV0FSRF9JQ09OX0tFWUZSQU1FUyA6IEZPUldBUkRfSUNPTl9LRVlGUkFNRVM7XG4gIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvblRleHRBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgY29uc3QgZW50ZXJpbmdCYWNrQnV0dG9uSWNvbkFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjb25zdCBjbG9uZWRCYWNrQnV0dG9uRWwgPSBnZXRDbG9uZWRFbGVtZW50KCdpb24tYmFjay1idXR0b24nKTtcbiAgY29uc3QgYmFja0J1dHRvblRleHRFbCA9IHNoYWRvdyhjbG9uZWRCYWNrQnV0dG9uRWwpLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tdGV4dCcpO1xuICBjb25zdCBiYWNrQnV0dG9uSWNvbkVsID0gc2hhZG93KGNsb25lZEJhY2tCdXR0b25FbCkucXVlcnlTZWxlY3RvcignaW9uLWljb24nKTtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLnRleHQgPSBiYWNrQnV0dG9uRWwudGV4dDtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLm1vZGUgPSBiYWNrQnV0dG9uRWwubW9kZTtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLmljb24gPSBiYWNrQnV0dG9uRWwuaWNvbjtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLmNvbG9yID0gYmFja0J1dHRvbkVsLmNvbG9yO1xuICBjbG9uZWRCYWNrQnV0dG9uRWwuZGlzYWJsZWQgPSBiYWNrQnV0dG9uRWwuZGlzYWJsZWQ7XG4gIGNsb25lZEJhY2tCdXR0b25FbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdibG9jaycpO1xuICBjbG9uZWRCYWNrQnV0dG9uRWwuc3R5bGUuc2V0UHJvcGVydHkoJ3Bvc2l0aW9uJywgJ2ZpeGVkJyk7XG4gIGVudGVyaW5nQmFja0J1dHRvbkljb25BbmltYXRpb24uYWRkRWxlbWVudChiYWNrQnV0dG9uSWNvbkVsKTtcbiAgZW50ZXJpbmdCYWNrQnV0dG9uVGV4dEFuaW1hdGlvbi5hZGRFbGVtZW50KGJhY2tCdXR0b25UZXh0RWwpO1xuICBlbnRlcmluZ0JhY2tCdXR0b25UZXh0QW5pbWF0aW9uXG4gICAgLmJlZm9yZVN0eWxlcyh7XG4gICAgJ3RyYW5zZm9ybS1vcmlnaW4nOiBgJHtURVhUX09SSUdJTl9YfSBjZW50ZXJgLFxuICB9KVxuICAgIC5iZWZvcmVBZGRXcml0ZSgoKSA9PiB7XG4gICAgYmFja0J1dHRvbkVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICBjbG9uZWRCYWNrQnV0dG9uRWwuc3R5bGUuc2V0UHJvcGVydHkoVEVYVF9PUklHSU5fWCwgQkFDS19CVVRUT05fU1RBUlRfT0ZGU0VUKTtcbiAgfSlcbiAgICAuYWZ0ZXJBZGRXcml0ZSgoKSA9PiB7XG4gICAgYmFja0J1dHRvbkVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJycpO1xuICAgIGNsb25lZEJhY2tCdXR0b25FbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdub25lJyk7XG4gICAgY2xvbmVkQmFja0J1dHRvbkVsLnN0eWxlLnJlbW92ZVByb3BlcnR5KFRFWFRfT1JJR0lOX1gpO1xuICB9KVxuICAgIC5rZXlmcmFtZXMoVEVYVF9LRVlGUkFNRVMpO1xuICBlbnRlcmluZ0JhY2tCdXR0b25JY29uQW5pbWF0aW9uXG4gICAgLmJlZm9yZVN0eWxlcyh7XG4gICAgJ3RyYW5zZm9ybS1vcmlnaW4nOiBgJHtJQ09OX09SSUdJTl9YfSBjZW50ZXJgLFxuICB9KVxuICAgIC5rZXlmcmFtZXMoSUNPTl9LRVlGUkFNRVMpO1xuICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihbZW50ZXJpbmdCYWNrQnV0dG9uVGV4dEFuaW1hdGlvbiwgZW50ZXJpbmdCYWNrQnV0dG9uSWNvbkFuaW1hdGlvbl0pO1xufTtcbmNvbnN0IGFuaW1hdGVMYXJnZVRpdGxlID0gKHJvb3RBbmltYXRpb24sIHJ0bCwgYmFja0RpcmVjdGlvbiwgbGFyZ2VUaXRsZUVsLCBsYXJnZVRpdGxlQm94LCBiYWNrQnV0dG9uQm94KSA9PiB7XG4gIGNvbnN0IFRJVExFX1NUQVJUX09GRlNFVCA9IHJ0bCA/IGBjYWxjKDEwMCUgLSAke2xhcmdlVGl0bGVCb3gucmlnaHR9cHgpYCA6IGAke2xhcmdlVGl0bGVCb3gubGVmdH1weGA7XG4gIGNvbnN0IFNUQVJUX1RSQU5TTEFURSA9IHJ0bCA/ICctMThweCcgOiAnMThweCc7XG4gIGNvbnN0IE9SSUdJTl9YID0gcnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgY29uc3QgQkFDS1dBUkRTX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtTVEFSVF9UUkFOU0xBVEV9LCAke2JhY2tCdXR0b25Cb3gudG9wIC0gNH1weCwgMCkgc2NhbGUoMC40OSlgIH0sXG4gICAgeyBvZmZzZXQ6IDAuMSwgb3BhY2l0eTogMCB9LFxuICAgIHsgb2Zmc2V0OiAxLCBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCAke2xhcmdlVGl0bGVCb3gudG9wIC0gMn1weCwgMCkgc2NhbGUoMSlgIH0sXG4gIF07XG4gIGNvbnN0IEZPUldBUkRTX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMC45OSwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHtsYXJnZVRpdGxlQm94LnRvcCAtIDJ9cHgsIDApIHNjYWxlKDEpYCB9LFxuICAgIHsgb2Zmc2V0OiAwLjYsIG9wYWNpdHk6IDAgfSxcbiAgICB7IG9mZnNldDogMSwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtTVEFSVF9UUkFOU0xBVEV9LCAke2JhY2tCdXR0b25Cb3gudG9wIC0gNH1weCwgMCkgc2NhbGUoMC41KWAgfSxcbiAgXTtcbiAgY29uc3QgS0VZRlJBTUVTID0gYmFja0RpcmVjdGlvbiA/IEJBQ0tXQVJEU19LRVlGUkFNRVMgOiBGT1JXQVJEU19LRVlGUkFNRVM7XG4gIGNvbnN0IGNsb25lZFRpdGxlRWwgPSBnZXRDbG9uZWRFbGVtZW50KCdpb24tdGl0bGUnKTtcbiAgY29uc3QgY2xvbmVkTGFyZ2VUaXRsZUFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjbG9uZWRUaXRsZUVsLmlubmVyVGV4dCA9IGxhcmdlVGl0bGVFbC5pbm5lclRleHQ7XG4gIGNsb25lZFRpdGxlRWwuc2l6ZSA9IGxhcmdlVGl0bGVFbC5zaXplO1xuICBjbG9uZWRUaXRsZUVsLmNvbG9yID0gbGFyZ2VUaXRsZUVsLmNvbG9yO1xuICBjbG9uZWRMYXJnZVRpdGxlQW5pbWF0aW9uLmFkZEVsZW1lbnQoY2xvbmVkVGl0bGVFbCk7XG4gIGNsb25lZExhcmdlVGl0bGVBbmltYXRpb25cbiAgICAuYmVmb3JlU3R5bGVzKHtcbiAgICAndHJhbnNmb3JtLW9yaWdpbic6IGAke09SSUdJTl9YfSBjZW50ZXJgLFxuICAgIGhlaWdodDogJzQ2cHgnLFxuICAgIGRpc3BsYXk6ICcnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIFtPUklHSU5fWF06IFRJVExFX1NUQVJUX09GRlNFVCxcbiAgfSlcbiAgICAuYmVmb3JlQWRkV3JpdGUoKCkgPT4ge1xuICAgIGxhcmdlVGl0bGVFbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdub25lJyk7XG4gIH0pXG4gICAgLmFmdGVyQWRkV3JpdGUoKCkgPT4ge1xuICAgIGxhcmdlVGl0bGVFbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICcnKTtcbiAgICBjbG9uZWRUaXRsZUVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgfSlcbiAgICAua2V5ZnJhbWVzKEtFWUZSQU1FUyk7XG4gIHJvb3RBbmltYXRpb24uYWRkQW5pbWF0aW9uKGNsb25lZExhcmdlVGl0bGVBbmltYXRpb24pO1xufTtcbmNvbnN0IGlvc1RyYW5zaXRpb25BbmltYXRpb24gPSAobmF2RWwsIG9wdHMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBFQVNJTkcgPSAnY3ViaWMtYmV6aWVyKDAuMzIsMC43MiwwLDEpJztcbiAgICBjb25zdCBPUEFDSVRZID0gJ29wYWNpdHknO1xuICAgIGNvbnN0IFRSQU5TRk9STSA9ICd0cmFuc2Zvcm0nO1xuICAgIGNvbnN0IENFTlRFUiA9ICcwJSc7XG4gICAgY29uc3QgT0ZGX09QQUNJVFkgPSAwLjg7XG4gICAgY29uc3QgaXNSVEwgPSBuYXZFbC5vd25lckRvY3VtZW50LmRpciA9PT0gJ3J0bCc7XG4gICAgY29uc3QgT0ZGX1JJR0hUID0gaXNSVEwgPyAnLTk5LjUlJyA6ICc5OS41JSc7XG4gICAgY29uc3QgT0ZGX0xFRlQgPSBpc1JUTCA/ICczMyUnIDogJy0zMyUnO1xuICAgIGNvbnN0IGVudGVyaW5nRWwgPSBvcHRzLmVudGVyaW5nRWw7XG4gICAgY29uc3QgbGVhdmluZ0VsID0gb3B0cy5sZWF2aW5nRWw7XG4gICAgY29uc3QgYmFja0RpcmVjdGlvbiA9IG9wdHMuZGlyZWN0aW9uID09PSAnYmFjayc7XG4gICAgY29uc3QgY29udGVudEVsID0gZW50ZXJpbmdFbC5xdWVyeVNlbGVjdG9yKCc6c2NvcGUgPiBpb24tY29udGVudCcpO1xuICAgIGNvbnN0IGhlYWRlckVscyA9IGVudGVyaW5nRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gaW9uLWhlYWRlciA+ICo6bm90KGlvbi10b29sYmFyKSwgOnNjb3BlID4gaW9uLWZvb3RlciA+IConKTtcbiAgICBjb25zdCBlbnRlcmluZ1Rvb2xCYXJFbHMgPSBlbnRlcmluZ0VsLnF1ZXJ5U2VsZWN0b3JBbGwoJzpzY29wZSA+IGlvbi1oZWFkZXIgPiBpb24tdG9vbGJhcicpO1xuICAgIGNvbnN0IHJvb3RBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICBjb25zdCBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICByb290QW5pbWF0aW9uXG4gICAgICAuYWRkRWxlbWVudChlbnRlcmluZ0VsKVxuICAgICAgLmR1cmF0aW9uKG9wdHMuZHVyYXRpb24gfHwgRFVSQVRJT04pXG4gICAgICAuZWFzaW5nKG9wdHMuZWFzaW5nIHx8IEVBU0lORylcbiAgICAgIC5maWxsKCdib3RoJylcbiAgICAgIC5iZWZvcmVSZW1vdmVDbGFzcygnaW9uLXBhZ2UtaW52aXNpYmxlJyk7XG4gICAgaWYgKGxlYXZpbmdFbCAmJiBuYXZFbCkge1xuICAgICAgY29uc3QgbmF2RGVjb3JBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIG5hdkRlY29yQW5pbWF0aW9uLmFkZEVsZW1lbnQobmF2RWwpO1xuICAgICAgcm9vdEFuaW1hdGlvbi5hZGRBbmltYXRpb24obmF2RGVjb3JBbmltYXRpb24pO1xuICAgIH1cbiAgICBpZiAoIWNvbnRlbnRFbCAmJiBlbnRlcmluZ1Rvb2xCYXJFbHMubGVuZ3RoID09PSAwICYmIGhlYWRlckVscy5sZW5ndGggPT09IDApIHtcbiAgICAgIGVudGVyaW5nQ29udGVudEFuaW1hdGlvbi5hZGRFbGVtZW50KGVudGVyaW5nRWwucXVlcnlTZWxlY3RvcignOnNjb3BlID4gLmlvbi1wYWdlLCA6c2NvcGUgPiBpb24tbmF2LCA6c2NvcGUgPiBpb24tdGFicycpKTsgLy8gUkVWSUVXXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgZW50ZXJpbmdDb250ZW50QW5pbWF0aW9uLmFkZEVsZW1lbnQoY29udGVudEVsKTsgLy8gUkVWSUVXXG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb24uYWRkRWxlbWVudChoZWFkZXJFbHMpO1xuICAgIH1cbiAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihlbnRlcmluZ0NvbnRlbnRBbmltYXRpb24pO1xuICAgIGlmIChiYWNrRGlyZWN0aW9uKSB7XG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb25cbiAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfTEVGVH0pYCwgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWApXG4gICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgT0ZGX09QQUNJVFksIDEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIC8vIGVudGVyaW5nIGNvbnRlbnQsIGZvcndhcmQgZGlyZWN0aW9uXG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb25cbiAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfUklHSFR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICB9XG4gICAgaWYgKGNvbnRlbnRFbCkge1xuICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0RWwgPSBzaGFkb3coY29udGVudEVsKS5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1lZmZlY3QnKTtcbiAgICAgIGlmIChlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbCkge1xuICAgICAgICBjb25zdCBlbnRlcmluZ1RyYW5zaXRpb25Db3ZlckVsID0gZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0RWwucXVlcnlTZWxlY3RvcignLnRyYW5zaXRpb24tY292ZXInKTtcbiAgICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uU2hhZG93RWwgPSBlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbC5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1zaGFkb3cnKTtcbiAgICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGVudGVyaW5nVHJhbnNpdGlvbkNvdmVyID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGVudGVyaW5nVHJhbnNpdGlvblNoYWRvdyA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RcbiAgICAgICAgICAuYWRkRWxlbWVudChlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbClcbiAgICAgICAgICAuYmVmb3JlU3R5bGVzKHsgb3BhY2l0eTogJzEnLCBkaXNwbGF5OiAnYmxvY2snIH0pXG4gICAgICAgICAgLmFmdGVyU3R5bGVzKHsgb3BhY2l0eTogJycsIGRpc3BsYXk6ICcnIH0pO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25Db3ZlclxuICAgICAgICAgIC5hZGRFbGVtZW50KGVudGVyaW5nVHJhbnNpdGlvbkNvdmVyRWwpIC8vIFJFVklFV1xuICAgICAgICAgIC5iZWZvcmVDbGVhclN0eWxlcyhbT1BBQ0lUWV0pXG4gICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLCAwLjEpO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3dcbiAgICAgICAgICAuYWRkRWxlbWVudChlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3dFbCkgLy8gUkVWSUVXXG4gICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuMDMsIDAuNyk7XG4gICAgICAgIGVudGVyaW5nVHJhbnNpdGlvbkVmZmVjdC5hZGRBbmltYXRpb24oW2VudGVyaW5nVHJhbnNpdGlvbkNvdmVyLCBlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3ddKTtcbiAgICAgICAgZW50ZXJpbmdDb250ZW50QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihbZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0XSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGVudGVyaW5nQ29udGVudEhhc0xhcmdlVGl0bGUgPSBlbnRlcmluZ0VsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1oZWFkZXIuaGVhZGVyLWNvbGxhcHNlLWNvbmRlbnNlJyk7XG4gICAgY29uc3QgeyBmb3J3YXJkLCBiYWNrd2FyZCB9ID0gY3JlYXRlTGFyZ2VUaXRsZVRyYW5zaXRpb24ocm9vdEFuaW1hdGlvbiwgaXNSVEwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nRWwsIGxlYXZpbmdFbCk7XG4gICAgZW50ZXJpbmdUb29sQmFyRWxzLmZvckVhY2goKGVudGVyaW5nVG9vbEJhckVsKSA9PiB7XG4gICAgICBjb25zdCBlbnRlcmluZ1Rvb2xCYXIgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhci5hZGRFbGVtZW50KGVudGVyaW5nVG9vbEJhckVsKTtcbiAgICAgIHJvb3RBbmltYXRpb24uYWRkQW5pbWF0aW9uKGVudGVyaW5nVG9vbEJhcik7XG4gICAgICBjb25zdCBlbnRlcmluZ1RpdGxlID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICBlbnRlcmluZ1RpdGxlLmFkZEVsZW1lbnQoZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLXRpdGxlJykpOyAvLyBSRVZJRVdcbiAgICAgIGNvbnN0IGVudGVyaW5nVG9vbEJhckJ1dHRvbnMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGNvbnN0IGJ1dHRvbnMgPSBBcnJheS5mcm9tKGVudGVyaW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zLFttZW51VG9nZ2xlXScpKTtcbiAgICAgIGNvbnN0IHBhcmVudEhlYWRlciA9IGVudGVyaW5nVG9vbEJhckVsLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICAgIGNvbnN0IGluYWN0aXZlSGVhZGVyID0gcGFyZW50SGVhZGVyID09PSBudWxsIHx8IHBhcmVudEhlYWRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyZW50SGVhZGVyLmNsYXNzTGlzdC5jb250YWlucygnaGVhZGVyLWNvbGxhcHNlLWNvbmRlbnNlLWluYWN0aXZlJyk7XG4gICAgICBsZXQgYnV0dG9uc1RvQW5pbWF0ZTtcbiAgICAgIGlmIChiYWNrRGlyZWN0aW9uKSB7XG4gICAgICAgIGJ1dHRvbnNUb0FuaW1hdGUgPSBidXR0b25zLmZpbHRlcigoYnV0dG9uKSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNDb2xsYXBzZUJ1dHRvbiA9IGJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2J1dHRvbnMtY29sbGFwc2UnKTtcbiAgICAgICAgICByZXR1cm4gKGlzQ29sbGFwc2VCdXR0b24gJiYgIWluYWN0aXZlSGVhZGVyKSB8fCAhaXNDb2xsYXBzZUJ1dHRvbjtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgYnV0dG9uc1RvQW5pbWF0ZSA9IGJ1dHRvbnMuZmlsdGVyKChidXR0b24pID0+ICFidXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdidXR0b25zLWNvbGxhcHNlJykpO1xuICAgICAgfVxuICAgICAgZW50ZXJpbmdUb29sQmFyQnV0dG9ucy5hZGRFbGVtZW50KGJ1dHRvbnNUb0FuaW1hdGUpO1xuICAgICAgY29uc3QgZW50ZXJpbmdUb29sQmFySXRlbXMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckl0ZW1zLmFkZEVsZW1lbnQoZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gKjpub3QoaW9uLXRpdGxlKTpub3QoaW9uLWJ1dHRvbnMpOm5vdChbbWVudVRvZ2dsZV0pJykpO1xuICAgICAgY29uc3QgZW50ZXJpbmdUb29sQmFyQmcgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckJnLmFkZEVsZW1lbnQoc2hhZG93KGVudGVyaW5nVG9vbEJhckVsKS5xdWVyeVNlbGVjdG9yKCcudG9vbGJhci1iYWNrZ3JvdW5kJykpOyAvLyBSRVZJRVdcbiAgICAgIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgY29uc3QgYmFja0J1dHRvbkVsID0gZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLWJhY2stYnV0dG9uJyk7XG4gICAgICBpZiAoYmFja0J1dHRvbkVsKSB7XG4gICAgICAgIGVudGVyaW5nQmFja0J1dHRvbi5hZGRFbGVtZW50KGJhY2tCdXR0b25FbCk7XG4gICAgICB9XG4gICAgICBlbnRlcmluZ1Rvb2xCYXIuYWRkQW5pbWF0aW9uKFtcbiAgICAgICAgZW50ZXJpbmdUaXRsZSxcbiAgICAgICAgZW50ZXJpbmdUb29sQmFyQnV0dG9ucyxcbiAgICAgICAgZW50ZXJpbmdUb29sQmFySXRlbXMsXG4gICAgICAgIGVudGVyaW5nVG9vbEJhckJnLFxuICAgICAgICBlbnRlcmluZ0JhY2tCdXR0b24sXG4gICAgICBdKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckJ1dHRvbnMuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgZW50ZXJpbmdUb29sQmFySXRlbXMuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgaWYgKGJhY2tEaXJlY3Rpb24pIHtcbiAgICAgICAgaWYgKCFpbmFjdGl2ZUhlYWRlcikge1xuICAgICAgICAgIGVudGVyaW5nVGl0bGVcbiAgICAgICAgICAgIC5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKVxuICAgICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbnRlcmluZ1Rvb2xCYXJJdGVtcy5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICAgICAgLy8gYmFjayBkaXJlY3Rpb24sIGVudGVyaW5nIHBhZ2UgaGFzIGEgYmFjayBidXR0b25cbiAgICAgICAgZW50ZXJpbmdCYWNrQnV0dG9uLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAvLyBlbnRlcmluZyB0b29sYmFyLCBmb3J3YXJkIGRpcmVjdGlvblxuICAgICAgICBpZiAoIWVudGVyaW5nQ29udGVudEhhc0xhcmdlVGl0bGUpIHtcbiAgICAgICAgICBlbnRlcmluZ1RpdGxlXG4gICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke09GRl9SSUdIVH0pYCwgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWApXG4gICAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVudGVyaW5nVG9vbEJhckl0ZW1zLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfUklHSFR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICAgICAgZW50ZXJpbmdUb29sQmFyQmcuYmVmb3JlQ2xlYXJTdHlsZXMoW09QQUNJVFksICd0cmFuc2Zvcm0nXSk7XG4gICAgICAgIGNvbnN0IHRyYW5zbHVjZW50SGVhZGVyID0gcGFyZW50SGVhZGVyID09PSBudWxsIHx8IHBhcmVudEhlYWRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyZW50SGVhZGVyLnRyYW5zbHVjZW50O1xuICAgICAgICBpZiAoIXRyYW5zbHVjZW50SGVhZGVyKSB7XG4gICAgICAgICAgZW50ZXJpbmdUb29sQmFyQmcuZnJvbVRvKE9QQUNJVFksIDAuMDEsICd2YXIoLS1vcGFjaXR5KScpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGVudGVyaW5nVG9vbEJhckJnLmZyb21UbygndHJhbnNmb3JtJywgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknLCAndHJhbnNsYXRlWCgwcHgpJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZm9yd2FyZCBkaXJlY3Rpb24sIGVudGVyaW5nIHBhZ2UgaGFzIGEgYmFjayBidXR0b25cbiAgICAgICAgaWYgKCFmb3J3YXJkKSB7XG4gICAgICAgICAgZW50ZXJpbmdCYWNrQnV0dG9uLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYmFja0J1dHRvbkVsICYmICFmb3J3YXJkKSB7XG4gICAgICAgICAgY29uc3QgZW50ZXJpbmdCYWNrQnRuVGV4dCA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICAgIGVudGVyaW5nQmFja0J0blRleHRcbiAgICAgICAgICAgIC5hZGRFbGVtZW50KHNoYWRvdyhiYWNrQnV0dG9uRWwpLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tdGV4dCcpKSAvLyBSRVZJRVdcbiAgICAgICAgICAgIC5mcm9tVG8oYHRyYW5zZm9ybWAsIGlzUlRMID8gJ3RyYW5zbGF0ZVgoLTEwMHB4KScgOiAndHJhbnNsYXRlWCgxMDBweCknLCAndHJhbnNsYXRlWCgwcHgpJyk7XG4gICAgICAgICAgZW50ZXJpbmdUb29sQmFyLmFkZEFuaW1hdGlvbihlbnRlcmluZ0JhY2tCdG5UZXh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIC8vIHNldHVwIGxlYXZpbmcgdmlld1xuICAgIGlmIChsZWF2aW5nRWwpIHtcbiAgICAgIGNvbnN0IGxlYXZpbmdDb250ZW50ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICBjb25zdCBsZWF2aW5nQ29udGVudEVsID0gbGVhdmluZ0VsLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGlvbi1jb250ZW50Jyk7XG4gICAgICBjb25zdCBsZWF2aW5nVG9vbEJhckVscyA9IGxlYXZpbmdFbC5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiBpb24taGVhZGVyID4gaW9uLXRvb2xiYXInKTtcbiAgICAgIGNvbnN0IGxlYXZpbmdIZWFkZXJFbHMgPSBsZWF2aW5nRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gaW9uLWhlYWRlciA+ICo6bm90KGlvbi10b29sYmFyKSwgOnNjb3BlID4gaW9uLWZvb3RlciA+IConKTtcbiAgICAgIGlmICghbGVhdmluZ0NvbnRlbnRFbCAmJiBsZWF2aW5nVG9vbEJhckVscy5sZW5ndGggPT09IDAgJiYgbGVhdmluZ0hlYWRlckVscy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbGVhdmluZ0NvbnRlbnQuYWRkRWxlbWVudChsZWF2aW5nRWwucXVlcnlTZWxlY3RvcignOnNjb3BlID4gLmlvbi1wYWdlLCA6c2NvcGUgPiBpb24tbmF2LCA6c2NvcGUgPiBpb24tdGFicycpKTsgLy8gUkVWSUVXXG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgbGVhdmluZ0NvbnRlbnQuYWRkRWxlbWVudChsZWF2aW5nQ29udGVudEVsKTsgLy8gUkVWSUVXXG4gICAgICAgIGxlYXZpbmdDb250ZW50LmFkZEVsZW1lbnQobGVhdmluZ0hlYWRlckVscyk7XG4gICAgICB9XG4gICAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihsZWF2aW5nQ29udGVudCk7XG4gICAgICBpZiAoYmFja0RpcmVjdGlvbikge1xuICAgICAgICAvLyBsZWF2aW5nIGNvbnRlbnQsIGJhY2sgZGlyZWN0aW9uXG4gICAgICAgIGxlYXZpbmdDb250ZW50XG4gICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1BhZ2UgPSBnZXRJb25QYWdlRWxlbWVudChsZWF2aW5nRWwpO1xuICAgICAgICByb290QW5pbWF0aW9uLmFmdGVyQWRkV3JpdGUoKCkgPT4ge1xuICAgICAgICAgIGlmIChyb290QW5pbWF0aW9uLmdldERpcmVjdGlvbigpID09PSAnbm9ybWFsJykge1xuICAgICAgICAgICAgbGVhdmluZ1BhZ2Uuc3R5bGUuc2V0UHJvcGVydHkoJ2Rpc3BsYXknLCAnbm9uZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgLy8gbGVhdmluZyBjb250ZW50LCBmb3J3YXJkIGRpcmVjdGlvblxuICAgICAgICBsZWF2aW5nQ29udGVudFxuICAgICAgICAgIC5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgLCBgdHJhbnNsYXRlWCgke09GRl9MRUZUfSlgKVxuICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMSwgT0ZGX09QQUNJVFkpO1xuICAgICAgfVxuICAgICAgaWYgKGxlYXZpbmdDb250ZW50RWwpIHtcbiAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25FZmZlY3RFbCA9IHNoYWRvdyhsZWF2aW5nQ29udGVudEVsKS5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1lZmZlY3QnKTtcbiAgICAgICAgaWYgKGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0RWwpIHtcbiAgICAgICAgICBjb25zdCBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyRWwgPSBsZWF2aW5nVHJhbnNpdGlvbkVmZmVjdEVsLnF1ZXJ5U2VsZWN0b3IoJy50cmFuc2l0aW9uLWNvdmVyJyk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3dFbCA9IGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0RWwucXVlcnlTZWxlY3RvcignLnRyYW5zaXRpb24tc2hhZG93Jyk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25FZmZlY3QgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgICBjb25zdCBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3cgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvbkVmZmVjdFxuICAgICAgICAgICAgLmFkZEVsZW1lbnQobGVhdmluZ1RyYW5zaXRpb25FZmZlY3RFbClcbiAgICAgICAgICAgIC5iZWZvcmVTdHlsZXMoeyBvcGFjaXR5OiAnMScsIGRpc3BsYXk6ICdibG9jaycgfSlcbiAgICAgICAgICAgIC5hZnRlclN0eWxlcyh7IG9wYWNpdHk6ICcnLCBkaXNwbGF5OiAnJyB9KTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyXG4gICAgICAgICAgICAuYWRkRWxlbWVudChsZWF2aW5nVHJhbnNpdGlvbkNvdmVyRWwpIC8vIFJFVklFV1xuICAgICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMC4xLCAwKTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvblNoYWRvd1xuICAgICAgICAgICAgLmFkZEVsZW1lbnQobGVhdmluZ1RyYW5zaXRpb25TaGFkb3dFbCkgLy8gUkVWSUVXXG4gICAgICAgICAgICAuYmVmb3JlQ2xlYXJTdHlsZXMoW09QQUNJVFldKVxuICAgICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLjcsIDAuMDMpO1xuICAgICAgICAgIGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0LmFkZEFuaW1hdGlvbihbbGVhdmluZ1RyYW5zaXRpb25Db3ZlciwgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3ddKTtcbiAgICAgICAgICBsZWF2aW5nQ29udGVudC5hZGRBbmltYXRpb24oW2xlYXZpbmdUcmFuc2l0aW9uRWZmZWN0XSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxlYXZpbmdUb29sQmFyRWxzLmZvckVhY2goKGxlYXZpbmdUb29sQmFyRWwpID0+IHtcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXIgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgbGVhdmluZ1Rvb2xCYXIuYWRkRWxlbWVudChsZWF2aW5nVG9vbEJhckVsKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1RpdGxlID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGxlYXZpbmdUaXRsZS5hZGRFbGVtZW50KGxlYXZpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLXRpdGxlJykpOyAvLyBSRVZJRVdcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJCdXR0b25zID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGJ1dHRvbnMgPSBsZWF2aW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zLFttZW51VG9nZ2xlXScpO1xuICAgICAgICBjb25zdCBwYXJlbnRIZWFkZXIgPSBsZWF2aW5nVG9vbEJhckVsLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICAgICAgY29uc3QgaW5hY3RpdmVIZWFkZXIgPSBwYXJlbnRIZWFkZXIgPT09IG51bGwgfHwgcGFyZW50SGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJlbnRIZWFkZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdoZWFkZXItY29sbGFwc2UtY29uZGVuc2UtaW5hY3RpdmUnKTtcbiAgICAgICAgY29uc3QgYnV0dG9uc1RvQW5pbWF0ZSA9IEFycmF5LmZyb20oYnV0dG9ucykuZmlsdGVyKChidXR0b24pID0+IHtcbiAgICAgICAgICBjb25zdCBpc0NvbGxhcHNlQnV0dG9uID0gYnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnYnV0dG9ucy1jb2xsYXBzZScpO1xuICAgICAgICAgIHJldHVybiAoaXNDb2xsYXBzZUJ1dHRvbiAmJiAhaW5hY3RpdmVIZWFkZXIpIHx8ICFpc0NvbGxhcHNlQnV0dG9uO1xuICAgICAgICB9KTtcbiAgICAgICAgbGVhdmluZ1Rvb2xCYXJCdXR0b25zLmFkZEVsZW1lbnQoYnV0dG9uc1RvQW5pbWF0ZSk7XG4gICAgICAgIGNvbnN0IGxlYXZpbmdUb29sQmFySXRlbXMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJJdGVtRWxzID0gbGVhdmluZ1Rvb2xCYXJFbC5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiAqOm5vdChpb24tdGl0bGUpOm5vdChpb24tYnV0dG9ucyk6bm90KFttZW51VG9nZ2xlXSknKTtcbiAgICAgICAgaWYgKGxlYXZpbmdUb29sQmFySXRlbUVscy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgbGVhdmluZ1Rvb2xCYXJJdGVtcy5hZGRFbGVtZW50KGxlYXZpbmdUb29sQmFySXRlbUVscyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJCZyA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBsZWF2aW5nVG9vbEJhckJnLmFkZEVsZW1lbnQoc2hhZG93KGxlYXZpbmdUb29sQmFyRWwpLnF1ZXJ5U2VsZWN0b3IoJy50b29sYmFyLWJhY2tncm91bmQnKSk7IC8vIFJFVklFV1xuICAgICAgICBjb25zdCBsZWF2aW5nQmFja0J1dHRvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBjb25zdCBiYWNrQnV0dG9uRWwgPSBsZWF2aW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1iYWNrLWJ1dHRvbicpO1xuICAgICAgICBpZiAoYmFja0J1dHRvbkVsKSB7XG4gICAgICAgICAgbGVhdmluZ0JhY2tCdXR0b24uYWRkRWxlbWVudChiYWNrQnV0dG9uRWwpO1xuICAgICAgICB9XG4gICAgICAgIGxlYXZpbmdUb29sQmFyLmFkZEFuaW1hdGlvbihbXG4gICAgICAgICAgbGVhdmluZ1RpdGxlLFxuICAgICAgICAgIGxlYXZpbmdUb29sQmFyQnV0dG9ucyxcbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zLFxuICAgICAgICAgIGxlYXZpbmdCYWNrQnV0dG9uLFxuICAgICAgICAgIGxlYXZpbmdUb29sQmFyQmcsXG4gICAgICAgIF0pO1xuICAgICAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihsZWF2aW5nVG9vbEJhcik7XG4gICAgICAgIC8vIGZhZGUgb3V0IGxlYXZpbmcgdG9vbGJhciBpdGVtc1xuICAgICAgICBsZWF2aW5nQmFja0J1dHRvbi5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMCk7XG4gICAgICAgIGxlYXZpbmdUb29sQmFyQnV0dG9ucy5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMCk7XG4gICAgICAgIGxlYXZpbmdUb29sQmFySXRlbXMuZnJvbVRvKE9QQUNJVFksIDAuOTksIDApO1xuICAgICAgICBpZiAoYmFja0RpcmVjdGlvbikge1xuICAgICAgICAgIGlmICghaW5hY3RpdmVIZWFkZXIpIHtcbiAgICAgICAgICAgIC8vIGxlYXZpbmcgdG9vbGJhciwgYmFjayBkaXJlY3Rpb25cbiAgICAgICAgICAgIGxlYXZpbmdUaXRsZVxuICAgICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknKVxuICAgICAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuOTksIDApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWAsIGlzUlRMID8gJ3RyYW5zbGF0ZVgoLTEwMCUpJyA6ICd0cmFuc2xhdGVYKDEwMCUpJyk7XG4gICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5iZWZvcmVDbGVhclN0eWxlcyhbT1BBQ0lUWSwgJ3RyYW5zZm9ybSddKTtcbiAgICAgICAgICAvLyBsZWF2aW5nIHRvb2xiYXIsIGJhY2sgZGlyZWN0aW9uLCBhbmQgdGhlcmUncyBubyBlbnRlcmluZyB0b29sYmFyXG4gICAgICAgICAgLy8gc2hvdWxkIGp1c3Qgc2xpZGUgb3V0LCBubyBmYWRpbmcgb3V0XG4gICAgICAgICAgY29uc3QgdHJhbnNsdWNlbnRIZWFkZXIgPSBwYXJlbnRIZWFkZXIgPT09IG51bGwgfHwgcGFyZW50SGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJlbnRIZWFkZXIudHJhbnNsdWNlbnQ7XG4gICAgICAgICAgaWYgKCF0cmFuc2x1Y2VudEhlYWRlcikge1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5mcm9tVG8oT1BBQ0lUWSwgJ3ZhcigtLW9wYWNpdHkpJywgMCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5mcm9tVG8oJ3RyYW5zZm9ybScsICd0cmFuc2xhdGVYKDBweCknLCBpc1JUTCA/ICd0cmFuc2xhdGVYKC0xMDAlKScgOiAndHJhbnNsYXRlWCgxMDAlKScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoYmFja0J1dHRvbkVsICYmICFiYWNrd2FyZCkge1xuICAgICAgICAgICAgY29uc3QgbGVhdmluZ0JhY2tCdG5UZXh0ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgICAgICBsZWF2aW5nQmFja0J0blRleHRcbiAgICAgICAgICAgICAgLmFkZEVsZW1lbnQoc2hhZG93KGJhY2tCdXR0b25FbCkucXVlcnlTZWxlY3RvcignLmJ1dHRvbi10ZXh0JykpIC8vIFJFVklFV1xuICAgICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgYHRyYW5zbGF0ZVgoJHsoaXNSVEwgPyAtMTI0IDogMTI0KSArICdweCd9KWApO1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXIuYWRkQW5pbWF0aW9uKGxlYXZpbmdCYWNrQnRuVGV4dCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIGxlYXZpbmcgdG9vbGJhciwgZm9yd2FyZCBkaXJlY3Rpb25cbiAgICAgICAgICBpZiAoIWluYWN0aXZlSGVhZGVyKSB7XG4gICAgICAgICAgICBsZWF2aW5nVGl0bGVcbiAgICAgICAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWAsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWApXG4gICAgICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMClcbiAgICAgICAgICAgICAgLmFmdGVyQ2xlYXJTdHlsZXMoW1RSQU5TRk9STSwgT1BBQ0lUWV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zXG4gICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgYHRyYW5zbGF0ZVgoJHtPRkZfTEVGVH0pYClcbiAgICAgICAgICAgIC5hZnRlckNsZWFyU3R5bGVzKFtUUkFOU0ZPUk0sIE9QQUNJVFldKTtcbiAgICAgICAgICBsZWF2aW5nQmFja0J1dHRvbi5hZnRlckNsZWFyU3R5bGVzKFtPUEFDSVRZXSk7XG4gICAgICAgICAgbGVhdmluZ1RpdGxlLmFmdGVyQ2xlYXJTdHlsZXMoW09QQUNJVFldKTtcbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckJ1dHRvbnMuYWZ0ZXJDbGVhclN0eWxlcyhbT1BBQ0lUWV0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RBbmltYXRpb247XG4gIH1cbiAgY2F0Y2ggKGVycikge1xuICAgIHRocm93IGVycjtcbiAgfVxufTtcblxuZXhwb3J0IHsgaW9zVHJhbnNpdGlvbkFuaW1hdGlvbiwgc2hhZG93IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6338\n")}}]);