{"version":3,"file":"js/430.b51a5c2c.js","mappings":"0MAI0B,kC,WAEA,iE,WAGiC,8B,WAOjC,4B,WAEA,uF,WAGiC,8B,qBAS/B,+B,GAGhBA,EAAAA,EAAAA,GAAgD,SAA7C,6CAAyC,G,WAI5B,oB,WACR,mB,WACA,sB,iSAtClBC,EAAAA,EAAAA,IA0CcC,EAAA,CA1CDC,UAAU,eAAa,C,kBAChC,IAUW,CAVe,UAAVC,EAAAA,aAAU,WAA1BH,EAAAA,EAAAA,IAUWI,EAAA,C,MAV2BC,MAAM,UAA5C,C,kBACE,IAEkB,EAFlBC,EAAAA,EAAAA,IAEkBC,EAAA,M,kBADhB,IAA+D,EAA/DD,EAAAA,EAAAA,IAA+DE,EAAA,M,kBAA/C,IAA8B,M,gBAEhDF,EAAAA,EAAAA,IAKmBG,EAAA,M,kBALD,IAEhB,WAEI,WADFH,EAAAA,EAAAA,IAAsFI,EAAA,CAAzEC,QAAK,eAAEC,EAAAA,aAAaC,OAAO,QAAxC,C,kBAA+C,IAA0B,M,4BAP/E,eAY0B,WAAVV,EAAAA,aAAU,WAA1BH,EAAAA,EAAAA,IAUWI,EAAA,C,MAV4BC,MAAM,WAA7C,C,kBACE,IAEkB,EAFlBC,EAAAA,EAAAA,IAEkBC,EAAA,M,kBADhB,IAAyD,EAAzDD,EAAAA,EAAAA,IAAyDE,EAAA,M,kBAAzC,IAAwB,M,gBAE1CF,EAAAA,EAAAA,IAKmBG,EAAA,M,kBALD,IAEhB,WAEI,WADFH,EAAAA,EAAAA,IAAsFI,EAAA,CAAzEC,QAAK,eAAEC,EAAAA,aAAaC,OAAO,QAAxC,C,kBAA+C,IAA0B,M,4BAP/E,eAYWV,EAAAA,aAAAA,EAAAA,EAAAA,OAAXW,EAAAA,EAAAA,IAeM,MAAAC,EAAA,EAbJT,EAAAA,EAAAA,IAOWF,EAAA,CAPDC,MAAM,WAAS,C,kBACvB,IAEkB,EAFlBC,EAAAA,EAAAA,IAEkBC,EAAA,M,kBADhB,IAA4D,EAA5DD,EAAAA,EAAAA,IAA4DE,EAAA,M,kBAA5C,IAA2B,M,gBAE7CF,EAAAA,EAAAA,IAEmBG,EAAA,M,kBADjB,IAAgD,CAAhDO,K,gBAGJV,EAAAA,EAAAA,IAIWW,EAAA,M,kBAHT,IAAqD,EAArDX,EAAAA,EAAAA,IAAqDY,EAAA,M,kBAAnC,IAAgB,M,OAClCZ,EAAAA,EAAAA,IAAoCa,EAAA,M,kBAA1B,IAAe,M,OACzBb,EAAAA,EAAAA,IAAuCa,EAAA,M,kBAA7B,IAAkB,M,mBAbhC,kB,iDC1BN,MAAMC,EAAgB,CAACC,EAAQC,IAAiBA,EAAaC,MAAMC,GAAMH,aAAkBG,IAE3F,IAAIC,EACAC,EAEJ,SAASC,IACL,OAAQF,IACHA,EAAoB,CACjBG,YACAC,eACAC,SACAC,UACAC,iBAIZ,SAASC,IACL,OAAQP,IACHA,EAAuB,CACpBK,UAAUG,UAAUC,QACpBJ,UAAUG,UAAUE,SACpBL,UAAUG,UAAUG,qBAGhC,MAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QAClC,SAASK,EAAiBC,GACtB,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAClC,MAAMC,EAAW,KACbL,EAAQM,oBAAoB,UAAWC,GACvCP,EAAQM,oBAAoB,QAASE,IAEnCD,EAAU,KACZJ,EAAQ,EAAKH,EAAQS,SACrBJ,KAEEG,EAAQ,KACVJ,EAAOJ,EAAQQ,OACfH,KAEJL,EAAQU,iBAAiB,UAAWH,GACpCP,EAAQU,iBAAiB,QAASF,MAetC,OAbAP,EACKU,MAAMC,IAGHA,aAAiB1B,WACjBO,EAAiBoB,IAAID,EAAOZ,MAI/Bc,OAAM,SAGXhB,EAAsBe,IAAIZ,EAASD,GAC5BC,EAEX,SAASc,EAA+BC,GAEpC,GAAIrB,EAAmBsB,IAAID,GACvB,OACJ,MAAME,EAAO,IAAIhB,SAAQ,CAACC,EAASC,KAC/B,MAAMC,EAAW,KACbW,EAAGV,oBAAoB,WAAYa,GACnCH,EAAGV,oBAAoB,QAASE,GAChCQ,EAAGV,oBAAoB,QAASE,IAE9BW,EAAW,KACbhB,IACAE,KAEEG,EAAQ,KACVJ,EAAOY,EAAGR,OAAS,IAAIY,aAAa,aAAc,eAClDf,KAEJW,EAAGN,iBAAiB,WAAYS,GAChCH,EAAGN,iBAAiB,QAASF,GAC7BQ,EAAGN,iBAAiB,QAASF,MAGjCb,EAAmBkB,IAAIG,EAAIE,GAE/B,IAAIG,EAAgB,CAChBC,IAAIC,EAAQC,EAAMC,GACd,GAAIF,aAAkBpC,eAAgB,CAElC,GAAa,SAATqC,EACA,OAAO7B,EAAmB2B,IAAIC,GAElC,GAAa,qBAATC,EACA,OAAOD,EAAOG,kBAAoB9B,EAAyB0B,IAAIC,GAGnE,GAAa,UAATC,EACA,OAAOC,EAASC,iBAAiB,QAC3BC,EACAF,EAASG,YAAYH,EAASC,iBAAiB,IAI7D,OAAO,EAAKH,EAAOC,KAEvBX,IAAIU,EAAQC,EAAMZ,GAEd,OADAW,EAAOC,GAAQZ,GACR,GAEXK,IAAIM,EAAQC,GACR,OAAID,aAAkBpC,iBACR,SAATqC,GAA4B,UAATA,IAGjBA,KAAQD,IAGvB,SAASM,EAAaC,GAClBT,EAAgBS,EAAST,GAE7B,SAASU,EAAaC,GAIlB,OAAIA,IAASjD,YAAYM,UAAU4C,aAC7B,qBAAsB9C,eAAeE,UAYvCD,IAA0B8C,SAASF,GAC5B,YAAaG,GAIhB,OADAH,EAAKI,MAAMC,EAAOC,MAAOH,GAClB,EAAK1C,EAAiB6B,IAAIgB,QAGlC,YAAaH,GAGhB,OAAO,EAAKH,EAAKI,MAAMC,EAAOC,MAAOH,KAtB9B,SAAUI,KAAeJ,GAC5B,MAAMnB,EAAKgB,EAAKQ,KAAKH,EAAOC,MAAOC,KAAeJ,GAElD,OADAvC,EAAyBiB,IAAIG,EAAIuB,EAAWE,KAAOF,EAAWE,OAAS,CAACF,IACjE,EAAKvB,IAsBxB,SAAS0B,EAAuB9B,GAC5B,MAAqB,oBAAVA,EACAmB,EAAanB,IAGpBA,aAAiBzB,gBACjB4B,EAA+BH,GAC/BrC,EAAcqC,EAAO9B,KACd,IAAI6D,MAAM/B,EAAOS,GAErBT,GAEX,SAAS,EAAKA,GAGV,GAAIA,aAAiBgC,WACjB,OAAO7C,EAAiBa,GAG5B,GAAIf,EAAeoB,IAAIL,GACnB,OAAOf,EAAeyB,IAAIV,GAC9B,MAAMiC,EAAWH,EAAuB9B,GAOxC,OAJIiC,IAAajC,IACbf,EAAegB,IAAID,EAAOiC,GAC1B/C,EAAsBe,IAAIgC,EAAUjC,IAEjCiC,EAEX,MAAMR,EAAUzB,GAAUd,EAAsBwB,IAAIV,GC5KpD,SAASkC,EAAOC,EAAMC,GAAS,QAAEC,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAe,IACxE,MAAMpD,EAAUqD,UAAUC,KAAKP,EAAMC,GAC/BO,EAAc,EAAKvD,GAgBzB,OAfIkD,GACAlD,EAAQU,iBAAiB,iBAAkB8C,IACvCN,EAAQ,EAAKlD,EAAQS,QAAS+C,EAAMC,WAAYD,EAAME,WAAY,EAAK1D,EAAQiC,iBAGnFgB,GACAjD,EAAQU,iBAAiB,WAAW,IAAMuC,MAC9CM,EACK5C,MAAMgD,IACHP,GACAO,EAAGjD,iBAAiB,SAAS,IAAM0C,MACnCD,GACAQ,EAAGjD,iBAAiB,iBAAiB,IAAMyC,SAE9CrC,OAAM,SACJyC,EAcX,MAAMK,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAIC,IAC1B,SAASC,EAAUzC,EAAQC,GACvB,KAAMD,aAAkBxC,cAClByC,KAAQD,GACM,kBAATC,EACP,OAEJ,GAAIsC,EAAcxC,IAAIE,GAClB,OAAOsC,EAAcxC,IAAIE,GAC7B,MAAMyC,EAAiBzC,EAAK0C,QAAQ,aAAc,IAC5CC,EAAW3C,IAASyC,EACpBG,EAAUP,EAAa3B,SAAS+B,GACtC,KAEEA,KAAmBE,EAAWlF,SAAWD,gBAAgBK,aACrD+E,IAAWR,EAAY1B,SAAS+B,GAClC,OAEJ,MAAMI,EAASC,eAAgBC,KAAcpC,GAEzC,MAAMnB,EAAKsB,KAAKL,YAAYsC,EAAWH,EAAU,YAAc,YAC/D,IAAI7C,EAASP,EAAGwD,MAQhB,OAPIL,IACA5C,EAASA,EAAOkD,MAAMtC,EAAKuC,iBAMjBxE,QAAQyE,IAAI,CACtBpD,EAAO0C,MAAmB9B,GAC1BiC,GAAWpD,EAAGE,QACd,IAGR,OADA4C,EAAcjD,IAAIW,EAAM6C,GACjBA,EAEXxC,GAAc+C,IAAa,IACpBA,EACHtD,IAAK,CAACC,EAAQC,EAAMC,IAAauC,EAAUzC,EAAQC,IAASoD,EAAStD,IAAIC,EAAQC,EAAMC,GACvFR,IAAK,CAACM,EAAQC,MAAWwC,EAAUzC,EAAQC,IAASoD,EAAS3D,IAAIM,EAAQC,OC/E7E,MAAM,EAAO,0BACPwB,EAAU,SAkBV6B,EAAqB,IACrBC,EAAkB,KAAK9B,IACvB+B,EAAwB,SACxBC,EAAwB,kDACxBC,EAA0B,KAC1BC,EAAU,gBACVC,EAAe,gBAkBfC,EAAwB,CAC1B,CAAC,6BAA8D,kDAC/D,CAAC,kBAAwC,2CACzC,CAAC,0BAAwD,mCACzD,CAAC,kBAAwC,6FACzC,CAAC,eAAkC,kDACnC,CAAC,+BAAkE,4EAEjEC,GAAgB,IAAI,KAAaH,EAASC,EAAcC,GAE9D,SAASE,GAAc9E,GACnB,OAAQA,aAAiB,MACrBA,EAAM+E,KAAKrD,SAAS;;;;;;;;;;;;;;;;GAmB5B,SAASsD,IAAyB,UAAEC,IAChC,MAAO,GAAGT,cAAkCS,kBAEhD,SAASC,GAAiCC,GACtC,MAAO,CACHC,MAAOD,EAASC,MAChBC,cAAe,EACfC,UAAWC,GAAkCJ,EAASG,WACtDE,aAAcC,KAAKC,OAG3B5B,eAAe6B,GAAqBC,EAAaT,GAC7C,MAAMU,QAAqBV,EAASW,OAC9BC,EAAYF,EAAa7F,MAC/B,OAAO6E,GAAcmB,OAAO,iBAAuC,CAC/DJ,cACAK,WAAYF,EAAUhB,KACtBmB,cAAeH,EAAUI,QACzBC,aAAcL,EAAUM,SAGhC,SAASC,IAAW,OAAEC,IAClB,OAAO,IAAIC,QAAQ,CACf,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBF,IAG1B,SAASG,GAAmBC,GAAW,aAAEC,IACrC,MAAMC,EAAUP,GAAWK,GAE3B,OADAE,EAAQC,OAAO,gBAAiBC,GAAuBH,IAChDC,EAOX/C,eAAekD,GAAmBC,GAC9B,MAAMhH,QAAegH,IACrB,OAAIhH,EAAOoG,QAAU,KAAOpG,EAAOoG,OAAS,IAEjCY,IAEJhH,EAEX,SAASsF,GAAkC2B,GAEvC,OAAOC,OAAOD,EAAkBxD,QAAQ,IAAK,QAEjD,SAASqD,GAAuBH,GAC5B,MAAO,GAAGrC,KAAyBqC;;;;;;;;;;;;;;;;GAmBvC9C,eAAesD,IAA0B,UAAET,EAAS,yBAAEU,IAA4B,IAAEC,IAChF,MAAMC,EAAWvC,GAAyB2B,GACpCE,EAAUP,GAAWK,GAErBa,EAAmBH,EAAyBI,aAAa,CAC3DC,UAAU,IAEd,GAAIF,EAAkB,CAClB,MAAMG,QAAyBH,EAAiBI,sBAC5CD,GACAd,EAAQC,OAAO,oBAAqBa,GAG5C,MAAME,EAAO,CACTP,MACAQ,YAAavD,EACbwD,MAAOpB,EAAUoB,MACjBC,WAAY1D,GAEV9E,EAAU,CACZqE,OAAQ,OACRgD,UACAgB,KAAMI,KAAKC,UAAUL,IAEnB1C,QAAiB6B,IAAmB,IAAMmB,MAAMZ,EAAU/H,KAChE,GAAI2F,EAASiD,GAAI,CACb,MAAMC,QAAsBlD,EAASW,OAC/BwC,EAA8B,CAChChB,IAAKe,EAAcf,KAAOA,EAC1BiB,mBAAoB,EACpB3B,aAAcyB,EAAczB,aAC5B4B,UAAWtD,GAAiCmD,EAAcG,YAE9D,OAAOF,EAGP,YAAY3C,GAAqB,sBAAuBR;;;;;;;;;;;;;;;;GAqBhE,SAASsD,GAAMC,GACX,OAAO,IAAIhJ,SAAQC,IACfgJ,WAAWhJ,EAAS+I;;;;;;;;;;;;;;;;GAoB5B,SAASE,GAAsBC,GAC3B,MAAMC,EAAMC,KAAKC,OAAOC,gBAAgBJ,IACxC,OAAOC,EAAIpF,QAAQ,MAAO,KAAKA,QAAQ,MAAO;;;;;;;;;;;;;;;;GAmBlD,MAAMwF,GAAoB,oBACpBC,GAAc,GAKpB,SAASC,KACL,IAGI,MAAMC,EAAe,IAAIC,WAAW,IAC9BC,EAASC,KAAKD,QAAUC,KAAKC,SACnCF,EAAOG,gBAAgBL,GAEvBA,EAAa,GAAK,IAAcA,EAAa,GAAK,GAClD,MAAM/B,EAAMqC,GAAON,GACnB,OAAOH,GAAkBU,KAAKtC,GAAOA,EAAM6B,GAE/C,MAAOU,GAEH,OAAOV,IAIf,SAASQ,GAAON,GACZ,MAAMS,EAAYlB,GAAsBS,GAGxC,OAAOS,EAAUC,OAAO,EAAG;;;;;;;;;;;;;;;;GAoB/B,SAASC,GAAOrD,GACZ,MAAO,GAAGA,EAAUsD,WAAWtD,EAAUoB;;;;;;;;;;;;;;;;GAmB7C,MAAMmC,GAAqB,IAAI3G,IAK/B,SAAS4G,GAAWxD,EAAWW,GAC3B,MAAM8C,EAAMJ,GAAOrD,GACnB0D,GAAuBD,EAAK9C,GAC5BgD,GAAmBF,EAAK9C,GA2B5B,SAAS+C,GAAuBD,EAAK9C,GACjC,MAAMiD,EAAYL,GAAmBpJ,IAAIsJ,GACzC,GAAKG,EAGL,IAAK,MAAMjJ,KAAYiJ,EACnBjJ,EAASgG,GAGjB,SAASgD,GAAmBF,EAAK9C,GAC7B,MAAMkD,EAAUC,KACZD,GACAA,EAAQE,YAAY,CAAEN,MAAK9C,QAE/BqD,KAEJ,IAAIC,GAAmB,KAEvB,SAASH,KAOL,OANKG,IAAoB,qBAAsBpB,OAC3CoB,GAAmB,IAAIC,iBAAiB,yBACxCD,GAAiBE,UAAYC,IACzBV,GAAuBU,EAAEC,KAAKZ,IAAKW,EAAEC,KAAK1D,OAG3CsD,GAEX,SAASD,KAC2B,IAA5BT,GAAmBe,MAAcL,KACjCA,GAAiBM,QACjBN,GAAmB;;;;;;;;;;;;;;;;GAoB3B,MAAMO,GAAgB,kCAChBC,GAAmB,EACnBC,GAAoB,+BAC1B,IAAIC,GAAY,KAChB,SAASC,KAgBL,OAfKD,KACDA,GAAYhJ,EAAO6I,GAAeC,GAAkB,CAChD1I,QAAS,CAACS,EAAIF,KAMV,OAAQA,GACJ,KAAK,EACDE,EAAGqI,kBAAkBH,SAKlCC,GAGXxH,eAAezD,GAAIsG,EAAWvG,GAC1B,MAAMgK,EAAMJ,GAAOrD,GACbxD,QAAWoI,KACX/K,EAAK2C,EAAG1B,YAAY4J,GAAmB,aACvCjK,EAAcZ,EAAGY,YAAYiK,IAC7BI,QAAkBrK,EAAYN,IAAIsJ,GAMxC,aALMhJ,EAAYsK,IAAItL,EAAOgK,SACvB5J,EAAGE,KACJ+K,GAAYA,EAASnE,MAAQlH,EAAMkH,KACpC6C,GAAWxD,EAAWvG,EAAMkH,KAEzBlH,EAGX0D,eAAe6H,GAAOhF,GAClB,MAAMyD,EAAMJ,GAAOrD,GACbxD,QAAWoI,KACX/K,EAAK2C,EAAG1B,YAAY4J,GAAmB,mBACvC7K,EAAGY,YAAYiK,IAAmBO,OAAOxB,SACzC5J,EAAGE,KAQboD,eAAe+H,GAAOlF,EAAWmF,GAC7B,MAAM1B,EAAMJ,GAAOrD,GACbxD,QAAWoI,KACX/K,EAAK2C,EAAG1B,YAAY4J,GAAmB,aACvCrH,EAAQxD,EAAGY,YAAYiK,IACvBI,QAAkBzH,EAAMlD,IAAIsJ,GAC5B/H,EAAWyJ,EAASL,GAW1B,YAViBtK,IAAbkB,QACM2B,EAAM4H,OAAOxB,SAGbpG,EAAM0H,IAAIrJ,EAAU+H,SAExB5J,EAAGE,MACL2B,GAAcoJ,GAAYA,EAASnE,MAAQjF,EAASiF,KACpD6C,GAAWxD,EAAWtE,EAASiF,KAE5BjF;;;;;;;;;;;;;;;;GAuBXyB,eAAeiI,GAAqBC,GAChC,IAAIC,EACJ,MAAMC,QAA0BL,GAAOG,EAAcrF,WAAWwF,IAC5D,MAAMD,EAAoBE,GAAgCD,GACpDE,EAAmBC,GAA+BN,EAAeE,GAEvE,OADAD,EAAsBI,EAAiBJ,oBAChCI,EAAiBH,qBAE5B,OAAIA,EAAkB5E,MAAQ6B,GAEnB,CAAE+C,wBAAyBD,GAE/B,CACHC,oBACAD,uBAOR,SAASG,GAAgCD,GACrC,MAAMI,EAAQJ,GAAY,CACtB7E,IAAK8B,KACLb,mBAAoB,GAExB,OAAOiE,GAAqBD,GAShC,SAASD,GAA+BN,EAAeE,GACnD,GAA6C,IAAzCA,EAAkB3D,mBAA4C,CAC9D,IAAKkE,UAAUC,OAAQ,CAEnB,MAAMC,EAA+BjN,QAAQE,OAAOiF,GAAcmB,OAAO,gBACzE,MAAO,CACHkG,oBACAD,oBAAqBU,GAI7B,MAAMC,EAAkB,CACpBtF,IAAK4E,EAAkB5E,IACvBiB,mBAAoB,EACpBsE,iBAAkBpH,KAAKC,OAErBuG,EAAsBa,GAAqBd,EAAeY,GAChE,MAAO,CAAEV,kBAAmBU,EAAiBX,uBAE5C,OAA6C,IAAzCC,EAAkB3D,mBAChB,CACH2D,oBACAD,oBAAqBc,GAAyBf,IAI3C,CAAEE,qBAIjBpI,eAAegJ,GAAqBd,EAAeE,GAC/C,IACI,MAAM5D,QAAoClB,GAA0B4E,EAAeE,GACnF,OAAO7L,GAAI2L,EAAcrF,UAAW2B,GAExC,MAAOyC,GAaH,MAZIjG,GAAciG,IAAkC,MAA5BA,EAAEiC,WAAW/G,iBAG3B0F,GAAOK,EAAcrF,iBAIrBtG,GAAI2L,EAAcrF,UAAW,CAC/BW,IAAK4E,EAAkB5E,IACvBiB,mBAAoB,IAGtBwC,GAIdjH,eAAeiJ,GAAyBf,GAIpC,IAAIO,QAAcU,GAA0BjB,EAAcrF,WAC1D,MAAoC,IAA7B4F,EAAMhE,yBAEHE,GAAM,KACZ8D,QAAcU,GAA0BjB,EAAcrF,WAE1D,GAAiC,IAA7B4F,EAAMhE,mBAA4C,CAElD,MAAM,kBAAE2D,EAAiB,oBAAED,SAA8BF,GAAqBC,GAC9E,OAAIC,GAKOC,EAGf,OAAOK,EAUX,SAASU,GAA0BtG,GAC/B,OAAOkF,GAAOlF,GAAWwF,IACrB,IAAKA,EACD,MAAMtH,GAAcmB,OAAO,0BAE/B,OAAOwG,GAAqBL,MAGpC,SAASK,GAAqBD,GAC1B,OAAIW,GAA+BX,GACxB,CACHjF,IAAKiF,EAAMjF,IACXiB,mBAAoB,GAGrBgE,EAEX,SAASW,GAA+BhB,GACpC,OAAiD,IAAzCA,EAAkB3D,oBACtB2D,EAAkBW,iBAAmBxI,EAAqBoB,KAAKC;;;;;;;;;;;;;;;;GAmBvE5B,eAAeqJ,IAAyB,UAAExG,EAAS,yBAAEU,GAA4B6E,GAC7E,MAAM3E,EAAW6F,GAA6BzG,EAAWuF,GACnDrF,EAAUH,GAAmBC,EAAWuF,GAExC1E,EAAmBH,EAAyBI,aAAa,CAC3DC,UAAU,IAEd,GAAIF,EAAkB,CAClB,MAAMG,QAAyBH,EAAiBI,sBAC5CD,GACAd,EAAQC,OAAO,oBAAqBa,GAG5C,MAAME,EAAO,CACTwF,aAAc,CACVrF,WAAY1D,EACZyD,MAAOpB,EAAUoB,QAGnBvI,EAAU,CACZqE,OAAQ,OACRgD,UACAgB,KAAMI,KAAKC,UAAUL,IAEnB1C,QAAiB6B,IAAmB,IAAMmB,MAAMZ,EAAU/H,KAChE,GAAI2F,EAASiD,GAAI,CACb,MAAMC,QAAsBlD,EAASW,OAC/BwH,EAAqBpI,GAAiCmD,GAC5D,OAAOiF,EAGP,YAAY3H,GAAqB,sBAAuBR,GAGhE,SAASiI,GAA6BzG,GAAW,IAAEW,IAC/C,MAAO,GAAGtC,GAAyB2B,MAAcW;;;;;;;;;;;;;;;;GAyBrDxD,eAAeyJ,GAAiBvB,EAAewB,GAAe,GAC1D,IAAIC,EACJ,MAAMlB,QAAcV,GAAOG,EAAcrF,WAAWwF,IAChD,IAAKuB,GAAkBvB,GACnB,MAAMtH,GAAcmB,OAAO,kBAE/B,MAAM2H,EAAexB,EAAS3D,UAC9B,IAAKgF,GAAgBI,GAAiBD,GAElC,OAAOxB,EAEN,GAAmC,IAA/BwB,EAAatI,cAGlB,OADAoI,EAAeI,GAA0B7B,EAAewB,GACjDrB,EAEN,CAED,IAAKM,UAAUC,OACX,MAAM7H,GAAcmB,OAAO,eAE/B,MAAM4G,EAAkBkB,GAAoC3B,GAE5D,OADAsB,EAAeM,GAAyB/B,EAAeY,GAChDA,MAGTpE,EAAYiF,QACNA,EACNlB,EAAM/D,UACZ,OAAOA,EAQX1E,eAAe+J,GAA0B7B,EAAewB,GAIpD,IAAIjB,QAAcyB,GAAuBhC,EAAcrF,WACvD,MAAyC,IAAlC4F,EAAM/D,UAAUnD,oBAEboD,GAAM,KACZ8D,QAAcyB,GAAuBhC,EAAcrF,WAEvD,MAAM6B,EAAY+D,EAAM/D,UACxB,OAAgC,IAA5BA,EAAUnD,cAEHkI,GAAiBvB,EAAewB,GAGhChF,EAWf,SAASwF,GAAuBrH,GAC5B,OAAOkF,GAAOlF,GAAWwF,IACrB,IAAKuB,GAAkBvB,GACnB,MAAMtH,GAAcmB,OAAO,kBAE/B,MAAM2H,EAAexB,EAAS3D,UAC9B,OAAIyF,GAA4BN,GACrBO,OAAOC,OAAOD,OAAOC,OAAO,GAAIhC,GAAW,CAAE3D,UAAW,CAAEnD,cAAe,KAE7E8G,KAGfrI,eAAeiK,GAAyB/B,EAAeE,GACnD,IACI,MAAM1D,QAAkB2E,GAAyBnB,EAAeE,GAC1DkC,EAA2BF,OAAOC,OAAOD,OAAOC,OAAO,GAAIjC,GAAoB,CAAE1D,cAEvF,aADMnI,GAAI2L,EAAcrF,UAAWyH,GAC5B5F,EAEX,MAAOuC,GACH,IAAIjG,GAAciG,IACe,MAA5BA,EAAEiC,WAAW/G,YAAkD,MAA5B8E,EAAEiC,WAAW/G,WAKhD,CACD,MAAMmI,EAA2BF,OAAOC,OAAOD,OAAOC,OAAO,GAAIjC,GAAoB,CAAE1D,UAAW,CAAEnD,cAAe,WAC7GhF,GAAI2L,EAAcrF,UAAWyH,cAJ7BzC,GAAOK,EAAcrF,WAM/B,MAAMoE,GAGd,SAAS2C,GAAkBxB,GACvB,YAA8B/K,IAAtB+K,GACqC,IAAzCA,EAAkB3D,mBAE1B,SAASqF,GAAiBpF,GACtB,OAAoC,IAA5BA,EAAUnD,gBACbgJ,GAAmB7F,GAE5B,SAAS6F,GAAmB7F,GACxB,MAAM9C,EAAMD,KAAKC,MACjB,OAAQA,EAAM8C,EAAUhD,cACpBgD,EAAUhD,aAAegD,EAAUlD,UAAYI,EAAMjB,EAG7D,SAASqJ,GAAoC3B,GACzC,MAAMmC,EAAsB,CACxBjJ,cAAe,EACfkJ,YAAa9I,KAAKC,OAEtB,OAAOwI,OAAOC,OAAOD,OAAOC,OAAO,GAAIhC,GAAW,CAAE3D,UAAW8F,IAEnE,SAASL,GAA4BzF,GACjC,OAAoC,IAA5BA,EAAUnD,eACdmD,EAAU+F,YAAclK,EAAqBoB,KAAKC;;;;;;;;;;;;;;;;GA0B1D5B,eAAe0K,GAAMxC,GACjB,MAAMyC,EAAoBzC,GACpB,kBAAEE,EAAiB,oBAAED,SAA8BF,GAAqB0C,GAS9E,OARIxC,EACAA,EAAoB3L,MAAMoO,QAAQ1O,OAKlCuN,GAAiBkB,GAAmBnO,MAAMoO,QAAQ1O,OAE/CkM,EAAkB5E;;;;;;;;;;;;;;;;GA2B7BxD,eAAe6K,GAAS3C,EAAewB,GAAe,GAClD,MAAMiB,EAAoBzC,QACpB4C,GAAiCH,GAGvC,MAAMjG,QAAkB+E,GAAiBkB,EAAmBjB,GAC5D,OAAOhF,EAAUpD,MAErBtB,eAAe8K,GAAiC5C,GAC5C,MAAM,oBAAEC,SAA8BF,GAAqBC,GACvDC,SAEMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKd,SAAS4C,GAAiBC,GACtB,IAAKA,IAAQA,EAAIC,QACb,MAAMC,GAAqB,qBAE/B,IAAKF,EAAIvM,KACL,MAAMyM,GAAqB,YAG/B,MAAMC,EAAa,CACf,YACA,SACA,SAEJ,IAAK,MAAMC,KAAWD,EAClB,IAAKH,EAAIC,QAAQG,GACb,MAAMF,GAAqBE,GAGnC,MAAO,CACHjF,QAAS6E,EAAIvM,KACb0C,UAAW6J,EAAIC,QAAQ9J,UACvBsB,OAAQuI,EAAIC,QAAQxI,OACpBwB,MAAO+G,EAAIC,QAAQhH,OAG3B,SAASiH,GAAqBG,GAC1B,OAAOtK,GAAcmB,OAAO,4BAA6D,CACrFmJ;;;;;;;;;;;;;;;;GAoBR,MAAMC,GAAqB,gBACrBC,GAA8B,yBAC9BC,GAAiBC,IACnB,MAAMT,EAAMS,EAAUC,YAAY,OAAO/H,eAEnCd,EAAYkI,GAAiBC,GAC7BzH,GAA2B,QAAayH,EAAK,aAC7CL,EAAoB,CACtBK,MACAnI,YACAU,2BACAoI,QAAS,IAAM/P,QAAQC,WAE3B,OAAO8O,GAELiB,GAAmBH,IACrB,MAAMT,EAAMS,EAAUC,YAAY,OAAO/H,eAEnCuE,GAAgB,QAAa8C,EAAKM,IAAoB3H,eACtDkI,EAAwB,CAC1BnB,MAAO,IAAMA,GAAMxC,GACnB2C,SAAWnB,GAAiBmB,GAAS3C,EAAewB,IAExD,OAAOmC,GAEX,SAASC,MACL,QAAmB,IAAI,KAAUR,GAAoBE,GAAe,YACpE,QAAmB,IAAI,KAAUD,GAA6BK,GAAiB,YAQnFE,MACA,QAAgB,EAAMpN,IAEtB,QAAgB,EAAMA,EAAS,WC9nC/B,MAAM,GAAgB,CAACxE,EAAQC,IAAiBA,EAAaC,MAAMC,GAAMH,aAAkBG,IAE3F,IAAI,GACA,GAEJ,SAAS,KACL,OAAQ,KACH,GAAoB,CACjBI,YACAC,eACAC,SACAC,UACAC,iBAIZ,SAAS,KACL,OAAQ,KACH,GAAuB,CACpBD,UAAUG,UAAUC,QACpBJ,UAAUG,UAAUE,SACpBL,UAAUG,UAAUG,qBAGhC,MAAM,GAAmB,IAAIE,QACvB,GAAqB,IAAIA,QACzB,GAA2B,IAAIA,QAC/B,GAAiB,IAAIA,QACrB,GAAwB,IAAIA,QAClC,SAAS,GAAiBM,GACtB,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KAClC,MAAMC,EAAW,KACbL,EAAQM,oBAAoB,UAAWC,GACvCP,EAAQM,oBAAoB,QAASE,IAEnCD,EAAU,KACZJ,EAAQ,GAAKH,EAAQS,SACrBJ,KAEEG,EAAQ,KACVJ,EAAOJ,EAAQQ,OACfH,KAEJL,EAAQU,iBAAiB,UAAWH,GACpCP,EAAQU,iBAAiB,QAASF,MAetC,OAbAP,EACKU,MAAMC,IAGHA,aAAiB1B,WACjB,GAAiB2B,IAAID,EAAOZ,MAI/Bc,OAAM,SAGX,GAAsBD,IAAIZ,EAASD,GAC5BC,EAEX,SAAS,GAA+Be,GAEpC,GAAI,GAAmBC,IAAID,GACvB,OACJ,MAAME,EAAO,IAAIhB,SAAQ,CAACC,EAASC,KAC/B,MAAMC,EAAW,KACbW,EAAGV,oBAAoB,WAAYa,GACnCH,EAAGV,oBAAoB,QAASE,GAChCQ,EAAGV,oBAAoB,QAASE,IAE9BW,EAAW,KACbhB,IACAE,KAEEG,EAAQ,KACVJ,EAAOY,EAAGR,OAAS,IAAIY,aAAa,aAAc,eAClDf,KAEJW,EAAGN,iBAAiB,WAAYS,GAChCH,EAAGN,iBAAiB,QAASF,GAC7BQ,EAAGN,iBAAiB,QAASF,MAGjC,GAAmBK,IAAIG,EAAIE,GAE/B,IAAI,GAAgB,CAChBI,IAAIC,EAAQC,EAAMC,GACd,GAAIF,aAAkBpC,eAAgB,CAElC,GAAa,SAATqC,EACA,OAAO,GAAmBF,IAAIC,GAElC,GAAa,qBAATC,EACA,OAAOD,EAAOG,kBAAoB,GAAyBJ,IAAIC,GAGnE,GAAa,UAATC,EACA,OAAOC,EAASC,iBAAiB,QAC3BC,EACAF,EAASG,YAAYH,EAASC,iBAAiB,IAI7D,OAAO,GAAKH,EAAOC,KAEvBX,IAAIU,EAAQC,EAAMZ,GAEd,OADAW,EAAOC,GAAQZ,GACR,GAEXK,IAAIM,EAAQC,GACR,OAAID,aAAkBpC,iBACR,SAATqC,GAA4B,UAATA,IAGjBA,KAAQD,IAGvB,SAAS,GAAaO,GAClB,GAAgBA,EAAS,IAE7B,SAAS,GAAaE,GAIlB,OAAIA,IAASjD,YAAYM,UAAU4C,aAC7B,qBAAsB9C,eAAeE,UAYvC,KAA0B6C,SAASF,GAC5B,YAAaG,GAIhB,OADAH,EAAKI,MAAM,GAAOE,MAAOH,GAClB,GAAK,GAAiBb,IAAIgB,QAGlC,YAAaH,GAGhB,OAAO,GAAKH,EAAKI,MAAM,GAAOE,MAAOH,KAtB9B,SAAUI,KAAeJ,GAC5B,MAAMnB,EAAKgB,EAAKQ,KAAK,GAAOF,MAAOC,KAAeJ,GAElD,OADA,GAAyBtB,IAAIG,EAAIuB,EAAWE,KAAOF,EAAWE,OAAS,CAACF,IACjE,GAAKvB,IAsBxB,SAAS,GAAuBJ,GAC5B,MAAqB,oBAAVA,EACA,GAAaA,IAGpBA,aAAiBzB,gBACjB,GAA+ByB,GAC/B,GAAcA,EAAO,MACd,IAAI+B,MAAM/B,EAAO,IAErBA,GAEX,SAAS,GAAKA,GAGV,GAAIA,aAAiBgC,WACjB,OAAO,GAAiBhC,GAG5B,GAAI,GAAeK,IAAIL,GACnB,OAAO,GAAeU,IAAIV,GAC9B,MAAMiC,EAAW,GAAuBjC,GAOxC,OAJIiC,IAAajC,IACb,GAAeC,IAAID,EAAOiC,GAC1B,GAAsBhC,IAAIgC,EAAUjC,IAEjCiC,EAEX,MAAM,GAAUjC,GAAU,GAAsBU,IAAIV,GC5KpD,SAAS,GAAOmC,EAAMC,GAAS,QAAEC,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAe,IACxE,MAAMpD,EAAUqD,UAAUC,KAAKP,EAAMC,GAC/BO,EAAc,GAAKvD,GAgBzB,OAfIkD,GACAlD,EAAQU,iBAAiB,iBAAkB8C,IACvCN,EAAQ,GAAKlD,EAAQS,QAAS+C,EAAMC,WAAYD,EAAME,WAAY,GAAK1D,EAAQiC,iBAGnFgB,GACAjD,EAAQU,iBAAiB,WAAW,IAAMuC,MAC9CM,EACK5C,MAAMgD,IACHP,GACAO,EAAGjD,iBAAiB,SAAS,IAAM0C,MACnCD,GACAQ,EAAGjD,iBAAiB,iBAAiB,IAAMyC,SAE9CrC,OAAM,SACJyC,EAOX,SAAS,GAASR,GAAM,QAAEE,GAAY,IAClC,MAAMjD,EAAUqD,UAAUgN,eAAetN,GAGzC,OAFIE,GACAjD,EAAQU,iBAAiB,WAAW,IAAMuC,MACvC,GAAKjD,GAASW,MAAK,SAG9B,MAAM,GAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxD,GAAe,CAAC,MAAO,MAAO,SAAU,SACxC,GAAgB,IAAIoD,IAC1B,SAAS,GAAUxC,EAAQC,GACvB,KAAMD,aAAkBxC,cAClByC,KAAQD,GACM,kBAATC,EACP,OAEJ,GAAI,GAAcF,IAAIE,GAClB,OAAO,GAAcF,IAAIE,GAC7B,MAAMyC,EAAiBzC,EAAK0C,QAAQ,aAAc,IAC5CC,EAAW3C,IAASyC,EACpBG,EAAU,GAAalC,SAAS+B,GACtC,KAEEA,KAAmBE,EAAWlF,SAAWD,gBAAgBK,aACrD+E,IAAW,GAAYlC,SAAS+B,GAClC,OAEJ,MAAMI,EAASC,eAAgBC,KAAcpC,GAEzC,MAAMnB,EAAKsB,KAAKL,YAAYsC,EAAWH,EAAU,YAAc,YAC/D,IAAI7C,EAASP,EAAGwD,MAQhB,OAPIL,IACA5C,EAASA,EAAOkD,MAAMtC,EAAKuC,iBAMjBxE,QAAQyE,IAAI,CACtBpD,EAAO0C,MAAmB9B,GAC1BiC,GAAWpD,EAAGE,QACd,IAGR,OADA,GAAcL,IAAIW,EAAM6C,GACjBA,EAEX,IAAcO,IAAa,IACpBA,EACHtD,IAAK,CAACC,EAAQC,EAAMC,IAAa,GAAUF,EAAQC,IAASoD,EAAStD,IAAIC,EAAQC,EAAMC,GACvFR,IAAK,CAACM,EAAQC,MAAW,GAAUD,EAAQC,IAASoD,EAAS3D,IAAIM,EAAQC;;;;;;;;;;;;;;;;;AC9D7E,MAAM8O,GAAkB,4BAClBC,GAAmB,uCACnBC,GAAoB,0FACpBC,GAAW,6CACXC,GAAsB,kBACtBC,GAAwB,iBACxBC,GAAwB,gBAExBC,GAAqC,eAC3C,IAAIC,GAoBAC;;;;;;;;;;;;;;;;;AAsBJ,SAASC,GAAc3H,GACnB,MAAM4H,EAAa,IAAInH,WAAWT,GAC5B6H,EAAe3H,KAAKC,OAAOC,gBAAgBwH,IACjD,OAAOC,EAAahN,QAAQ,KAAM,IAAIA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,KAE7E,SAASiN,GAAcD,GACnB,MAAME,EAAU,IAAIC,QAAQ,EAAKH,EAAaI,OAAS,GAAM,GACvDC,GAAUL,EAAeE,GAC1BlN,QAAQ,MAAO,KACfA,QAAQ,KAAM,KACbsN,EAAUC,KAAKF,GACfG,EAAc,IAAI5H,WAAW0H,EAAQF,QAC3C,IAAK,IAAIK,EAAI,EAAGA,EAAIH,EAAQF,SAAUK,EAClCD,EAAYC,GAAKH,EAAQI,WAAWD,GAExC,OAAOD;;;;;;;;;;;;;;;;IAxDX,SAAWX,GACPA,EAAYA,EAAY,gBAAkB,GAAK,eAC/CA,EAAYA,EAAY,wBAA0B,GAAK,wBAF3D,CAGGD,KAAkBA,GAAgB,KAiBrC,SAAWC,GACPA,EAAY,iBAAmB,gBAC/BA,EAAY,wBAA0B,uBAF1C,CAGGA,KAAgBA,GAAc,KAoDjC,MAAMc,GAAc,uBAKdC,GAAiB,EACjBC,GAAwB,yBAC9BzN,eAAe0N,GAAmBC,GAC9B,GAAI,cAAe5O,UAAW,CAG1B,MAAM6O,QAAkB7O,UAAU6O,YAC5BC,EAAUD,EAAUE,KAAIzO,GAAMA,EAAGZ,OACvC,IAAKoP,EAAQjQ,SAAS2P,IAElB,OAAO,KAGf,IAAIQ,EAAe,KACnB,MAAM1O,QAAW,GAAOkO,GAAaC,GAAgB,CACjD5O,QAASoB,MAAOX,EAAIF,EAAYC,EAAY4O,KACxC,IAAIjI,EACJ,GAAI5G,EAAa,EAEb,OAEJ,IAAKE,EAAGjC,iBAAiB6Q,SAASR,IAE9B,OAEJ,MAAMnQ,EAAc0Q,EAAmB1Q,YAAYmQ,IAC7CnR,QAAcgB,EAAY6C,MAAM,eAAenD,IAAI2Q,GAEzD,SADMrQ,EAAY4Q,QACb5R,EAIL,GAAmB,IAAf6C,EAAkB,CAClB,MAAMgP,EAAa7R,EACnB,IAAK6R,EAAWC,OAASD,EAAWE,SAAWF,EAAW1K,SACtD,OAEJsK,EAAe,CACXzM,MAAO6M,EAAWG,SAClBC,WAA6C,QAAhCxI,EAAKoI,EAAWI,kBAA+B,IAAPxI,EAAgBA,EAAKpE,KAAKC,MAC/E4M,oBAAqB,CACjBJ,KAAMD,EAAWC,KACjBC,OAAQF,EAAWE,OACnB5K,SAAU0K,EAAW1K,SACrBgL,QAASN,EAAWM,QACpBC,SAAyC,kBAAxBP,EAAWO,SACtBP,EAAWO,SACXhC,GAAcyB,EAAWO,iBAItC,GAAmB,IAAfvP,EAAkB,CACvB,MAAMgP,EAAa7R,EACnByR,EAAe,CACXzM,MAAO6M,EAAWG,SAClBC,WAAYJ,EAAWI,WACvBC,oBAAqB,CACjBJ,KAAM1B,GAAcyB,EAAWC,MAC/BC,OAAQ3B,GAAcyB,EAAWE,QACjC5K,SAAU0K,EAAW1K,SACrBgL,QAASN,EAAWM,QACpBC,SAAUhC,GAAcyB,EAAWO,iBAI1C,GAAmB,IAAfvP,EAAkB,CACvB,MAAMgP,EAAa7R,EACnByR,EAAe,CACXzM,MAAO6M,EAAWG,SAClBC,WAAYJ,EAAWI,WACvBC,oBAAqB,CACjBJ,KAAM1B,GAAcyB,EAAWC,MAC/BC,OAAQ3B,GAAcyB,EAAWE,QACjC5K,SAAU0K,EAAW1K,SACrBgL,QAASN,EAAWM,QACpBC,SAAUhC,GAAcyB,EAAWO,gBAWvD,OALArP,EAAG+H,cAEG,GAASmG,UACT,GAAS,8BACT,GAAS,aACRoB,GAAkBZ,GAAgBA,EAAe,KAE5D,SAASY,GAAkBZ,GACvB,IAAKA,IAAiBA,EAAaS,oBAC/B,OAAO,EAEX,MAAM,oBAAEA,GAAwBT,EAChC,MAA2C,kBAA5BA,EAAaQ,YACxBR,EAAaQ,WAAa,GACI,kBAAvBR,EAAazM,OACpByM,EAAazM,MAAM0L,OAAS,GACQ,kBAA7BwB,EAAoBJ,MAC3BI,EAAoBJ,KAAKpB,OAAS,GACI,kBAA/BwB,EAAoBH,QAC3BG,EAAoBH,OAAOrB,OAAS,GACI,kBAAjCwB,EAAoB/K,UAC3B+K,EAAoB/K,SAASuJ,OAAS,GACC,kBAAhCwB,EAAoBC,SAC3BD,EAAoBC,QAAQzB,OAAS,GACG,kBAAjCwB,EAAoBE,UAC3BF,EAAoBE,SAAS1B,OAAS;;;;;;;;;;;;;;;;GAoB9C,MAAM,GAAgB,8BAChB,GAAmB,EACnB,GAAoB,2BAC1B,IAAI,GAAY,KAChB,SAAS,KAeL,OAdK,KACD,GAAY,GAAO,GAAe,GAAkB,CAChDpO,QAAS,CAACgQ,EAAWzP,KAKjB,OAAQA,GACJ,KAAK,EACDyP,EAAUlH,kBAAkB,SAKzC,GAGX1H,eAAe6O,GAAMC,GACjB,MAAMxI,EAAM,GAAOwI,GACbzP,QAAW,KACX0O,QAAsB1O,EACvB1B,YAAY,IACZL,YAAY,IACZN,IAAIsJ,GACT,GAAIyH,EACA,OAAOA,EAEN,CAED,MAAMgB,QAAwBrB,GAAmBoB,EAAqBjM,UAAU8K,UAChF,GAAIoB,EAEA,aADMC,GAAMF,EAAsBC,GAC3BA,GAKnB/O,eAAegP,GAAMF,EAAsBf,GACvC,MAAMzH,EAAM,GAAOwI,GACbzP,QAAW,KACX3C,EAAK2C,EAAG1B,YAAY,GAAmB,aAG7C,aAFMjB,EAAGY,YAAY,IAAmBsK,IAAImG,EAAczH,SACpD5J,EAAGE,KACFmR,EAGX/N,eAAeiP,GAASH,GACpB,MAAMxI,EAAM,GAAOwI,GACbzP,QAAW,KACX3C,EAAK2C,EAAG1B,YAAY,GAAmB,mBACvCjB,EAAGY,YAAY,IAAmBwK,OAAOxB,SACzC5J,EAAGE,KAEb,SAAS,IAAO,UAAEiG,IACd,OAAOA,EAAUoB;;;;;;;;;;;;;;;;GAmBrB,MAAMiL,GAAY,CACd,CAAC,6BAA8D,kDAC/D,CAAC,4BAAuD,gDACxD,CAAC,wBAA+C,wDAChD,CAAC,sBAAgD,qEACjD,CAAC,sBAAgD,mEACjD,CAAC,uBAAkD,2EACnD,CAAC,0BAAwD,mGACzD,CAAC,sCAAyE,+EAC1E,CAAC,0BAAwD,qEACzD,CAAC,4BAA4D,2DAC7D,CAAC,4BAA4D,yEAE7D,CAAC,uBAAkD,oEACnD,CAAC,yBAAsD,wDACvD,CAAC,0BAAwD,4IAEzD,CAAC,2BAA0D,uEAC3D,CAAC,sBAAgD,iEACjD,CAAC,qBAA8C,yCAC/C,CAAC,iCAAsE,yIAGrE,GAAgB,IAAI,KAAa,YAAa,YAAaA;;;;;;;;;;;;;;;;;AAkBjElP,eAAemP,GAAgBL,EAAsBN,GACjD,MAAMzL,QAAgB,GAAW+L,GAC3B/K,EAAOqL,GAAQZ,GACfa,EAAmB,CACrBtP,OAAQ,OACRgD,UACAgB,KAAMI,KAAKC,UAAUL,IAEzB,IAAIuL,EACJ,IACI,MAAMjO,QAAiBgD,MAAMkL,GAAYT,EAAqBjM,WAAYwM,GAC1EC,QAAqBjO,EAASW,OAElC,MAAOwN,GACH,MAAM,GAActN,OAAO,yBAAuD,CAC9EuN,UAAWD,IAGnB,GAAIF,EAAapT,MAAO,CACpB,MAAMmG,EAAUiN,EAAapT,MAAMmG,QACnC,MAAM,GAAcH,OAAO,yBAAuD,CAC9EuN,UAAWpN,IAGnB,IAAKiN,EAAahO,MACd,MAAM,GAAcY,OAAO,4BAE/B,OAAOoN,EAAahO,MAExBtB,eAAe0P,GAAmBZ,EAAsBf,GACpD,MAAMhL,QAAgB,GAAW+L,GAC3B/K,EAAOqL,GAAQrB,EAAaS,qBAC5BmB,EAAgB,CAClB5P,OAAQ,QACRgD,UACAgB,KAAMI,KAAKC,UAAUL,IAEzB,IAAIuL,EACJ,IACI,MAAMjO,QAAiBgD,MAAM,GAAGkL,GAAYT,EAAqBjM,cAAckL,EAAazM,QAASqO,GACrGL,QAAqBjO,EAASW,OAElC,MAAOwN,GACH,MAAM,GAActN,OAAO,sBAAiD,CACxEuN,UAAWD,IAGnB,GAAIF,EAAapT,MAAO,CACpB,MAAMmG,EAAUiN,EAAapT,MAAMmG,QACnC,MAAM,GAAcH,OAAO,sBAAiD,CACxEuN,UAAWpN,IAGnB,IAAKiN,EAAahO,MACd,MAAM,GAAcY,OAAO,yBAE/B,OAAOoN,EAAahO,MAExBtB,eAAe4P,GAAmBd,EAAsBxN,GACpD,MAAMyB,QAAgB,GAAW+L,GAC3Be,EAAqB,CACvB9P,OAAQ,SACRgD,WAEJ,IACI,MAAM1B,QAAiBgD,MAAM,GAAGkL,GAAYT,EAAqBjM,cAAcvB,IAASuO,GAClFP,QAAqBjO,EAASW,OACpC,GAAIsN,EAAapT,MAAO,CACpB,MAAMmG,EAAUiN,EAAapT,MAAMmG,QACnC,MAAM,GAAcH,OAAO,2BAA2D,CAClFuN,UAAWpN,KAIvB,MAAOmN,GACH,MAAM,GAActN,OAAO,2BAA2D,CAClFuN,UAAWD,KAIvB,SAASD,IAAY,UAAEpO,IACnB,MAAO,GAAGgL,eAAqBhL,kBAEnCnB,eAAe,IAAW,UAAE6C,EAAS,cAAEqF,IACnC,MAAMxD,QAAkBwD,EAAc2C,WACtC,OAAO,IAAInI,QAAQ,CACf,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBE,EAAUJ,OAC5B,qCAAsC,OAAOiC,MAGrD,SAAS0K,IAAQ,OAAEf,EAAM,KAAED,EAAI,SAAE3K,EAAQ,SAAEiL,IACvC,MAAM3K,EAAO,CACT+L,IAAK,CACDrM,WACA2K,OACAC,WAMR,OAHIK,IAAaxC,KACbnI,EAAK+L,IAAIC,kBAAoBrB,GAE1B3K;;;;;;;;;;;;;;;;GAoBX,MAAMiM,GAAsB,OAC5BhQ,eAAeiQ,GAAiBC,GAC5B,MAAMC,QAAyBC,GAAoBF,EAAUG,eAAgBH,EAAUxB,UACjFF,EAAsB,CACxBE,SAAUwB,EAAUxB,SACpBD,QAASyB,EAAUG,eAAeC,MAClC7M,SAAU0M,EAAiB1M,SAC3B2K,KAAM1B,GAAcyD,EAAiBjK,OAAO,SAC5CmI,OAAQ3B,GAAcyD,EAAiBjK,OAAO,YAE5C6H,QAAqBc,GAAMqB,EAAUpB,sBAC3C,GAAKf,EAIA,IAAKwC,GAAaxC,EAAaS,oBAAqBA,GAWpD,OAAI7M,KAAKC,OAASmM,EAAaQ,WAAayB,GAEtCQ,GAAYN,EAAW,CAC1B5O,MAAOyM,EAAazM,MACpBiN,WAAY5M,KAAKC,MACjB4M,wBAKGT,EAAazM,MAnBpB,UACUsO,GAAmBM,EAAUpB,qBAAsBf,EAAazM,OAE1E,MAAO2F,GAEH2D,QAAQ6F,KAAKxJ,GAEjB,OAAOyJ,GAAYR,EAAUpB,qBAAsBN,GAXnD,OAAOkC,GAAYR,EAAUpB,qBAAsBN,GA8B3DxO,eAAe2Q,GAAoBT,GAC/B,MAAMnC,QAAqBc,GAAMqB,EAAUpB,sBACvCf,UACM6B,GAAmBM,EAAUpB,qBAAsBf,EAAazM,aAChE2N,GAASiB,EAAUpB,uBAG7B,MAAMqB,QAAyBD,EAAUG,eAAeO,YAAYC,kBACpE,OAAIV,GACOA,EAAiBW,cAKhC9Q,eAAewQ,GAAYN,EAAWnC,GAClC,IACI,MAAMgD,QAAqBrB,GAAmBQ,EAAUpB,qBAAsBf,GACxEiD,EAAsB5G,OAAOC,OAAOD,OAAOC,OAAO,GAAI0D,GAAe,CAAEzM,MAAOyP,EAAcxC,WAAY5M,KAAKC,QAEnH,aADMoN,GAAMkB,EAAUpB,qBAAsBkC,GACrCD,EAEX,MAAO9J,GAEH,YADM0J,GAAoBT,GACpBjJ,GAGdjH,eAAe0Q,GAAY5B,EAAsBN,GAC7C,MAAMlN,QAAc6N,GAAgBL,EAAsBN,GACpDT,EAAe,CACjBzM,QACAiN,WAAY5M,KAAKC,MACjB4M,uBAGJ,aADMQ,GAAMF,EAAsBf,GAC3BA,EAAazM,MAKxBtB,eAAeoQ,GAAoBC,EAAgB3B,GAC/C,MAAMuC,QAAqBZ,EAAeO,YAAYC,kBACtD,OAAII,GAGGZ,EAAeO,YAAYM,UAAU,CACxCC,iBAAiB,EAGjBC,qBAAsBvE,GAAc6B,KAM5C,SAAS6B,GAAac,EAAWC,GAC7B,MAAMC,EAAkBD,EAAe5C,WAAa2C,EAAU3C,SACxD8C,EAAkBF,EAAe7N,WAAa4N,EAAU5N,SACxDgO,EAAcH,EAAelD,OAASiD,EAAUjD,KAChDsD,EAAgBJ,EAAejD,SAAWgD,EAAUhD,OAC1D,OAAOkD,GAAmBC,GAAmBC,GAAeC;;;;;;;;;;;;;;;;GAmBhE,SAASC,GAAmBC,GACxB,MAAMC,EAAU,CACZC,KAAMF,EAAgBE,KAEtBC,YAAaH,EAAgBI,aAE7BC,UAAWL,EAAgBM,cAK/B,OAHAC,GAA6BN,EAASD,GACtCQ,GAAqBP,EAASD,GAC9BS,GAAoBR,EAASD,GACtBC,EAEX,SAASM,GAA6BN,EAASS,GAC3C,IAAKA,EAAuBC,aACxB,OAEJV,EAAQU,aAAe,GACvB,MAAMC,EAAQF,EAAuBC,aAAaC,MAC5CA,IACFX,EAAQU,aAAaC,MAAQA,GAEjC,MAAMzO,EAAOuO,EAAuBC,aAAaxO,KAC3CA,IACF8N,EAAQU,aAAaxO,KAAOA,GAEhC,MAAM0O,EAAQH,EAAuBC,aAAaE,MAC5CA,IACFZ,EAAQU,aAAaE,MAAQA,GAGrC,SAASL,GAAqBP,EAASS,GAC9BA,EAAuBpL,OAG5B2K,EAAQ3K,KAAOoL,EAAuBpL,MAE1C,SAASmL,GAAoBR,EAASS,GAClC,IAAIvM,EAAI2M,EAAIC,EAAIC,EAAIC,EAEpB,IAAKP,EAAuBQ,cACyB,QAA9C/M,EAAKuM,EAAuBC,oBAAiC,IAAPxM,OAAgB,EAASA,EAAGgN,cACrF,OAEJlB,EAAQiB,WAAa,GACrB,MAAME,EAAwG,QAAhGL,EAAkD,QAA5CD,EAAKJ,EAAuBQ,kBAA+B,IAAPJ,OAAgB,EAASA,EAAGM,YAAyB,IAAPL,EAAgBA,EAAoD,QAA9CC,EAAKN,EAAuBC,oBAAiC,IAAPK,OAAgB,EAASA,EAAGG,aACxNC,IACFnB,EAAQiB,WAAWE,KAAOA,GAG9B,MAAMC,EAA8D,QAA5CJ,EAAKP,EAAuBQ,kBAA+B,IAAPD,OAAgB,EAASA,EAAGK,gBAClGD,IACFpB,EAAQiB,WAAWG,eAAiBA;;;;;;;;;;;;;;;;GAoB5C,SAASE,GAAiBjM,GAEtB,MAAuB,kBAATA,KAAuBA,GAAQkF,MAAuBlF;;;;;;;;;;;;;;;;GAqBxE,SAASkM,GAAcC,EAAIC,GACvB,MAAMC,EAAc,GACpB,IAAK,IAAIlG,EAAI,EAAGA,EAAIgG,EAAGrG,OAAQK,IAC3BkG,EAAYC,KAAKH,EAAGI,OAAOpG,IACvBA,EAAIiG,EAAGtG,QACPuG,EAAYC,KAAKF,EAAGG,OAAOpG,IAGnC,OAAOkG,EAAYG,KAAK;;;;;;;;;;;;;;;;GAmB5B,SAAS,GAAiB1I,GACtB,IAAKA,IAAQA,EAAIC,QACb,MAAM,GAAqB,4BAE/B,IAAKD,EAAIvM,KACL,MAAM,GAAqB,YAG/B,MAAM0M,EAAa,CACf,YACA,SACA,QACA,sBAEE,QAAEF,GAAYD,EACpB,IAAK,MAAMI,KAAWD,EAClB,IAAKF,EAAQG,GACT,MAAM,GAAqBA,GAGnC,MAAO,CACHjF,QAAS6E,EAAIvM,KACb0C,UAAW8J,EAAQ9J,UACnBsB,OAAQwI,EAAQxI,OAChBwB,MAAOgH,EAAQhH,MACf0J,SAAU1C,EAAQ0I,mBAG1B,SAAS,GAAqBtI,GAC1B,OAAO,GAAcnJ,OAAO,4BAA6D,CACrFmJ;;;;;;;;;;;;;;;;GA3DR+H,GAAc,mCAAoC,mCAClDA,GAAc,uBAAwB,uBA8EtC,MAAMQ,GACFC,YAAY7I,EAAK9C,EAAe4L,GAE5B9V,KAAK+V,0CAA2C,EAChD/V,KAAKgW,2BAA6B,KAClChW,KAAKiW,iBAAmB,KACxBjW,KAAKkW,UAAY,GACjBlW,KAAKmW,qBAAsB,EAC3B,MAAMtR,EAAY,GAAiBmI,GACnChN,KAAK8Q,qBAAuB,CACxB9D,MACAnI,YACAqF,gBACA4L,qBAGRnI,UACI,OAAO/P,QAAQC;;;;;;;;;;;;;;;;GAoBvBmE,eAAeoU,GAAkBlE,GAC7B,IAAInK,EACJ,IACImK,EAAUG,qBAAuB1H,UAAU0L,cAAcC,SAAStI,GAAiB,CAC/EsE,MAAOrE,KAOXiE,EAAUG,eAAetI,SAASvL,OAAM,SAI5C,MAAOyK,GACH,MAAM,GAAc/E,OAAO,qCAAwE,CAC/FqS,oBAAkC,QAAZxO,EAAKkB,SAAsB,IAAPlB,OAAgB,EAASA,EAAG1D;;;;;;;;;;;;;;;;GAqBlFrC,eAAewU,GAAYtE,EAAWG,GAIlC,GAHKA,GAAmBH,EAAUG,sBACxB+D,GAAkBlE,GAEvBG,IAAoBH,EAAUG,eAAnC,CAGA,KAAMA,aAA0BoE,2BAC5B,MAAM,GAAcvS,OAAO,2BAE/BgO,EAAUG,eAAiBA;;;;;;;;;;;;;;;;GAmB/BrQ,eAAe0U,GAAexE,EAAWxB,GAC/BA,EACFwB,EAAUxB,SAAWA,EAEfwB,EAAUxB,WAChBwB,EAAUxB,SAAWxC;;;;;;;;;;;;;;;;GAoB7BlM,eAAe2U,GAAWzE,EAAWjF,GACjC,IAAKtC,UACD,MAAM,GAAczG,OAAO,4BAK/B,GAHgC,YAA5B0S,aAAaC,kBACPD,aAAaE,oBAES,YAA5BF,aAAaC,WACb,MAAM,GAAc3S,OAAO,sBAI/B,aAFMwS,GAAexE,EAAuB,OAAZjF,QAAgC,IAAZA,OAAqB,EAASA,EAAQyD,gBACpF8F,GAAYtE,EAAuB,OAAZjF,QAAgC,IAAZA,OAAqB,EAASA,EAAQ8J,2BAChF9E,GAAiBC;;;;;;;;;;;;;;;;GAmB5BlQ,eAAegV,GAAW9E,EAAW+E,EAAa/N,GAC9C,MAAMgO,EAAYC,GAAaF,GACzBG,QAAkBlF,EAAUpB,qBAAqBgF,kBAAkB9W,MACzEoY,EAAUC,SAASH,EAAW,CAE1BI,WAAYpO,EAAKkF,IACjBmJ,aAAcrO,EAAKmF,IACnBmJ,aAActO,EAAKoF,IACnBmJ,oBAAqBC,KAAKC,MAAMhU,KAAKC,MAAQ,OAIrD,SAASuT,GAAaF,GAClB,OAAQA,GACJ,KAAKxI,GAAYmJ,qBACb,MAAO,oBACX,KAAKnJ,GAAYoJ,cACb,MAAO,0BACX,QACI,MAAM,IAAIC;;;;;;;;;;;;;;;;GAoBtB9V,eAAe+V,GAAqB7F,EAAWhR,GAC3C,MAAM0S,EAAkB1S,EAAMgI,KAC9B,IAAK0K,EAAgBoE,oBACjB,OAEA9F,EAAU+D,kBACVrC,EAAgBqD,cAAgBxI,GAAYoJ,gBACF,oBAA/B3F,EAAU+D,iBACjB/D,EAAU+D,iBAAiBtC,GAAmBC,IAG9C1B,EAAU+D,iBAAiBgC,KAAKtE,GAAmBC,KAI3D,MAAMsE,EAActE,EAAgB1K,KAChCiM,GAAiB+C,IACmC,MAApDA,EAAY3J,WACNyI,GAAW9E,EAAW0B,EAAgBqD,YAAaiB,GAIjE,MAAM,GAAO,sBACP,GAAU,SAkBVC,GAA0B1K,IAC5B,MAAMyE,EAAY,IAAI0D,GAAiBnI,EAAUC,YAAY,OAAO/H,eAAgB8H,EAAUC,YAAY,0BAA0B/H,eAAgB8H,EAAUC,YAAY,uBAE1K,OADA/C,UAAU0L,cAAcjY,iBAAiB,WAAW6K,GAAK8O,GAAqB7F,EAAWjJ,KAClFiJ,GAELkG,GAAkC3K,IACpC,MAAMyE,EAAYzE,EACbC,YAAY,aACZ/H,eACC0S,EAAoB,CACtBxL,SAAWI,GAAY0J,GAAWzE,EAAWjF,IAEjD,OAAOoL,GAEX,SAASC,MACL,QAAmB,IAAI,KAAU,YAAaH,GAAwB,YACtE,QAAmB,IAAI,KAAU,qBAAsBC,GAAgC,aACvF,QAAgB,GAAM,KAEtB,QAAgB,GAAM,GAAS;;;;;;;;;;;;;;;;GAyBnCpW,eAAeuW,KACX,UAGU,UAEV,MAAOtP,GACH,OAAO,EAKX,MAA0B,qBAAXuP,SACX,YACA,WACA,kBAAmB7N,WACnB,gBAAiB6N,QACjB,iBAAkBA,QAClB,UAAWA,QACX/B,0BAA0B1Z,UAAU0b,eAAe,qBACnDC,iBAAiB3b,UAAU0b,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ElD,SAASE,GAAqB3L,GAAM,WAchC,OATAuL,KAAoBla,MAAKua,IAErB,IAAKA,EACD,MAAM,GAAc1U,OAAO,0BAEhC2U,IAEC,MAAM,GAAc3U,OAAO,8BAExB,SAAa,QAAmB8I,GAAM,aAAarH,eAiB9D3D,eAAe,GAASkQ,EAAWjF,GAE/B,OADAiF,GAAY,QAAmBA,GACxByE,GAAWzE,EAAWjF,GAuCjCqL,K,qCN5oCA,IACEQ,WAAW,CACXC,UADW,MAEXC,QAFW,MAGXC,cAHW,MAIXC,aAJW,MAKXC,gBALW,MAMXC,eANW,MAOXC,QAPW,MAQXC,QARW,MASXC,eAAcA,GAAAA,IAEdrQ,OACE,MAAO,CACL2N,WAAWD,aAAaC,WACxB2C,YAAW,IAGfC,QAAS,CACPzX,8BACE,GAAMhC,KAAK0Z,MAAMC,MAAMC,KAAKC,QAAQ,GAAO7Z,KAAK0Z,MAAMC,MAAMG,UAAUC,WAAY/Z,KAAKwZ,WAGvF,IACE,MAAM9I,EAAS1Q,KAAK0Z,MAAMC,MAAMG,SAASC,SAASrJ,SAC5CwB,EAAY8H,KACZ1W,QAAYuJ,GAASqF,EAAW,CAACxB,aACjChT,EAAQ,CACZuc,KAAK,UACLC,gBAAgB5W,EAChB6W,WAAWxP,UAAUyP,iBAEjBC,KAAAA,KAAa,GAAEra,KAAK0Z,MAAMC,MAAMW,gCAAgC5c,GACtEsC,KAAKwZ,YAAW,EACjB,MAAMhI,GACL5E,QAAQ2N,IAAI/I,KAGhBxP,kBACE,IACEhC,KAAK6W,iBAAiBD,aAAaE,oBACf,WAAjB9W,KAAK6W,YACN7W,KAAKwa,wBAER,MAAMhJ,GACLxR,KAAKya,OAAO,oCAGhBC,OACM1a,KAAK0Z,MAAMC,OAAOG,UAAUC,WAGhCY,EAAAA,EAAAA,IAAc3a,KAAK0Z,MAAMC,MAAMG,SAASC,YAG5Ca,UACE,MAAMlT,EAAK1H,KACXA,KAAK6a,OAAOC,GAAG,eAAc,WAC3BpT,EAAKgT,OACLhT,EAAK8S,2BAEPxa,KAAK6a,OAAOC,GAAG,WAAU,WACvBpT,EAAK8S,2BAEP9S,EAAKgT,OACLhT,EAAK8S,0B,WO3HT,MAAMO,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://tezkel-delivery/./src/views/MsgDashboard.vue","webpack://tezkel-delivery/./node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js","webpack://tezkel-delivery/./node_modules/@firebase/installations/node_modules/idb/build/index.js","webpack://tezkel-delivery/./node_modules/@firebase/installations/dist/esm/index.esm2017.js","webpack://tezkel-delivery/./node_modules/@firebase/messaging/node_modules/idb/build/wrap-idb-value.js","webpack://tezkel-delivery/./node_modules/@firebase/messaging/node_modules/idb/build/index.js","webpack://tezkel-delivery/./node_modules/@firebase/messaging/dist/esm/index.esm2017.js","webpack://tezkel-delivery/./src/views/MsgDashboard.vue?fbaa"],"sourcesContent":["<template>\r\n  <base-layout pageTitle=\"Уведомления\">\r\n      <ion-card v-if=\"permission=='denied'\" color=\"danger\">\r\n        <ion-card-header>\r\n          <ion-card-title>Уведомления заблокированы вами</ion-card-title>\r\n        </ion-card-header>\r\n        <ion-card-content>\r\n          К сожалению, мы не сможем уведомлять вас о статусах заказов \r\n          <p>\r\n            <ion-button @click=\"subscribe()\" expand=\"full\">Подписаться на уведомления</ion-button>\r\n          </p>\r\n        </ion-card-content>\r\n      </ion-card>\r\n\r\n      <ion-card v-if=\"permission=='default'\" color=\"warning\">\r\n        <ion-card-header>\r\n          <ion-card-title>Уведомления не разрешены</ion-card-title>\r\n        </ion-card-header>\r\n        <ion-card-content>\r\n          Чтобы вовремя узнавать об изменениях статусов заказов, подпишитесь на уведомления\r\n          <p>\r\n            <ion-button @click=\"subscribe()\" expand=\"full\">Подписаться на уведомления</ion-button>\r\n          </p>\r\n        </ion-card-content>        \r\n      </ion-card>\r\n\r\n      <div v-if=\"registered\">\r\n\r\n        <ion-card color=\"success\">\r\n          <ion-card-header>\r\n            <ion-card-title>Вы подписаны на уведомления</ion-card-title>\r\n          </ion-card-header>\r\n          <ion-card-content>\r\n            <p>Вам будут приходить некоторые уведомления</p>\r\n          </ion-card-content>\r\n        </ion-card>\r\n        <ion-list>\r\n          <ion-item-divider>Темы уведомлений</ion-item-divider>\r\n          <ion-item>Статусы заказов</ion-item>\r\n          <ion-item>Начисленные бонусы</ion-item>\r\n        </ion-list>\r\n      </div>\r\n\r\n  </base-layout>\r\n</template>\r\n<script>\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken } from \"firebase/messaging\";\r\n\r\n\r\nimport {\r\n  IonButton,\r\n  IonCard,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCardSubtitle,\r\n  IonCardContent,\r\n  IonList,\r\n  IonItem,\r\n  IonItemDivider,\r\n}             from \"@ionic/vue\"\r\nimport jQuery from 'jquery'\r\n\r\nexport default {\r\n  components:{\r\n  IonButton,\r\n  IonCard,\r\n  IonCardHeader,\r\n  IonCardTitle,\r\n  IonCardSubtitle,\r\n  IonCardContent,\r\n  IonList,\r\n  IonItem,\r\n  IonItemDivider,\r\n  },\r\n  data(){\r\n    return {\r\n      permission:Notification.permission,\r\n      registered:false\r\n    }\r\n  },\r\n  methods: {\r\n    async saveNotificationToken(){\r\n      if( !(this.$heap.state.user.user_id>0) || !this.$heap.state.settings?.firebase || this.registered ){\r\n        return\r\n      }\r\n      try{\r\n        const vapidKey=this.$heap.state.settings.firebase.vapidKey\r\n        const messaging = getMessaging();\r\n        const token=await getToken(messaging, {vapidKey});\r\n        const request={\r\n          type:'webpush',\r\n          registration_id:token,\r\n          user_agent:navigator.userAgent\r\n        }\r\n        await jQuery.post(`${this.$heap.state.hostname}MessageSub/itemCreate`,request)\r\n        this.registered=true;\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    },\r\n    async subscribe(){\r\n      try{\r\n        this.permission=await Notification.requestPermission()\r\n        if(this.permission=='granted'){\r\n          this.saveNotificationToken()\r\n        }\r\n      }catch(err){\r\n        this.$flash(\"Вы не разрешили уведомлять вас\")\r\n      }\r\n    },\r\n    init(){\r\n      if(!this.$heap.state?.settings?.firebase){\r\n        return\r\n      }\r\n      initializeApp(this.$heap.state.settings.firebase);\r\n    }\r\n  },\r\n  mounted() {\r\n    const self=this\r\n    this.$topic.on('settingsGet',function(){\r\n      self.init()\r\n      self.saveNotificationToken()\r\n    })\r\n    this.$topic.on('userGet',function(){\r\n      self.saveNotificationToken()\r\n    })\r\n    self.init()\r\n    self.saveNotificationToken()\r\n  },\r\n}\r\n</script>","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { getApp, _getProvider, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\nconst name = \"@firebase/installations\";\nconst version = \"0.5.10\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PENDING_TIMEOUT_MS = 10000;\r\nconst PACKAGE_VERSION = `w:${version}`;\r\nconst INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nconst INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nconst TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nconst SERVICE = 'installations';\r\nconst SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_DESCRIPTION_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"not-registered\" /* NOT_REGISTERED */]: 'Firebase Installation is not registered.',\r\n    [\"installation-not-found\" /* INSTALLATION_NOT_FOUND */]: 'Firebase Installation not found.',\r\n    [\"request-failed\" /* REQUEST_FAILED */]: '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    [\"app-offline\" /* APP_OFFLINE */]: 'Could not process request. Application offline.',\r\n    [\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */]: \"Can't delete installation while there is a pending registration request.\"\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint({ projectId }) {\r\n    return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nasync function getErrorFromResponse(requestName, response) {\r\n    const responseJson = await response.json();\r\n    const errorData = responseJson.error;\r\n    return ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n        requestName,\r\n        serverCode: errorData.code,\r\n        serverMessage: errorData.message,\r\n        serverStatus: errorData.status\r\n    });\r\n}\r\nfunction getHeaders({ apiKey }) {\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, { refreshToken }) {\r\n    const headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nasync function retryIfServerError(fn) {\r\n    const result = await fn();\r\n    if (result.status >= 500 && result.status < 600) {\r\n        // Internal Server Error. Retry request.\r\n        return fn();\r\n    }\r\n    return result;\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function createInstallationRequest({ appConfig, heartbeatServiceProvider }, { fid }) {\r\n    const endpoint = getInstallationsEndpoint(appConfig);\r\n    const headers = getHeaders(appConfig);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        fid,\r\n        authVersion: INTERNAL_AUTH_VERSION,\r\n        appId: appConfig.appId,\r\n        sdkVersion: PACKAGE_VERSION\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const registeredInstallationEntry = {\r\n            fid: responseValue.fid || fid,\r\n            registrationStatus: 2 /* COMPLETED */,\r\n            refreshToken: responseValue.refreshToken,\r\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n        };\r\n        return registeredInstallationEntry;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Create Installation', response);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    const b64 = btoa(String.fromCharCode(...array));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nconst INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        const fidByteArray = new Uint8Array(17);\r\n        const crypto = self.crypto || self.msCrypto;\r\n        crypto.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\r\n        const fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    const b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a string key that can be used to identify the app. */\r\nfunction getKey(appConfig) {\r\n    return `${appConfig.appName}!${appConfig.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst fidChangeCallbacks = new Map();\r\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\r\nfunction fidChanged(appConfig, fid) {\r\n    const key = getKey(appConfig);\r\n    callFidChangeCallbacks(key, fid);\r\n    broadcastFidChange(key, fid);\r\n}\r\nfunction addCallback(appConfig, callback) {\r\n    // Open the broadcast channel if it's not already open,\r\n    // to be able to listen to change events from other tabs.\r\n    getBroadcastChannel();\r\n    const key = getKey(appConfig);\r\n    let callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        callbackSet = new Set();\r\n        fidChangeCallbacks.set(key, callbackSet);\r\n    }\r\n    callbackSet.add(callback);\r\n}\r\nfunction removeCallback(appConfig, callback) {\r\n    const key = getKey(appConfig);\r\n    const callbackSet = fidChangeCallbacks.get(key);\r\n    if (!callbackSet) {\r\n        return;\r\n    }\r\n    callbackSet.delete(callback);\r\n    if (callbackSet.size === 0) {\r\n        fidChangeCallbacks.delete(key);\r\n    }\r\n    // Close broadcast channel if there are no more callbacks.\r\n    closeBroadcastChannel();\r\n}\r\nfunction callFidChangeCallbacks(key, fid) {\r\n    const callbacks = fidChangeCallbacks.get(key);\r\n    if (!callbacks) {\r\n        return;\r\n    }\r\n    for (const callback of callbacks) {\r\n        callback(fid);\r\n    }\r\n}\r\nfunction broadcastFidChange(key, fid) {\r\n    const channel = getBroadcastChannel();\r\n    if (channel) {\r\n        channel.postMessage({ key, fid });\r\n    }\r\n    closeBroadcastChannel();\r\n}\r\nlet broadcastChannel = null;\r\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\r\nfunction getBroadcastChannel() {\r\n    if (!broadcastChannel && 'BroadcastChannel' in self) {\r\n        broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\r\n        broadcastChannel.onmessage = e => {\r\n            callFidChangeCallbacks(e.data.key, e.data.fid);\r\n        };\r\n    }\r\n    return broadcastChannel;\r\n}\r\nfunction closeBroadcastChannel() {\r\n    if (fidChangeCallbacks.size === 0 && broadcastChannel) {\r\n        broadcastChannel.close();\r\n        broadcastChannel = null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DATABASE_NAME = 'firebase-installations-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function set(appConfig, value) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const objectStore = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await objectStore.get(key));\r\n    await objectStore.put(value, key);\r\n    await tx.done;\r\n    if (!oldValue || oldValue.fid !== value.fid) {\r\n        fidChanged(appConfig, value.fid);\r\n    }\r\n    return value;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function remove(appConfig) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nasync function update(appConfig, updateFn) {\r\n    const key = getKey(appConfig);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    const store = tx.objectStore(OBJECT_STORE_NAME);\r\n    const oldValue = (await store.get(key));\r\n    const newValue = updateFn(oldValue);\r\n    if (newValue === undefined) {\r\n        await store.delete(key);\r\n    }\r\n    else {\r\n        await store.put(newValue, key);\r\n    }\r\n    await tx.done;\r\n    if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\r\n        fidChanged(appConfig, newValue.fid);\r\n    }\r\n    return newValue;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nasync function getInstallationEntry(installations) {\r\n    let registrationPromise;\r\n    const installationEntry = await update(installations.appConfig, oldEntry => {\r\n        const installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n        const entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\r\n        registrationPromise = entryWithPromise.registrationPromise;\r\n        return entryWithPromise.installationEntry;\r\n    });\r\n    if (installationEntry.fid === INVALID_FID) {\r\n        // FID generation failed. Waiting for the FID from the server.\r\n        return { installationEntry: await registrationPromise };\r\n    }\r\n    return {\r\n        installationEntry,\r\n        registrationPromise\r\n    };\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    const entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            const registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        const inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        const registrationPromise = registerInstallation(installations, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(installations)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nasync function registerInstallation(installations, installationEntry) {\r\n    try {\r\n        const registeredInstallationEntry = await createInstallationRequest(installations, installationEntry);\r\n        return set(installations.appConfig, registeredInstallationEntry);\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && e.customData.serverCode === 409) {\r\n            // Server returned a \"FID can not be used\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            // Registration failed. Set FID as not registered.\r\n            await set(installations.appConfig, {\r\n                fid: installationEntry.fid,\r\n                registrationStatus: 0 /* NOT_STARTED */\r\n            });\r\n        }\r\n        throw e;\r\n    }\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nasync function waitUntilFidRegistration(installations) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateInstallationRequest(installations.appConfig);\r\n    while (entry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        // createInstallation request still in progress.\r\n        await sleep(100);\r\n        entry = await updateInstallationRequest(installations.appConfig);\r\n    }\r\n    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        const { installationEntry, registrationPromise } = await getInstallationEntry(installations);\r\n        if (registrationPromise) {\r\n            return registrationPromise;\r\n        }\r\n        else {\r\n            // if there is no registrationPromise, entry is registered.\r\n            return installationEntry;\r\n        }\r\n    }\r\n    return entry;\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function generateAuthTokenRequest({ appConfig, heartbeatServiceProvider }, installationEntry) {\r\n    const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    // If heartbeat service exists, add the heartbeat string to the header.\r\n    const heartbeatService = heartbeatServiceProvider.getImmediate({\r\n        optional: true\r\n    });\r\n    if (heartbeatService) {\r\n        const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\r\n        if (heartbeatsHeader) {\r\n            headers.append('x-firebase-client', heartbeatsHeader);\r\n        }\r\n    }\r\n    const body = {\r\n        installation: {\r\n            sdkVersion: PACKAGE_VERSION,\r\n            appId: appConfig.appId\r\n        }\r\n    };\r\n    const request = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (response.ok) {\r\n        const responseValue = await response.json();\r\n        const completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n        return completedAuthToken;\r\n    }\r\n    else {\r\n        throw await getErrorFromResponse('Generate Auth Token', response);\r\n    }\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nasync function refreshAuthToken(installations, forceRefresh = false) {\r\n    let tokenPromise;\r\n    const entry = await update(installations.appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nasync function waitUntilAuthTokenRequest(installations, forceRefresh) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(installations.appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(installations.appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n        // The request timed out or failed in a different call. Try again.\r\n        return refreshAuthToken(installations, forceRefresh);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, oldEntry => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign(Object.assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(installations, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthTokenRequest(installations, installationEntry);\r\n        const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken });\r\n        await set(installations.appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) &&\r\n            (e.customData.serverCode === 401 || e.customData.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(installations.appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n            await set(installations.appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign(Object.assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function getId(installations) {\r\n    const installationsImpl = installations;\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(installationsImpl);\r\n    if (registrationPromise) {\r\n        registrationPromise.catch(console.error);\r\n    }\r\n    else {\r\n        // If the installation is already registered, update the authentication\r\n        // token if needed.\r\n        refreshAuthToken(installationsImpl).catch(console.error);\r\n    }\r\n    return installationEntry.fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\r\nasync function getToken(installations, forceRefresh = false) {\r\n    const installationsImpl = installations;\r\n    await completeInstallationRegistration(installationsImpl);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\r\n    return authToken.token;\r\n}\r\nasync function completeInstallationRegistration(installations) {\r\n    const { registrationPromise } = await getInstallationEntry(installations);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteInstallationRequest(appConfig, installationEntry) {\r\n    const endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n    const headers = getHeadersWithAuth(appConfig, installationEntry);\r\n    const request = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    const response = await retryIfServerError(() => fetch(endpoint, request));\r\n    if (!response.ok) {\r\n        throw await getErrorFromResponse('Delete Installation', response);\r\n    }\r\n}\r\nfunction getDeleteEndpoint(appConfig, { fid }) {\r\n    return `${getInstallationsEndpoint(appConfig)}/${fid}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Deletes the Firebase Installation and all associated data.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\r\nasync function deleteInstallations(installations) {\r\n    const { appConfig } = installations;\r\n    const entry = await update(appConfig, oldEntry => {\r\n        if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n            // Delete the unregistered entry without sending a deleteInstallation request.\r\n            return undefined;\r\n        }\r\n        return oldEntry;\r\n    });\r\n    if (entry) {\r\n        if (entry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n            // Can't delete while trying to register.\r\n            throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n        }\r\n        else if (entry.registrationStatus === 2 /* COMPLETED */) {\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            else {\r\n                await deleteInstallationRequest(appConfig, entry);\r\n                await remove(appConfig);\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n * @param installations - The `Installations` instance.\r\n * @param callback - The callback function that is invoked when FID changes.\r\n * @returns A function that can be called to unsubscribe.\r\n *\r\n * @public\r\n */\r\nfunction onIdChange(installations, callback) {\r\n    const { appConfig } = installations;\r\n    addCallback(appConfig, callback);\r\n    return () => {\r\n        removeCallback(appConfig, callback);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns an instance of {@link Installations} associated with the given\r\n * {@link @firebase/app#FirebaseApp} instance.\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * @public\r\n */\r\nfunction getInstallations(app = getApp()) {\r\n    const installationsImpl = _getProvider(app, 'installations').getImmediate();\r\n    return installationsImpl;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    for (const keyName of configKeys) {\r\n        if (!app.options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INSTALLATIONS_NAME = 'installations';\r\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\r\nconst publicFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Throws if app isn't configured properly.\r\n    const appConfig = extractAppConfig(app);\r\n    const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\r\n    const installationsImpl = {\r\n        app,\r\n        appConfig,\r\n        heartbeatServiceProvider,\r\n        _delete: () => Promise.resolve()\r\n    };\r\n    return installationsImpl;\r\n};\r\nconst internalFactory = (container) => {\r\n    const app = container.getProvider('app').getImmediate();\r\n    // Internal FIS instance relies on public FIS instance.\r\n    const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\r\n    const installationsInternal = {\r\n        getId: () => getId(installations),\r\n        getToken: (forceRefresh) => getToken(installations, forceRefresh)\r\n    };\r\n    return installationsInternal;\r\n};\r\nfunction registerInstallations() {\r\n    _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\" /* PRIVATE */));\r\n}\n\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterInstallations();\r\nregisterVersion(name, version);\r\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\nregisterVersion(name, version, 'esm2017');\n\nexport { deleteInstallations, getId, getInstallations, getToken, onIdChange };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB } from 'idb';\nimport { ErrorFactory, validateIndexedDBOpenable, isIndexedDBAvailable, areCookiesEnabled, getModularInstance } from '@firebase/util';\nimport { _registerComponent, registerVersion, getApp, _getProvider } from '@firebase/app';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nconst DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\r\nconst DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\r\nconst ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\nconst CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\r\nconst CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nconst CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nconst CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\r\nvar MessageType$1;\r\n(function (MessageType) {\r\n    MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\r\n    MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\r\n})(MessageType$1 || (MessageType$1 = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction arrayToBase64(array) {\r\n    const uint8Array = new Uint8Array(array);\r\n    const base64String = btoa(String.fromCharCode(...uint8Array));\r\n    return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\nfunction base64ToArray(base64String) {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    const rawData = atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst OLD_DB_NAME = 'fcm_token_details_db';\r\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\r\nconst OLD_DB_VERSION = 5;\r\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nasync function migrateOldDatabase(senderId) {\r\n    if ('databases' in indexedDB) {\r\n        // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\r\n        // typecast when it lands in TS types.\r\n        const databases = await indexedDB.databases();\r\n        const dbNames = databases.map(db => db.name);\r\n        if (!dbNames.includes(OLD_DB_NAME)) {\r\n            // old DB didn't exist, no need to open.\r\n            return null;\r\n        }\r\n    }\r\n    let tokenDetails = null;\r\n    const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\r\n        upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\r\n            var _a;\r\n            if (oldVersion < 2) {\r\n                // Database too old, skip migration.\r\n                return;\r\n            }\r\n            if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n                // Database did not exist. Nothing to do.\r\n                return;\r\n            }\r\n            const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n            const value = await objectStore.index('fcmSenderId').get(senderId);\r\n            await objectStore.clear();\r\n            if (!value) {\r\n                // No entry in the database, nothing to migrate.\r\n                return;\r\n            }\r\n            if (oldVersion === 2) {\r\n                const oldDetails = value;\r\n                if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\r\n                    return;\r\n                }\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\r\n                    subscriptionOptions: {\r\n                        auth: oldDetails.auth,\r\n                        p256dh: oldDetails.p256dh,\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: typeof oldDetails.vapidKey === 'string'\r\n                            ? oldDetails.vapidKey\r\n                            : arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 3) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n            else if (oldVersion === 4) {\r\n                const oldDetails = value;\r\n                tokenDetails = {\r\n                    token: oldDetails.fcmToken,\r\n                    createTime: oldDetails.createTime,\r\n                    subscriptionOptions: {\r\n                        auth: arrayToBase64(oldDetails.auth),\r\n                        p256dh: arrayToBase64(oldDetails.p256dh),\r\n                        endpoint: oldDetails.endpoint,\r\n                        swScope: oldDetails.swScope,\r\n                        vapidKey: arrayToBase64(oldDetails.vapidKey)\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    });\r\n    db.close();\r\n    // Delete all old databases.\r\n    await deleteDB(OLD_DB_NAME);\r\n    await deleteDB('fcm_vapid_details_db');\r\n    await deleteDB('undefined');\r\n    return checkTokenDetails(tokenDetails) ? tokenDetails : null;\r\n}\r\nfunction checkTokenDetails(tokenDetails) {\r\n    if (!tokenDetails || !tokenDetails.subscriptionOptions) {\r\n        return false;\r\n    }\r\n    const { subscriptionOptions } = tokenDetails;\r\n    return (typeof tokenDetails.createTime === 'number' &&\r\n        tokenDetails.createTime > 0 &&\r\n        typeof tokenDetails.token === 'string' &&\r\n        tokenDetails.token.length > 0 &&\r\n        typeof subscriptionOptions.auth === 'string' &&\r\n        subscriptionOptions.auth.length > 0 &&\r\n        typeof subscriptionOptions.p256dh === 'string' &&\r\n        subscriptionOptions.p256dh.length > 0 &&\r\n        typeof subscriptionOptions.endpoint === 'string' &&\r\n        subscriptionOptions.endpoint.length > 0 &&\r\n        typeof subscriptionOptions.swScope === 'string' &&\r\n        subscriptionOptions.swScope.length > 0 &&\r\n        typeof subscriptionOptions.vapidKey === 'string' &&\r\n        subscriptionOptions.vapidKey.length > 0);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Exported for tests.\r\nconst DATABASE_NAME = 'firebase-messaging-database';\r\nconst DATABASE_VERSION = 1;\r\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n            upgrade: (upgradeDb, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\r\n                // because if there are multiple versions between the old version and the current version, we\r\n                // want ALL the migrations that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        upgradeDb.createObjectStore(OBJECT_STORE_NAME);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Gets record(s) from the objectStore that match the given key. */\r\nasync function dbGet(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tokenDetails = (await db\r\n        .transaction(OBJECT_STORE_NAME)\r\n        .objectStore(OBJECT_STORE_NAME)\r\n        .get(key));\r\n    if (tokenDetails) {\r\n        return tokenDetails;\r\n    }\r\n    else {\r\n        // Check if there is a tokenDetails object in the old DB.\r\n        const oldTokenDetails = await migrateOldDatabase(firebaseDependencies.appConfig.senderId);\r\n        if (oldTokenDetails) {\r\n            await dbSet(firebaseDependencies, oldTokenDetails);\r\n            return oldTokenDetails;\r\n        }\r\n    }\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nasync function dbSet(firebaseDependencies, tokenDetails) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\r\n    await tx.done;\r\n    return tokenDetails;\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nasync function dbRemove(firebaseDependencies) {\r\n    const key = getKey(firebaseDependencies);\r\n    const db = await getDbPromise();\r\n    const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n    await tx.objectStore(OBJECT_STORE_NAME).delete(key);\r\n    await tx.done;\r\n}\r\nfunction getKey({ appConfig }) {\r\n    return appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERROR_MAP = {\r\n    [\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */]: 'Missing App configuration value: \"{$valueName}\"',\r\n    [\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */]: 'This method is available in a Window context.',\r\n    [\"only-available-in-sw\" /* AVAILABLE_IN_SW */]: 'This method is available in a service worker context.',\r\n    [\"permission-default\" /* PERMISSION_DEFAULT */]: 'The notification permission was not granted and dismissed instead.',\r\n    [\"permission-blocked\" /* PERMISSION_BLOCKED */]: 'The notification permission was not granted and blocked instead.',\r\n    [\"unsupported-browser\" /* UNSUPPORTED_BROWSER */]: \"This browser doesn't support the API's required to use the Firebase SDK.\",\r\n    [\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */]: \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\r\n    [\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */]: 'We are unable to register the default service worker. {$browserErrorMessage}',\r\n    [\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */]: 'A problem occurred while subscribing the user to FCM: {$errorInfo}',\r\n    [\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */]: 'FCM returned no token when subscribing the user to push.',\r\n    [\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */]: 'A problem occurred while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    [\"token-update-failed\" /* TOKEN_UPDATE_FAILED */]: 'A problem occurred while updating the user from FCM: {$errorInfo}',\r\n    [\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */]: 'FCM returned no token when updating the user to push.',\r\n    [\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */]: 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    [\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */]: 'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\r\n    [\"invalid-bg-handler\" /* INVALID_BG_HANDLER */]: 'The input to setBackgroundMessageHandler() must be a function.',\r\n    [\"invalid-vapid-key\" /* INVALID_VAPID_KEY */]: 'The public VAPID key must be a string.',\r\n    [\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */]: 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function requestGetToken(firebaseDependencies, subscriptionOptions) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(subscriptionOptions);\r\n    const subscribeOptions = {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestUpdateToken(firebaseDependencies, tokenDetails) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const body = getBody(tokenDetails.subscriptionOptions);\r\n    const updateOptions = {\r\n        method: 'PATCH',\r\n        headers,\r\n        body: JSON.stringify(body)\r\n    };\r\n    let responseData;\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`, updateOptions);\r\n        responseData = await response.json();\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n    if (responseData.error) {\r\n        const message = responseData.error.message;\r\n        throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n            errorInfo: message\r\n        });\r\n    }\r\n    if (!responseData.token) {\r\n        throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n    }\r\n    return responseData.token;\r\n}\r\nasync function requestDeleteToken(firebaseDependencies, token) {\r\n    const headers = await getHeaders(firebaseDependencies);\r\n    const unsubscribeOptions = {\r\n        method: 'DELETE',\r\n        headers\r\n    };\r\n    try {\r\n        const response = await fetch(`${getEndpoint(firebaseDependencies.appConfig)}/${token}`, unsubscribeOptions);\r\n        const responseData = await response.json();\r\n        if (responseData.error) {\r\n            const message = responseData.error.message;\r\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                errorInfo: message\r\n            });\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n            errorInfo: err\r\n        });\r\n    }\r\n}\r\nfunction getEndpoint({ projectId }) {\r\n    return `${ENDPOINT}/projects/${projectId}/registrations`;\r\n}\r\nasync function getHeaders({ appConfig, installations }) {\r\n    const authToken = await installations.getToken();\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': appConfig.apiKey,\r\n        'x-goog-firebase-installations-auth': `FIS ${authToken}`\r\n    });\r\n}\r\nfunction getBody({ p256dh, auth, endpoint, vapidKey }) {\r\n    const body = {\r\n        web: {\r\n            endpoint,\r\n            auth,\r\n            p256dh\r\n        }\r\n    };\r\n    if (vapidKey !== DEFAULT_VAPID_KEY) {\r\n        body.web.applicationPubKey = vapidKey;\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// UpdateRegistration will be called once every week.\r\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nasync function getTokenInternal(messaging) {\r\n    const pushSubscription = await getPushSubscription(messaging.swRegistration, messaging.vapidKey);\r\n    const subscriptionOptions = {\r\n        vapidKey: messaging.vapidKey,\r\n        swScope: messaging.swRegistration.scope,\r\n        endpoint: pushSubscription.endpoint,\r\n        auth: arrayToBase64(pushSubscription.getKey('auth')),\r\n        p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\r\n    };\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (!tokenDetails) {\r\n        // No token, get a new one.\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\r\n        // Invalid token, get a new one.\r\n        try {\r\n            await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        }\r\n        catch (e) {\r\n            // Suppress errors because of #2364\r\n            console.warn(e);\r\n        }\r\n        return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\r\n    }\r\n    else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\r\n        // Weekly token refresh\r\n        return updateToken(messaging, {\r\n            token: tokenDetails.token,\r\n            createTime: Date.now(),\r\n            subscriptionOptions\r\n        });\r\n    }\r\n    else {\r\n        // Valid token, nothing to do.\r\n        return tokenDetails.token;\r\n    }\r\n}\r\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\r\nasync function deleteTokenInternal(messaging) {\r\n    const tokenDetails = await dbGet(messaging.firebaseDependencies);\r\n    if (tokenDetails) {\r\n        await requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\r\n        await dbRemove(messaging.firebaseDependencies);\r\n    }\r\n    // Unsubscribe from the push subscription.\r\n    const pushSubscription = await messaging.swRegistration.pushManager.getSubscription();\r\n    if (pushSubscription) {\r\n        return pushSubscription.unsubscribe();\r\n    }\r\n    // If there's no SW, consider it a success.\r\n    return true;\r\n}\r\nasync function updateToken(messaging, tokenDetails) {\r\n    try {\r\n        const updatedToken = await requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\r\n        const updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), { token: updatedToken, createTime: Date.now() });\r\n        await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\r\n        return updatedToken;\r\n    }\r\n    catch (e) {\r\n        await deleteTokenInternal(messaging);\r\n        throw e;\r\n    }\r\n}\r\nasync function getNewToken(firebaseDependencies, subscriptionOptions) {\r\n    const token = await requestGetToken(firebaseDependencies, subscriptionOptions);\r\n    const tokenDetails = {\r\n        token,\r\n        createTime: Date.now(),\r\n        subscriptionOptions\r\n    };\r\n    await dbSet(firebaseDependencies, tokenDetails);\r\n    return tokenDetails.token;\r\n}\r\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\r\nasync function getPushSubscription(swRegistration, vapidKey) {\r\n    const subscription = await swRegistration.pushManager.getSubscription();\r\n    if (subscription) {\r\n        return subscription;\r\n    }\r\n    return swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\r\n        // submitted to pushManager#subscribe must be of type Uint8Array.\r\n        applicationServerKey: base64ToArray(vapidKey)\r\n    });\r\n}\r\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\r\nfunction isTokenValid(dbOptions, currentOptions) {\r\n    const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\r\n    const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\r\n    const isAuthEqual = currentOptions.auth === dbOptions.auth;\r\n    const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\r\n    return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction externalizePayload(internalPayload) {\r\n    const payload = {\r\n        from: internalPayload.from,\r\n        // eslint-disable-next-line camelcase\r\n        collapseKey: internalPayload.collapse_key,\r\n        // eslint-disable-next-line camelcase\r\n        messageId: internalPayload.fcmMessageId\r\n    };\r\n    propagateNotificationPayload(payload, internalPayload);\r\n    propagateDataPayload(payload, internalPayload);\r\n    propagateFcmOptions(payload, internalPayload);\r\n    return payload;\r\n}\r\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.notification) {\r\n        return;\r\n    }\r\n    payload.notification = {};\r\n    const title = messagePayloadInternal.notification.title;\r\n    if (!!title) {\r\n        payload.notification.title = title;\r\n    }\r\n    const body = messagePayloadInternal.notification.body;\r\n    if (!!body) {\r\n        payload.notification.body = body;\r\n    }\r\n    const image = messagePayloadInternal.notification.image;\r\n    if (!!image) {\r\n        payload.notification.image = image;\r\n    }\r\n}\r\nfunction propagateDataPayload(payload, messagePayloadInternal) {\r\n    if (!messagePayloadInternal.data) {\r\n        return;\r\n    }\r\n    payload.data = messagePayloadInternal.data;\r\n}\r\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\r\n    var _a, _b, _c, _d, _e;\r\n    // fcmOptions.link value is written into notification.click_action. see more in b/232072111\r\n    if (!messagePayloadInternal.fcmOptions &&\r\n        !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\r\n        return;\r\n    }\r\n    payload.fcmOptions = {};\r\n    const link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\r\n    if (!!link) {\r\n        payload.fcmOptions.link = link;\r\n    }\r\n    // eslint-disable-next-line camelcase\r\n    const analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\r\n    if (!!analyticsLabel) {\r\n        payload.fcmOptions.analyticsLabel = analyticsLabel;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isConsoleMessage(data) {\r\n    // This message has a campaign ID, meaning it was sent using the Firebase Console.\r\n    return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\r\nfunction _mergeStrings(s1, s2) {\r\n    const resultArray = [];\r\n    for (let i = 0; i < s1.length; i++) {\r\n        resultArray.push(s1.charAt(i));\r\n        if (i < s2.length) {\r\n            resultArray.push(s2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration Object');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    const configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId',\r\n        'messagingSenderId'\r\n    ];\r\n    const { options } = app;\r\n    for (const keyName of configKeys) {\r\n        if (!options[keyName]) {\r\n            throw getMissingValueError(keyName);\r\n        }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: options.projectId,\r\n        apiKey: options.apiKey,\r\n        appId: options.appId,\r\n        senderId: options.messagingSenderId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass MessagingService {\r\n    constructor(app, installations, analyticsProvider) {\r\n        // logging is only done with end user consent. Default to false.\r\n        this.deliveryMetricsExportedToBigQueryEnabled = false;\r\n        this.onBackgroundMessageHandler = null;\r\n        this.onMessageHandler = null;\r\n        this.logEvents = [];\r\n        this.isLogServiceStarted = false;\r\n        const appConfig = extractAppConfig(app);\r\n        this.firebaseDependencies = {\r\n            app,\r\n            appConfig,\r\n            installations,\r\n            analyticsProvider\r\n        };\r\n    }\r\n    _delete() {\r\n        return Promise.resolve();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function registerDefaultSw(messaging) {\r\n    var _a;\r\n    try {\r\n        messaging.swRegistration = await navigator.serviceWorker.register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        });\r\n        // The timing when browser updates sw when sw has an update is unreliable from experiment. It\r\n        // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\r\n        // is stuck with the old version. For example,\r\n        // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\r\n        // sw if there was an update.\r\n        messaging.swRegistration.update().catch(() => {\r\n            /* it is non blocking and we don't care if it failed */\r\n        });\r\n    }\r\n    catch (e) {\r\n        throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n            browserErrorMessage: (_a = e) === null || _a === void 0 ? void 0 : _a.message\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateSwReg(messaging, swRegistration) {\r\n    if (!swRegistration && !messaging.swRegistration) {\r\n        await registerDefaultSw(messaging);\r\n    }\r\n    if (!swRegistration && !!messaging.swRegistration) {\r\n        return;\r\n    }\r\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\r\n        throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\r\n    }\r\n    messaging.swRegistration = swRegistration;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function updateVapidKey(messaging, vapidKey) {\r\n    if (!!vapidKey) {\r\n        messaging.vapidKey = vapidKey;\r\n    }\r\n    else if (!messaging.vapidKey) {\r\n        messaging.vapidKey = DEFAULT_VAPID_KEY;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function getToken$1(messaging, options) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    if (Notification.permission === 'default') {\r\n        await Notification.requestPermission();\r\n    }\r\n    if (Notification.permission !== 'granted') {\r\n        throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n    }\r\n    await updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\r\n    await updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\r\n    return getTokenInternal(messaging);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function logToScion(messaging, messageType, data) {\r\n    const eventType = getEventType(messageType);\r\n    const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\r\n    analytics.logEvent(eventType, {\r\n        /* eslint-disable camelcase */\r\n        message_id: data[CONSOLE_CAMPAIGN_ID],\r\n        message_name: data[CONSOLE_CAMPAIGN_NAME],\r\n        message_time: data[CONSOLE_CAMPAIGN_TIME],\r\n        message_device_time: Math.floor(Date.now() / 1000)\r\n        /* eslint-enable camelcase */\r\n    });\r\n}\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function messageEventListener(messaging, event) {\r\n    const internalPayload = event.data;\r\n    if (!internalPayload.isFirebaseMessaging) {\r\n        return;\r\n    }\r\n    if (messaging.onMessageHandler &&\r\n        internalPayload.messageType === MessageType.PUSH_RECEIVED) {\r\n        if (typeof messaging.onMessageHandler === 'function') {\r\n            messaging.onMessageHandler(externalizePayload(internalPayload));\r\n        }\r\n        else {\r\n            messaging.onMessageHandler.next(externalizePayload(internalPayload));\r\n        }\r\n    }\r\n    // Log to Scion if applicable\r\n    const dataPayload = internalPayload.data;\r\n    if (isConsoleMessage(dataPayload) &&\r\n        dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1') {\r\n        await logToScion(messaging, internalPayload.messageType, dataPayload);\r\n    }\r\n}\n\nconst name = \"@firebase/messaging\";\nconst version = \"0.9.14\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WindowMessagingFactory = (container) => {\r\n    const messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\r\n    navigator.serviceWorker.addEventListener('message', e => messageEventListener(messaging, e));\r\n    return messaging;\r\n};\r\nconst WindowMessagingInternalFactory = (container) => {\r\n    const messaging = container\r\n        .getProvider('messaging')\r\n        .getImmediate();\r\n    const messagingInternal = {\r\n        getToken: (options) => getToken$1(messaging, options)\r\n    };\r\n    return messagingInternal;\r\n};\r\nfunction registerMessagingInWindow() {\r\n    _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\" /* PUBLIC */));\r\n    _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\" /* PRIVATE */));\r\n    registerVersion(name, version);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\r\nasync function isWindowSupported() {\r\n    try {\r\n        // This throws if open() is unsupported, so adding it to the conditional\r\n        // statement below can cause an uncaught error.\r\n        await validateIndexedDBOpenable();\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\r\n    // might be prohibited to run. In these contexts, an error would be thrown during the messaging\r\n    // instantiating phase, informing the developers to import/call isSupported for special handling.\r\n    return (typeof window !== 'undefined' &&\r\n        isIndexedDBAvailable() &&\r\n        areCookiesEnabled() &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nasync function deleteToken$1(messaging) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    if (!messaging.swRegistration) {\r\n        await registerDefaultSw(messaging);\r\n    }\r\n    return deleteTokenInternal(messaging);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction onMessage$1(messaging, nextOrObserver) {\r\n    if (!navigator) {\r\n        throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    }\r\n    messaging.onMessageHandler = nextOrObserver;\r\n    return () => {\r\n        messaging.onMessageHandler = null;\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\r\nfunction getMessagingInWindow(app = getApp()) {\r\n    // Conscious decision to make this async check non-blocking during the messaging instance\r\n    // initialization phase for performance consideration. An error would be thrown latter for\r\n    // developer's information. Developers can then choose to import and call `isSupported` for\r\n    // special handling.\r\n    isWindowSupported().then(isSupported => {\r\n        // If `isWindowSupported()` resolved, but returned false.\r\n        if (!isSupported) {\r\n            throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n    }, _ => {\r\n        // If `isWindowSupported()` rejected.\r\n        throw ERROR_FACTORY.create(\"indexed-db-unsupported\" /* INDEXED_DB_UNSUPPORTED */);\r\n    });\r\n    return _getProvider(getModularInstance(app), 'messaging').getImmediate();\r\n}\r\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If a notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optinoal service worker registration\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\r\nasync function getToken(messaging, options) {\r\n    messaging = getModularInstance(messaging);\r\n    return getToken$1(messaging, options);\r\n}\r\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\r\nfunction deleteToken(messaging) {\r\n    messaging = getModularInstance(messaging);\r\n    return deleteToken$1(messaging);\r\n}\r\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\r\nfunction onMessage(messaging, nextOrObserver) {\r\n    messaging = getModularInstance(messaging);\r\n    return onMessage$1(messaging, nextOrObserver);\r\n}\n\n/**\r\n * Firebase Cloud Messaging\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterMessagingInWindow();\n\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };\n//# sourceMappingURL=index.esm2017.js.map\n","import { render } from \"./MsgDashboard.vue?vue&type=template&id=50f4a801\"\nimport script from \"./MsgDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./MsgDashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"W:\\\\Ionic\\\\Tezkel\\\\blank\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_createBlock","_component_base_layout","pageTitle","$data","_component_ion_card","color","_createVNode","_component_ion_card_header","_component_ion_card_title","_component_ion_card_content","_component_ion_button","onClick","$options","expand","_createElementBlock","_hoisted_7","_hoisted_9","_component_ion_list","_component_ion_item_divider","_component_ion_item","instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","result","addEventListener","then","value","set","catch","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","undefined","objectStore","replaceTraps","callback","wrapFunction","func","transaction","includes","args","apply","unwrap","this","storeNames","call","sort","transformCachableValue","Proxy","IDBRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","SERVICE","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","isServerError","code","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","getExpiresInFromResponseExpiresIn","creationTime","Date","now","getErrorFromResponse","requestName","responseJson","json","errorData","create","serverCode","serverMessage","message","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","fn","responseExpiresIn","Number","createInstallationRequest","heartbeatServiceProvider","fid","endpoint","heartbeatService","getImmediate","optional","heartbeatsHeader","getHeartbeatsHeader","body","authVersion","appId","sdkVersion","JSON","stringify","fetch","ok","responseValue","registeredInstallationEntry","registrationStatus","authToken","sleep","ms","setTimeout","bufferToBase64UrlSafe","array","b64","btoa","String","fromCharCode","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","crypto","self","msCrypto","getRandomValues","encode","test","_a","b64String","substr","getKey","appName","fidChangeCallbacks","fidChanged","key","callFidChangeCallbacks","broadcastFidChange","callbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastChannel","BroadcastChannel","onmessage","e","data","size","close","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","createObjectStore","oldValue","put","remove","delete","update","updateFn","getInstallationEntry","installations","registrationPromise","installationEntry","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","entry","clearTimedOutRequest","navigator","onLine","registrationPromiseWithError","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","customData","updateInstallationRequest","hasInstallationRequestTimedOut","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","installation","completedAuthToken","refreshAuthToken","forceRefresh","tokenPromise","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","hasAuthTokenRequestTimedOut","Object","assign","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","requestTime","getId","installationsImpl","console","getToken","completeInstallationRegistration","extractAppConfig","app","options","getMissingValueError","configKeys","keyName","valueName","INSTALLATIONS_NAME","INSTALLATIONS_NAME_INTERNAL","publicFactory","container","getProvider","_delete","internalFactory","installationsInternal","registerInstallations","deleteDatabase","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","MessageType$1","MessageType","arrayToBase64","uint8Array","base64String","base64ToArray","padding","repeat","length","base64","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","databases","dbNames","map","tokenDetails","upgradeTransaction","contains","clear","oldDetails","auth","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","upgradeDb","dbGet","firebaseDependencies","oldTokenDetails","dbSet","dbRemove","ERROR_MAP","requestGetToken","getBody","subscribeOptions","responseData","getEndpoint","err","errorInfo","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","pushSubscription","getPushSubscription","swRegistration","scope","isTokenValid","updateToken","warn","getNewToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","propagateNotificationPayload","propagateDataPayload","propagateFcmOptions","messagePayloadInternal","notification","title","image","_b","_c","_d","_e","fcmOptions","click_action","link","analyticsLabel","analytics_label","isConsoleMessage","_mergeStrings","s1","s2","resultArray","push","charAt","join","messagingSenderId","MessagingService","constructor","analyticsProvider","deliveryMetricsExportedToBigQueryEnabled","onBackgroundMessageHandler","onMessageHandler","logEvents","isLogServiceStarted","registerDefaultSw","serviceWorker","register","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","getToken$1","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","analytics","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","Error","messageEventListener","isFirebaseMessaging","next","dataPayload","WindowMessagingFactory","WindowMessagingInternalFactory","messagingInternal","registerMessagingInWindow","isWindowSupported","window","hasOwnProperty","PushSubscription","getMessagingInWindow","isSupported","_","components","IonButton","IonCard","IonCardHeader","IonCardTitle","IonCardSubtitle","IonCardContent","IonList","IonItem","IonItemDivider","registered","methods","$heap","state","user","user_id","settings","firebase","getMessaging","type","registration_id","user_agent","userAgent","jQuery","hostname","log","saveNotificationToken","$flash","init","initializeApp","mounted","$topic","on","__exports__","render"],"sourceRoot":""}